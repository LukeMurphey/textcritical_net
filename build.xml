<project default="package" name="textcritical.com">

    <!--
    Load the properties files, local is loaded first since properties are immutable (cannot be changed
    by later property files) and we want the local properties to override the default properties
    -->
    <property file="local.properties" />
    <property file="default.properties" />
	
	<!-- Set up JRuby so that SASS can run -->
	<path id="JRuby">
	    <fileset file="lib/jruby-complete-1.6.7.2.jar"/>
	</path> 
	
    <!-- ================================= 
          target: compile
         ================================= -->
	<target name="compile" description="Compile the application" depends="compile_scss,minify_js"></target>
	
    <!-- ================================= 
          target: get_build_number
         ================================= -->
    <target name="get_build_number">
        <taskdef name="svn" classpath="lib/svnant.jar;lib/svnClientAdapter.jar;lib/sqljet-1.1.5.jar;lib/antlr-runtime-3.4.jar;lib/sequence-library-1.0.2.jar;lib/jna-3.4.0.jar;lib/svnkit-javahl16-1.7.6.jar;lib/svnkit-1.7.6.jar" classname="org.tigris.subversion.svnant.SvnTask" />
            	
        <svn svnkit="true" javahl="false">
            <info target="${value.build.workingcopy.directory}" />
            <wcVersion prefix="svn." path="${value.build.workingcopy.directory}" />
        </svn>
    </target>

    <!-- ================================= 
          target: update_build_info
         ================================= -->
    <target name="update_build_info" depends="get_build_number">
        <propertyfile file="src/VERSION" comment="Build Information File">
            <entry key="build.number" value="${svn.revision.max}" />
            <entry key="build.date" type="date" value="now" pattern="dd.MM.yyyy HH:mm" />
            <entry key="build.version" value="${value.build.version}" />
        </propertyfile>
    </target>
	
    <!-- ================================= 
          target: package
         ================================= -->
	<target name="package" depends="package_app,package_media" description="Create the package">
	</target>
	
    <!-- ================================= 
          target: package_app
         ================================= -->
    <target name="package_app" depends="get_build_number" description="Create the application package (sans media)">
        <mkdir dir="${value.build.packageoutput.directory}" />
        <zip destfile="${value.build.packageoutput.directory}/textcritical_app_${svn.revision.max}.zip"
            basedir="src"
            excludes="reader/test/**, reader/tests.py, admin/**, media/**, **/*.pyc, textcritical/settings.py"
            whenempty="create"
        />
    </target>
	
    <!-- ================================= 
          target: package_media
         ================================= -->
    <target name="package_media" depends="minify_js,compile_scss,get_build_number" description="Create the media-only package">
        <mkdir dir="${value.build.packageoutput.directory}" />
        <zip destfile="${value.build.packageoutput.directory}/textcritical_media_${svn.revision.max}.zip"
            basedir="src"
        	includes="admin/**, media/**"
            excludes="**/*.sass"
            whenempty="create"
        />
    </target>
	
    <!-- ================================= 
          target: verify
         ================================= -->
	<target name="verify" description="Verify that the package appears to be valid"></target>
	
	
	<target name="test"></target>
	<target name="deploy"></target>
	
	
    <!-- ================================= 
          target: compile_scss
         ================================= -->
    <target name="compile_scss" description="Compile the SCSS files">
    	
        <echo message="Compiling scss files..." />
    	
        <property name="filesIn" value="src/media/stylesheets/[^_]*.scss" />
    	<property name="includes" value="lib/sass_includes" />
        <property name="fileOutDir" value="src/media/stylesheets" />
    	
        <script language="ruby" classpathref="JRuby">
            <![CDATA[
                require 'lib/sass-3.2.1/lib/sass'
                require 'sass/exec'
    
                files = Dir.glob($project.getProperty('filesIn'))
                #Dir.mkdir($project.getProperty('fileOutDir')) unless File.exists?($project.getProperty('fileOutDir'))
                files.each do 
                    | file |
                    puts "     [sass compiler] " + file + " -> " + $project.getProperty('fileOutDir') + "/" + File.basename(file, ".*") + ".css"
                    opts = Sass::Exec::Sass.new(["--load-path", $project.getProperty('includes'), "--load-path", File.dirname(file), file, File.join($project.getProperty('fileOutDir'), File.basename(file, ".*") + ".css")])
                    opts.parse
                end
            ]]>
        </script>
        <echo message="Done compiling scss files!" />
    </target>

    <!-- ================================= 
          target: Minify JavaScript
         ================================= -->
	<target name="minify_js" description="Minifies the application JavaScript">
		
		<!-- The mapper to add "min" to the file name -->
		<mapper id="minified_js_mapper" type="glob" from="*.js" to="*.min.js" />
		
		<!-- Pattern set to match all of the application files -->
		<patternset id="minify_js_files">
		    <include name="src/media/javascripts/app.js" />
		</patternset>
		
	    <apply executable="java" parallel="false">
	        <fileset dir="." includes="src/media/javascripts/app.js">
	        	<patternset refid="minify_js_files" />
	        </fileset>
	        <arg line="-jar" />
	        <arg path="lib/yuicompressor-2.4.7.jar" />
	        <srcfile />
	        <arg line="-o"/>
	    	<mapper refid="minified_js_mapper" />
	        <targetfile />
	    </apply>
	</target>
	
</project>