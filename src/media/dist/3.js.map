{"version":3,"sources":["webpack:///./src/components/PopupDialog/index.jsx","webpack:///./src/components/Constants/index.js","webpack:///./src/components/WordInformation/WordLemma.css?af8a","webpack:///./src/components/WordInformation/WordLemma.css","webpack:///./src/components/PopupDialog/PopupDialog.scss?1847","webpack:///./src/components/PopupDialog/PopupDialog.scss","webpack:///./src/components/WordInformation/WordLemma.jsx","webpack:///./src/components/WordInformation/index.jsx","webpack:///./src/components/WordInformation/ExternalLookupLinks.jsx","webpack:///./src/components/WordInformation/WordInformationPopup.jsx","webpack:///./src/components/Reader/Chapter.scss?d12e","webpack:///./src/components/Reader/Chapter.scss","webpack:///./src/components/Reader/index.scss?c721","webpack:///./src/components/Reader/index.scss","webpack:///./src/components/UserNoteDialog/NotesList.scss?65ec","webpack:///./src/components/UserNoteDialog/NotesList.scss","webpack:///./src/components/Settings/LocalStorage/index.js","webpack:///./src/components/Settings/worksList.js","webpack:///./src/components/Settings/fontAdjustment.js","webpack:///./src/components/AboutWorkDialog/index.jsx","webpack:///./src/components/WorkDownloadDialog/index.jsx","webpack:///./src/components/Reader/shortcuts.jsx","webpack:///./src/components/Reader/ChapterDomReplacer.jsx","webpack:///./src/components/Reader/ChapterEventHandlers.jsx","webpack:///./src/components/Reader/Chapter.jsx","webpack:///./src/components/AboutDialog/index.jsx","webpack:///./src/components/Reader/NoWorkSelected.jsx","webpack:///./src/components/FavoriteWorks/WorkCard.jsx","webpack:///./src/components/FavoriteWorks/index.jsx","webpack:///./src/components/Reader/BookProgress.jsx","webpack:///./src/components/Reader/BookSidebar.jsx","webpack:///./src/components/Icons/Library.svg","webpack:///./src/components/LazyImage/index.jsx","webpack:///./src/components/BookSelection/index.jsx","webpack:///./src/components/Settings/RemoteStorage/index.js","webpack:///./src/components/GlobalAppContext/index.jsx","webpack:///./src/components/Reader/ReadingMenuBar.jsx","webpack:///./src/components/Reader/ChapterHeader.jsx","webpack:///./src/components/Reader/StaleURLMessage.jsx","webpack:///./src/components/Reader/WarningMessages.jsx","webpack:///./src/components/FootnotePopup/index.jsx","webpack:///./src/components/UserNoteDialog/NotesList.jsx","webpack:///./src/components/UserNoteDialog/index.jsx","webpack:///./src/components/ContextPopup/index.jsx","webpack:///./src/components/Reader/Popups.jsx","webpack:///./src/components/Reader/index.jsx","webpack:///./src/App.jsx"],"names":["getPositionRecommendation","event","clientX","window","innerWidth","clientY","innerHeight","PopupDialog","children","onClose","x","y","positionBelow","positionRight","footer","width","maxHeight","inverted","frameless","closeButtonStyle","float","cursor","marginRight","segmentStyle","position","overflowY","padding","zIndex","segmentStyleTinyTop","top","left","segmentStyleTinyBelow","bottom","getSegmentStyle","footerStyle","height","open","className","style","onClick","basic","propTypes","PropTypes","func","isRequired","number","bool","element","defaultProps","MODE_LOADING","MODE_ERROR","MODE_DONE","MODE_NOT_READY","api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","WordLemma","props","lexiconEntries","length","Message","warning","Icon","name","map","lexiconEntry","key","lemma_lexical_form","dangerouslySetInnerHTML","__html","definition","arrayOf","shape","WordInformation","word","work","searchState","useState","loading","setLoading","wordInfo","setWordInfo","error","setError","activeIndex","setActiveIndex","useEffect","fetch","ENDPOINT_WORD_PARSE","then","res","json","data","e","toString","mode","ignoring_diacritics","Accordion","marginTop","fluid","entry","index","Fragment","form","description","Title","active","titleProps","handleClick","lemma","meaning","Content","lexicon_entries","state","to","pathname","SEARCH","search","PARAMS_SEARCH","getSearchLinks","ErrorMessage","title","message","Placeholder","Header","Line","Paragraph","string","object","ExternalLookupLinks","target","rel","href","PERSEUS_WORD_LOOKUP","LOGEION_WORD_LOOKUP","GOOGLE_SEARCH","WordInformationDialog","storageAvailable","localStorage","setItem","removeItem","chooseStorage","storageOverride","console","warn","getWorksList","storage","worksList","getItem","worksListParsed","JSON","parse","filter","workTitleSlug","err","getWorksLastRead","LAST_READ_HISTORY","getFavoriteWorks","FAVORITE_WORKS","setFavoritesProgress","divisions","divisionReference","favoriteWorks","findIndex","stringify","setWorkProgress","lastReadHistory","lastReadEntry","slice","splice","setFontAdjustment","adjustment","FONT_ADJUSTMENT","AboutWorkDialog","setData","getInfoRow","Table","Row","Cell","ENDPOINT_WORK_INFO","newData","Modal","size","defaultOpen","scrolling","display","Image","src","ENDPOINT_WORK_IMAGE","celled","collapsing","Body","language","source","source_description","wiki_info","summary","image","Actions","url","Button","WorkDownloadDialog","format","setFormat","handleChange","value","stryle","marginBottom","Form","Field","Radio","label","checked","onChange","d","primary","document","location","ENDPOINT_WORK_DOWNLOAD","getDivisionText","division","useTitles","descriptorsAreNames","toTitleCase","descriptor","type","workSearch","query","queryLower","toLowerCase","opt","text","includes","getPlaceholder","paddingTop","getDomReplaceFunction","highlightedWords","verseIdentifierPrefix","highlightedVerse","notesMetaData","attribs","wordText","highlightIndex","indexOfNoDiacritic","domToReact","verseClassName","id","find","verseID","identifierMatch","exec","identifier","metaData","verse_indicator","determineEventTargetType","getVerseInfoFromVerseLinkElement","verseLinkElement","verseDescriptor","verse","verseDescriptorElem","Array","from","attributes","nodeValue","verseElem","findVerseLinkElement","currentTarget","attempts","parentElement","verseLinkElements","getElementsByClassName","info","getVerseInfoFromEvent","getWordFromEvent","innerText","getNoteFromEvent","contentsElem","getElementById","contents","textContent","Chapter","onVerseClick","onNoteClick","onWordClick","onWordHover","onClickAway","onContextClick","fontSizeAdjustment","clickListener","useRef","hoverListener","contextListener","highlightOverridden","wrapper","createRef","addHandler","handler","current","addEventListener","removeHandler","removeEventListener","handleClickContext","preventDefault","eventType","getEventInfo","contextType","contextData","handleClickEmpty","handleClickWord","handleClickVerse","handleClickNote","handleHover","replace","condition","node","modify","reactElement","ref","getChapterContent","AboutDialog","serverVersionInfo","setServerVersionInfo","ENDPOINT_VERSION_INFO","getInfoLinkRow","link","linkName","prefix","VersionInfo","version","build","build_date","NoWorkSelected","WorkCard","history","setFavoriteWork","removeFavoriteWork","titleSlug","ENDPOINT_RESOLVE_REFERENCE","workData","onLoadWork","workUrl","READ_WORK","provideDropdown","Card","Responsive","minWidth","floated","maxWidth","lineHeight","overflow","textOverflow","color","fontWeight","truncate","work_title","Meta","division_title","Loader","extra","Group","Dropdown","textAlign","floating","trigger","Menu","Item","icon","data-testid","withRouter","FavoriteWorks","storageProvider","recentlyRead","favorites","setValue","onFavWork","favoriteEntry","onUnFavWork","as","clearWorksLastRead","clear","itemsPerRow","clearFavorites","BookProgress","classNameSuffix","total_chapters","total_chapters_in_book","Segment","horizontal","border","completed_chapters_in_book","Math","round","progress_in_book","Progress","margin","percent","BookSidebar","sidebarVisible","openWorkInfoModal","openDownloadModal","openSearch","setSidebarVisible","Sidebar","animation","visible","onHide","vertical","LazyImage","show","setShow","Visibility","onOnScreen","inline","ClickStyle","BookSelection","relatedWorks","onSelectWork","loadedWork","authors","works","setWorks","setSearch","searchInput","isRelatedWork","relatedWork","title_slug","loadInfo","ENDPOINT_WORKS_LISTS","worksData","worksToSort","sort","a","b","focus","isSameAuthor","author","searchLowerCase","onChangeDebounced","AwesomeDebouncePromise","onSearchChange","onLargeScreen","Input","placeholder","editor","workMatchesSearch","lazyLoad","isRelated","thisIsSameAuthor","isLoadedWork","paddingRight","Label","circular","empty","getWorkRow","RemoteStorage","prefs","csrfToken","this","store","searchParams","URLSearchParams","ENDPOINT_USER_PREFERENCE_EDIT","method","body","headers","ENDPOINT_USER_PREFERENCE_DELETE","GlobalAppContext","React","createContext","GlobalAppContextProvider","authInfo","setAuthInfo","authLoadingDone","setAuthLoadingDone","setStorageProvider","getAuthInfo","ENDPOINT_SOCIAL_LOGIN","authenticated","Object","prototype","hasOwnProperty","call","csrf_token","ENDPOINT_USER_PREFERENCES","Provider","features","authentication","checkAuthenticationState","NextPageStyle","right","PriorPageStyle","resolveReferenceDebounced","reference","ReadingMenuBar","toggleSidebarVisible","setBookSelectionOpen","bookSelectionOpen","goToReference","openAboutModal","referenceValue","hasPriorChapter","hasNextChapter","goToPriorChapter","goToNextChapter","nextChapterDescriptor","previousChapterDescriptor","increaseFontSize","decreaseFontSize","increaseFontSizeDisabled","decreaseFontSizeDisabled","useContext","tempReferenceValue","setTempReferenceValue","referenceValid","setReferenceValid","lastSetReference","menuOpen","setMenuOpen","checkAndGoToReference","requestedWork","requestedReferenceValue","Promise","all","status","referenceInfo","preloadChapters","ENDPOINT_READ_WORK","ctrlKey","fixed","Container","Popup","on","pinned","onOpen","LibraryIcon","alt","action","disabled","onKeyPress","paddingLeft","marginLeft","first_name","direction","onBlur","START_PAGE","NOTES","logout","checkAuthWindowURL","loginWindow","authSucceeded","close","DOMException","setTimeout","login_google","BETA_CODE_CONVERT","authenticationCompleted","ChapterHeader","onChangeChapter","chapter","parent_division","deburr","longNames","reduce","accumulator","full_title","hasLongDivisionNames","test","areDescriptorsNames","StaleURLMessage","WarningMessages","warnings","header","FootnoteDialog","notes","note","UserNotesList","onSelectNote","onCreateNewNote","topContent","isLoading","UserNotesTable","UserNoteDialog","setMessage","isEditing","setIsEditing","loadedNote","setLoadedNote","setNotes","setIsLoading","fetchNotes","getNotes","onSuccess","onError","join","includeRelated","cancelEditOrViewing","positive","UserNoteEditor","onCancel","onSave","_","isNew","NoteViewer","onEdit","onDelete","noteId","confirm","deleteNote","ContextPopup","userNoteDialogOpen","setUserNoteDialogOpen","getDivisionReference","copyVerseToClipboard","ENDPOINT_WORK_TEXT","navigator","clipboard","writeText","copyChapterToClipboard","copyLinkToClipboard","undefined","protocol","host","createUserNote","searchAllWorks","searchThisWork","menuItems","userNotesEnabled","getMenuItems","Popups","modal","selectedWord","popupX","popupY","popupPositionRight","popupPositionBelow","selectedNote","closeModal","popupContextData","FootnotePopup","contextMenuEnabled","ContainerStyle","SidebarStyle","getWordFormsDebounced","ENDPOINT_WORD_FORMS","scrollToVerse","scrollToTarget","getSecondWorkParameter","get","Reader","match","highlightRelatedForms","setModal","setDivisions","setReferenceValue","setLoadedWork","errorDescription","setErrorDescription","errorTitle","setErrorTitle","errorMessage","setErrorMessage","redirectedFrom","setRedirectedFrom","redirectedTo","setRedirectedTo","setHighlightedVerse","setHighlightedWords","setSelectedWord","setPopupX","setPopupY","setPopupPositionRight","setPopupPositionBelow","popupWork","setPopupWork","setSelectedNote","secondWork","setSecondWork","secondWorkData","setSecondWorkData","secondWorkChapterNotFound","setSecondWorkChapterNotFound","secondWorkTitle","setSecondWorkTitle","parsed","parseInt","Number","isNaN","getFontAdjustment","setFontSizeAdjustment","setNotesMetaData","verseReferences","setErrorState","errTitle","errDescription","errMessage","loadSecondWorkChapter","secondDivisions","reference_descriptor","updateHistory","newSecondWork","parallelWork","newDivisions","PARAMS_READ_WORK","closeSecondWork","addVerseToHistoryList","newReferenceValue","full_descriptor","onVerseClickSecondWork","firstWorkId","substr","firstWorkVerse","wordData","forms","wordsList","loadChapter","updatedData","newRedirectedFrom","newRedirectedTo","verse_to_highlight","previousPathname","divisionsFiltered","params","division0","division1","division2","division3","division4","leftovers","sameSecondWork","existingChapter","isReferenceForSameChapter","highlightedVerseRef","getNotesMetaData","referenceDescription","related_works","newWork","openLoginModal","previous_chapter","next_chapter","q","Pushable","Pusher","getDialogs","Grid","Column","changeChapter","fontSize","divided","columns","App"],"mappings":"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","file":"53093fdb90037f247869.bundle.js","sourcesContent":["import React from 'react';\nimport { Segment, Icon, Portal } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport './PopupDialog.scss';\n\n/**\n * Determines a recommendation about where to show a popup.\n *\n * @param {object} event The event from the handler with the dimensions\n */\nexport const getPositionRecommendation = (event) => {\n  const positionRight = event.clientX < (window.innerWidth / 2);\n  const positionBelow = event.clientY < (window.innerHeight / 2);\n\n  return [positionRight, positionBelow];\n};\n\nconst PopupDialog = ({ children, onClose, x, y, positionBelow, positionRight, footer, width, maxHeight, inverted, frameless}) => {\n\n  /**\n   * This is done to get rid of the outline around the close button and get it to show up at the\n   * right of the screen.\n   */\n  const closeButtonStyle = {\n    float: 'right',\n    cursor: 'pointer',\n    marginRight: 0,\n  };\n\n  // Correct for the cases where the dialog is off of the bottom of the screen.\n  const segmentStyle = {\n    position: 'absolute',\n    width,\n    maxHeight,\n    overflowY: 'auto',\n    padding: 0,\n    zIndex: 103,\n  };\n\n  const segmentStyleTinyTop = {\n    ...segmentStyle,\n    ...{\n      top: 45,\n      left: 5,\n      width: 'calc(100% - 10px)',\n      position: 'fixed',\n    },\n  };\n\n  const segmentStyleTinyBelow = {\n    ...segmentStyle,\n    ...{\n      bottom: 5,\n      left: 5,\n      width: 'calc(100% - 10px)',\n      position: 'fixed',\n    },\n  };\n\n  // Determine if we ought to enter the mode for mobile devices\n  const isSmallMode = () => window.innerWidth < 1024;\n\n  // Get the style appropriate for the segment to appear\n  const getSegmentStyle = () => {\n    if (isSmallMode()) {\n      if (positionBelow) {\n        return segmentStyleTinyBelow;\n      }\n      return segmentStyleTinyTop;\n    }\n\n    return segmentStyle;\n  };\n\n  // This applies to the footer\n  const footerStyle = {\n    position: 'sticky',\n    bottom: 0,\n    width: '100%',\n  };\n\n  // Get the main content for the popup\n  const getContent = () => (\n    <Segment className=\"popupDialog\" inverted={inverted} style={getSegmentStyle()}>\n      <div style={{ padding: frameless? 0 : 15 }}>\n        {!frameless && <Icon style={closeButtonStyle} onClick={onClose}>&#10005;</Icon>}\n        {children}\n      </div>\n      {footer && (\n        <Segment className=\"popupDialogFooter\" inverted={inverted} basic style={footerStyle}>{footer}</Segment>\n      )}\n    </Segment>\n  );\n\n  // Determine the height of the dialog\n  const height = segmentStyle.height ? segmentStyle.height : maxHeight;\n\n  // Calculate the vertical position\n  if (positionBelow) {\n    segmentStyle.top = y;\n  } else {\n    segmentStyle.top = y - height;\n  }\n\n  // Calculate the horizontal position\n  if (positionRight) {\n    segmentStyle.left = x;\n  } else {\n    segmentStyle.left = x - width;\n  }\n\n  // Use a portal so that the absolute positioning for the context menu works\n  return (\n    <Portal open>\n      {getContent()}\n    </Portal>\n  );\n};\n\nPopupDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  positionBelow: PropTypes.bool,\n  positionRight: PropTypes.bool,\n  width: PropTypes.number,\n  maxHeight: PropTypes.number,\n  children: PropTypes.element.isRequired,\n  footer: PropTypes.element,\n  inverted: PropTypes.bool,\n  frameless: PropTypes.bool,\n};\n\nPopupDialog.defaultProps = {\n  positionBelow: true,\n  positionRight: true,\n  width: 500,\n  maxHeight: 300,\n  footer: null,\n  inverted: false,\n  frameless: false,\n};\n\nexport default PopupDialog;\n","\nexport const MODE_LOADING = 0;\nexport const MODE_ERROR = 1;\nexport const MODE_DONE = 2;\nexport const MODE_NOT_READY = 3;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./WordLemma.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".view_lexicon .speaker {\\n  font-weight: bold;\\n  display: block;\\n  margin-top: 12px;\\n}\\n.view_lexicon .milestone {\\n  color: #999999;\\n}\\n.view_lexicon [data-rend=\\\"italics\\\"] {\\n  font-style: italic;\\n}\\n.view_lexicon .milestone[data-n].milestone[data-unit]:after {\\n  font-size: smaller;\\n  margin: 3px;\\n  content: \\\"[\\\" attr(data-unit) \\\" \\\" attr(data-n) \\\"]\\\";\\n}\\n.view_lexicon .milestone[data-unit=\\\"para\\\"] {\\n  display: block;\\n  padding-top: 12px;\\n}\\n.view_lexicon .l {\\n  display: block;\\n  margin-left: 24px;\\n}\\n.view_lexicon .gap {\\n  content: \\\"...\\\";\\n}\\n.view_lexicon .quote,\\n.view_lexicon .q {\\n  font-style: italic;\\n}\\n.view_lexicon .bibl {\\n  margin-left: 3px;\\n  margin-right: 3px;\\n  font-weight: bold;\\n}\\n.view_lexicon .bibl::before {\\n  content: \\\"[\\\";\\n}\\n.view_lexicon .bibl::after {\\n  content: \\\"]\\\";\\n}\\n.view_lexicon .docauthor {\\n  display: block;\\n  padding-bottom: 16px;\\n}\\n.view_lexicon .label:not(.block) .label {\\n  margin-left: 8px;\\n  margin-right: 4px;\\n}\\n.view_lexicon .note-tag {\\n  margin-left: 4px;\\n  margin-right: 2px;\\n  cursor: hand;\\n  cursor: pointer;\\n}\\n.view_lexicon .read-more {\\n  margin-top: 16px;\\n  display: block;\\n}\\n\\n.view_lexicon .lb {\\n  display: block;\\n}\\n\\n.view_lexicon .div3 {\\n  padding-top: 16px;\\n  display: block;\\n}\\n\\n.view_lexicon .quote > .title {\\n  font-weight: bold;\\n  display: block;\\n}\\n\\n.view_lexicon .p {\\n  margin-bottom: 16px;\\n  display: block;\\n}\\n\\n.view_lexicon .lemma {\\n  text-decoration: underline;\\n  font-weight: bold;\\n}\\n\\n.view_lexicon .orth {\\n  font-weight: bold;\\n  display: block;\\n}\\n\\n.view_lexicon .etym {\\n  display: block;\\n  margin-top: 12px;\\n  font-weight: bold;\\n}\\n\\n/**\\n * Style the sense entries so that they are nested accordingly\\n */\\n.view_lexicon .sense {\\n  display: block;\\n  margin-left: 15px;\\n  margin-top: 8px;\\n}\\n\\n/**\\n * Set the margins\\n */\\n.view_lexicon .sense[data-level=\\\"2\\\"] {\\n  margin-left: 30px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"3\\\"] {\\n  margin-left: 45px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"4\\\"] {\\n  margin-left: 60px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"5\\\"] {\\n  margin-left: 75px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"6\\\"] {\\n  margin-left: 90px;\\n}\\n\\n/**\\n * Show the N indicator (\\\"1.\\\", \\\"2.\\\", etc.)\\n */\\n.view_lexicon .sense[data-level]:before {\\n  content: \\\"\\\" attr(data-n) \\\". \\\";\\n}\\n\\n.view_lexicon .sense[data-level=\\\"0\\\"]:before {\\n  content: \\\"\\\";\\n}\\n\\n/* -----------------------------------------\\n     Read work\\n     ----------------------------------------- */\\n.verse.number {\\n  font-weight: bold;\\n  color: black;\\n  /*\\n  border: white solid 1px;\\n  padding: 1px 4px 1px 4px;\\n  background-color: white;\\n  */\\n}\\n\\n.verse-container {\\n  display: inline;\\n  line-height: 25px;\\n}\\n\\n.block {\\n  display: block;\\n  margin-top: 12px;\\n}\\n\\n.no_definition_entries {\\n  font-style: italic;\\n}\\n\\n.verse .word {\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n.verse .word:hover {\\n  text-decoration: underline;\\n}\\n\\n.view_lexicon .tr {\\n  font-style: italic;\\n  font-weight: bold;\\n}\\n\\n@media print {\\n  .view_lexicon .note-tag {\\n    display: none;\\n  }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./PopupDialog.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ui.inverted.segment.popupDialog{background-color:#2b2b2e;border:1px solid #444;-webkit-box-shadow:0 15px 20px rgba(0,0,0,.5);box-shadow:0 15px 20px rgba(0,0,0,.5)}.popupDialog{z-index:100}.ui.inverted.segment.popupDialogFooter{border-top:1px solid #202023;background-color:#202023}.ui.segment.popupDialogFooter{border-top:1px solid #ddd;background-color:#f6f6f6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message, Icon } from 'semantic-ui-react';\nimport './WordLemma.css';\n\nconst WordLemma = (props) => {\n  const {\n    lexiconEntries, inverted,\n  } = props;\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <>\n      {lexiconEntries.length === 0 && (\n        <Message warning className={className}>\n          <Icon name=\"warning\" />\n          No definition available from Liddel and Scott.\n        </Message>\n      )}\n      {lexiconEntries && (\n        lexiconEntries.map((lexiconEntry) => (\n          <div\n            key={lexiconEntry.lemma_lexical_form}\n            className=\"view_lexicon\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: lexiconEntry.definition }}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nWordLemma.propTypes = {\n  lexiconEntries: PropTypes.arrayOf(PropTypes.shape),\n  inverted: PropTypes.bool,\n};\n\nWordLemma.defaultProps = {\n  lexiconEntries: null,\n  inverted: false,\n};\n\nexport default WordLemma;\n","import React, { useState, useEffect } from 'react';\nimport { Placeholder, Accordion, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ENDPOINT_WORD_PARSE } from '../Endpoints/urls';\nimport { SEARCH } from '../URLs';\nimport { PARAMS_SEARCH } from '../URLs/Parameters';\nimport ErrorMessage from '../ErrorMessage';\nimport WordLemma from './WordLemma';\nimport { MODE_LOADING, MODE_ERROR, MODE_DONE } from \"../Constants\";\n\nconst WordInformation = ({ word, inverted, work, searchState }) => {\n  const [loading, setLoading] = useState(false);\n  const [wordInfo, setWordInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const getSearchLinks = (state = null) => {\n    if (work) {\n      return (\n        <>\n          Search for\n          {' '}\n          {word}\n          {' '}\n          in\n          {' '}\n          <Link to={{\n            pathname: SEARCH(),\n            search: PARAMS_SEARCH(`work:${work} ${word}`),\n            state,\n            }}\n          >\n            this work\n          </Link>\n          {' '}\n          or\n          {' '}\n          <Link to={SEARCH(word)}>all works</Link>\n        </>\n      );\n    }\n    return (\n      <>\n        Search for\n        {' '}\n        <Link to={SEARCH(word)}>{word}</Link>\n      </>\n    );\n  }\n\n\n  /**\n   * Get information for the given word.\n   *\n   * @param {string} wordToLookup The word to get information on\n   */\n   const getWordInfo = () => {\n    setLoading(true);\n\n    fetch(ENDPOINT_WORD_PARSE(word))\n      .then((res) => res.json())\n      .then((data) => {\n        setWordInfo(data);\n        setLoading(false);\n        setError(null);\n        setActiveIndex(null);\n      })\n      .catch((e) => {\n        setError(e.toString());\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getWordInfo();\n  }, [word]);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  }\n\n  let mode = MODE_LOADING;\n  if (!loading && wordInfo) {\n    mode = MODE_DONE;\n  }\n  else if (!loading && error) {\n    mode = MODE_ERROR;\n  }\n\n  return (\n    <>\n      {mode === MODE_DONE && (\n        <div>\n          Found\n          {' '}\n          {wordInfo.length}\n          {' '}\n          {wordInfo.length !== 1 && (\n            <>parses for</>\n          )}\n          {wordInfo.length === 1 && (\n            <>parse for</>\n          )}\n          {' '}\n          {word}\n          .\n          {wordInfo && wordInfo.length > 0 && wordInfo[0].ignoring_diacritics && (\n            <>\n              {' '}\n              An exact match could not be found, so similar words with different diacritical marks\n              are being returned.\n            </>\n          )}\n          <Accordion inverted={inverted} style={{ marginTop: 18 }} fluid>\n            {wordInfo.map((entry, index) => (\n              <React.Fragment key={`${entry.form}::${entry.description}`}>\n                <Accordion.Title\n                  active={activeIndex === index}\n                  index={index}\n                  onClick={(e, titleProps) => handleClick(e, titleProps)}\n                >\n                  <Icon name=\"dropdown\" />\n                  {entry.lemma}\n                  {' '}\n                  (\n                  {entry.description}\n                  ):\n                  {' '}\n                  {entry.meaning}\n                </Accordion.Title>\n                <Accordion.Content\n                  active={activeIndex === index}\n                >\n                  <WordLemma\n                    lexiconEntries={entry.lexicon_entries}\n                    inverted={inverted}\n                  />\n                </Accordion.Content>\n              </React.Fragment>\n            ))}\n          </Accordion>\n          <div style={{ marginTop: 12 }}>\n            {getSearchLinks(word, work, searchState)}\n          </div>\n        </div>\n      )}\n      {mode === MODE_ERROR && (\n        <div>\n          <ErrorMessage\n            inverted={inverted}\n            title=\"Unable to get word information\"\n            description=\"Information for the given word could not be obtained.\"\n            message={error}\n          />\n        </div>\n      )}\n      {mode === MODE_LOADING && (\n        <Placeholder inverted={inverted} style={{ marginTop: 32 }}>\n          <Placeholder.Header>\n            <Placeholder.Line />\n          </Placeholder.Header>\n          <Placeholder.Paragraph>\n            <Placeholder.Line />\n          </Placeholder.Paragraph>\n        </Placeholder>\n      )}\n    </>\n  );\n}\n\nWordInformation.propTypes = {\n  word: PropTypes.string.isRequired,\n  work: PropTypes.string,\n  inverted: PropTypes.bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  searchState: PropTypes.object,\n};\n\nWordInformation.defaultProps = {\n  inverted: false,\n  work: null,\n  searchState: null,\n};\n\nexport default WordInformation;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { GOOGLE_SEARCH, PERSEUS_WORD_LOOKUP, LOGEION_WORD_LOOKUP } from '../URLs';\n\nfunction ExternalLookupLinks({ word }) {\n  return (\n    <div>\n      Look up at\n      {' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={PERSEUS_WORD_LOOKUP(word)}>\n        Perseus\n      </a>\n      ,\n      {' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={LOGEION_WORD_LOOKUP(word)}>\n        Logeion\n      </a>\n      , or\n      {' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={GOOGLE_SEARCH(word)}>\n        Google\n      </a>\n    </div>\n  );\n}\n\nExternalLookupLinks.propTypes = {\n  word: PropTypes.string.isRequired,\n};\n\nexport default ExternalLookupLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WordInformation from '.';\nimport PopupDialog from '../PopupDialog';\nimport ExternalLookupLinks from './ExternalLookupLinks';\n\nconst WordInformationDialog = (props) => {\n  const {\n    word, onClose, x, y, positionBelow, positionRight, inverted, work, searchState,\n  } = props;\n\n  return (\n    <PopupDialog\n      onClose={onClose}\n      inverted={inverted}\n      x={x}\n      y={y}\n      positionBelow={positionBelow}\n      positionRight={positionRight}\n      footer={<ExternalLookupLinks word={word} />}\n    >\n      <WordInformation work={work} word={word} inverted={inverted} searchState={searchState} />\n    </PopupDialog>\n  );\n};\n\nWordInformationDialog.propTypes = {\n  word: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  positionBelow: PropTypes.bool,\n  positionRight: PropTypes.bool,\n  inverted: PropTypes.bool,\n  work: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  searchState: PropTypes.object,\n};\n\nWordInformationDialog.defaultProps = {\n  positionBelow: true,\n  positionRight: true,\n  inverted: true,\n  work: null,\n  searchState: null,\n};\n\nexport default WordInformationDialog;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./Chapter.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".view_read_work .speaker{font-weight:bold;display:block;margin-top:12px}.view_read_work .milestone{color:#999}.view_read_work [data-rend=italics]{font-style:italic}.view_read_work .milestone[data-n].milestone[data-unit]:after{font-size:smaller;margin:3px;content:\\\"[\\\" attr(data-unit) \\\" \\\" attr(data-n) \\\"]\\\"}.view_read_work .milestone[data-unit=para]{display:block;padding-top:12px}.view_read_work .l{display:block;margin-left:24px}.view_read_work .gap{content:\\\"...\\\"}.view_read_work .quote,.view_read_work .q{font-style:italic}.view_read_work .bibl{margin-left:3px;margin-right:3px;font-weight:bold}.view_read_work .bibl::before{content:\\\"[\\\"}.view_read_work .bibl::after{content:\\\"]\\\"}.view_read_work .docauthor{display:block;padding-bottom:16px}.view_read_work .label:not(.block) .label{margin-left:8px;margin-right:4px}.view_read_work .note-tag{margin-left:4px;margin-right:2px;cursor:hand;cursor:pointer}.view_read_work .read-more{margin-top:16px;display:block}.view_read_work .lb{display:block}.view_read_work .div3{padding-top:16px;display:block}.view_read_work .quote>.title{font-weight:bold;display:block}.view_read_work .castlist:before{content:\\\"Cast list: \\\"}.view_read_work .castlist>.castitem:after{content:\\\", \\\"}.view_read_work .castlist>.castitem:last-child:after{content:\\\"\\\"}.view_read_work .argument{font-style:italic}.view_read_work .p{margin-bottom:16px;display:block}.view_read_work .lemma{text-decoration:underline;font-weight:bold}.view_read_work .orth{font-weight:bold;font-size:14pt;display:block}.view_read_work .etym{display:block;margin-top:12px;font-weight:bold}.view_read_work .sense{display:block;margin-left:32px}.view_read_work .hide{display:none}.view_read_work{font-family:\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif}.view_read_work .icon-info-sign{font-family:\\\"Icons\\\";font-style:normal}.view_read_work .icon-info-sign:before{content:\\\"\\\"}.verse.number{font-weight:bold}.inverted .verse.number{color:#fff}.verse-container{display:inline;line-height:25px}@keyframes backgroundFade{0%{background-color:transparent}90%{background-color:transparent}98%{background-color:#6f3939;left:0px;top:0px}100%{background-color:#6f3939;left:0px;top:0px}}.verse-container.noted{background:#563838;animation-name:backgroundFade;animation-duration:1.5s}.block{display:block;margin-top:12px}.verse-link{padding:0 4px}.verse-link:visited{color:#eee}.verse-link:active{color:#eee}.verse-link:link{color:#eee}.verse-link:hover{color:#08c}.verse-link.highlighted{background-color:red;border-radius:2px}.verse-link.highlighted .verse.number{color:#fff}.inverted{background-color:#2b2b2e;color:#f9f9fa}.no_definition_entries{font-style:italic}.word.highlighted,.word.searched{border-radius:3px;-moz-border-radius:3px;-webkit-border-radius:3px;color:#fff}.highlight0{background-color:#49afcd}.highlight1{background-color:#cd4949}.highlight2{background-color:#49cd5f}.highlight3{background-color:#cdcb49}.highlight4{background-color:#cd7e49}.highlight5{background-color:#c949cd}.highlight6{background-color:#cd4949}.highlight7{background-color:#49cd5f}.highlight8{background-color:#cdcb49}.highlight9{background-color:#cd7e49}.highlight10{background-color:#c949cd}.highlight11{background-color:#cd4949}.highlight12{background-color:#49cd5f}.highlight13{background-color:#cdcb49}.highlight14{background-color:#cd7e49}.highlight15{background-color:#c949cd}.highlight16{background-color:#cd4949}.highlight17{background-color:#49cd5f}.highlight18{background-color:#cdcb49}.highlight19{background-color:#cd7e49}.highlight20{background-color:#c949cd}.highlight21{background-color:#cd4949}.highlight22{background-color:#49cd5f}.highlight23{background-color:#cdcb49}.highlight24{background-color:#cd7e49}.highlight25{background-color:#c949cd}.highlight26{background-color:#cd4949}.highlight27{background-color:#49cd5f}.highlight28{background-color:#cdcb49}.highlight29{background-color:#cd7e49}.highlight30{background-color:#c949cd}.highlight31{background-color:#cd4949}.highlight32{background-color:#49cd5f}.highlight33{background-color:#cdcb49}.highlight34{background-color:#cd7e49}.highlight35{background-color:#c949cd}.highlight36{background-color:#cd4949}.highlight37{background-color:#49cd5f}.highlight38{background-color:#cdcb49}.highlight39{background-color:#cd7e49}.highlight40{background-color:#c949cd}.highlight41{background-color:#cd4949}.highlight42{background-color:#49cd5f}.highlight43{background-color:#cdcb49}.highlight44{background-color:#cd7e49}.highlight45{background-color:#c949cd}.highlight46{background-color:#cd4949}.highlight47{background-color:#49cd5f}.highlight48{background-color:#cdcb49}.highlight49{background-color:#cd7e49}.highlight50{background-color:#c949cd}.highlight51{background-color:#cd4949}.highlight52{background-color:#49cd5f}.highlight53{background-color:#cdcb49}.highlight54{background-color:#cd7e49}.highlight55{background-color:#c949cd}.word.searched{background-color:#468847}.division-2{padding-left:24px}.division-3{padding-left:48px}.division-4{padding-left:72px}.division-5{padding-left:96px}.verse .word{cursor:pointer;cursor:hand}.verse .word:hover{text-decoration:underline}@media print{.view_read_work .note-tag{display:none}}.fontSize-0{font-size:15px;line-height:1.1}.fontSize-1{font-size:17px;line-height:1.32}.fontSize-2{font-size:19px;line-height:1.54}.fontSize-3{font-size:21px;line-height:1.76}.fontSize-4{font-size:23px;line-height:1.98}.fontSize-5{font-size:25px;line-height:2.2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"@media print{.ui.top.menu{display:none}.underMenu{margin-top:0}span,div,h1,h2,h3{color:#000 !important}div{overflow:visible !important}}@media only screen{.ui.inverted.action.input.referenceJumpInput>input{width:130px}}@media only screen and (min-width: 767px){.ui.inverted.action.input.referenceJumpInput>input{width:180px}}.underMenu{margin-top:1em}.menu.control.inverted{background-color:#202023;border-bottom:1px solid #202023}.pushable.inverted>.pusher,.pushable.inverted>.pusher,.underMenu.inverted{background-color:#2b2b2e}.otherVersions>.menu>.item>.text{margin-right:64px}.bookProgress.ui.progress>.bar,.bookProgress.ui.progress{border-radius:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./NotesList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".create-first-note-button{margin-top:16px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export function storageAvailable() {\n    var test = 'test';\n    try {\n        localStorage.setItem(test, test);\n        localStorage.removeItem(test);\n        return true;\n    } catch(e) {\n        return false;\n    }\n}\n","import {LAST_READ_HISTORY, FAVORITE_WORKS} from \".\";\nimport { storageAvailable } from \"./LocalStorage\";\n\nexport function maxHistoryCount() {\n  return 6;\n}\n\nfunction chooseStorage(storageOverride = null) {\n  // Figure out what version of storage to use\n  if (storageOverride !== null){\n    return storageOverride;\n  }\n\n  if (storageAvailable()){\n    return localStorage;\n  }\n  console.warn('Local storage is not available!!');\n  return null;\n}\n\nexport function getWorksList(name, storageOverride = null) {\n  const storage = chooseStorage(storageOverride);\n\n  if(storage) {\n    const worksList = storage.getItem(name);\n\n    if (worksList) {\n      try {\n        const worksListParsed = JSON.parse(worksList);\n\n        // Make sure that the list is an array and has the necessary properties.\n        return worksListParsed.filter((entry) => {\n          return entry.workTitleSlug;\n        });\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.warn(\"The list of works could not be loaded\");\n        return null; // The list could not be loaded\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function getWorksLastRead(storageOverride = null) {\n  return getWorksList(LAST_READ_HISTORY, storageOverride);\n}\n\nexport function getFavoriteWorks(storageOverride = null) {\n  return getWorksList(FAVORITE_WORKS, storageOverride);\n}\n\nexport function setFavoriteWork(\n  workTitleSlug,\n  storageOverride = null\n) {\n  const storage = chooseStorage(storageOverride);\n\n  if (storage) {\n    // See if the entry exists already\n    let favoriteWorks = getFavoriteWorks(storage);\n\n    // Initialize the history object if we don't have one yet\n    if (favoriteWorks === null) {\n      favoriteWorks = [];\n    }\n\n    // Find the existing index if it exists\n    const index = favoriteWorks.findIndex(\n      (entry) => entry.workTitleSlug === workTitleSlug\n    );\n\n    // Get the existing entry or initial it\n    const favoriteEntry = index >= 0 ? favoriteWorks[index] : {};\n\n    // Update the records to remove the existing entry\n    if (index >= 0) {\n      favoriteWorks = [\n        ...favoriteWorks.slice(0, index),\n        ...favoriteWorks.slice(index + 1),\n      ];\n    }\n\n    // Set the entry\n    favoriteEntry.workTitleSlug = workTitleSlug;\n\n    // Splice it in\n    favoriteWorks.splice(0, 0, favoriteEntry);\n\n    // Shorten the list to the limit\n    if (favoriteWorks.length > maxHistoryCount()) {\n      favoriteWorks = favoriteWorks.slice(0, maxHistoryCount());\n    }\n\n    // Update the history\n    storage.setItem(FAVORITE_WORKS, JSON.stringify(favoriteWorks));\n  }\n}\n\nexport function removeFavoriteWork(\n  workTitleSlug,\n  storageOverride = null\n) {\n  const storage = chooseStorage(storageOverride);\n\n  if (storage) {\n    // See if the entry exists already\n    let favoriteWorks = getFavoriteWorks(storage);\n\n    const index = favoriteWorks.findIndex(\n      (entry) => entry.workTitleSlug === workTitleSlug\n    );\n\n    // Update the history to remove the existing entry\n    if (index >= 0) {\n      favoriteWorks = [\n        ...favoriteWorks.slice(0, index),\n        ...favoriteWorks.slice(index + 1),\n      ];\n\n      // Update the history\n      storage.setItem(FAVORITE_WORKS, JSON.stringify(favoriteWorks));\n    }\n  }\n}\n\nexport function setFavoritesProgress(\n  workTitleSlug,\n  divisions,\n  divisionReference,\n  storageOverride = null\n) {\n  const storage = chooseStorage(storageOverride);\n\n  if (storage) {\n    // See if the entry exists in the list of favorites\n    let favoriteWorks = getFavoriteWorks(storage);\n\n    if (!favoriteWorks) {\n      favoriteWorks = [];\n    }\n\n    const index = favoriteWorks.findIndex(\n      (entry) => entry.workTitleSlug === workTitleSlug\n    );\n\n    // Update the entry if it exists\n    if (index >= 0) {\n      favoriteWorks[index].divisions = divisions;\n      favoriteWorks[index].divisionReference = divisionReference;\n\n      // Update the list\n      storage.setItem(FAVORITE_WORKS, JSON.stringify(favoriteWorks));\n    }\n  }\n}\n\nexport function setWorkProgress(\n  workTitleSlug,\n  divisions,\n  divisionReference,\n  storageOverride = null\n) {\n  const storage = chooseStorage(storageOverride);\n\n  if (storage) {\n\n    // See if the entry exists already\n    let lastReadHistory = getWorksLastRead(storage);\n\n    // Initialize the history object if we don't have one yet\n    if (lastReadHistory === null) {\n      lastReadHistory = [];\n    }\n\n    // Find the existing index if it exists\n    const index = lastReadHistory.findIndex(\n      (entry) => entry.workTitleSlug === workTitleSlug\n    );\n\n    // Get the existing entry or initialize it\n    const lastReadEntry = index >= 0 ? lastReadHistory[index] : {};\n\n    // Update the history to remove the existing entry\n    if (index >= 0) {\n      lastReadHistory = [\n        ...lastReadHistory.slice(0, index),\n        ...lastReadHistory.slice(index + 1),\n      ];\n    }\n\n    // Set the entry\n    lastReadEntry.workTitleSlug = workTitleSlug;\n    lastReadEntry.divisions = divisions;\n    lastReadEntry.divisionReference = divisionReference;\n\n    // Splice it in\n    lastReadHistory.splice(0, 0, lastReadEntry);\n\n    // Shorten the list to the limit\n    if (lastReadHistory.length > maxHistoryCount()) {\n      lastReadHistory = lastReadHistory.slice(0, maxHistoryCount());\n    }\n\n    // Update the history\n    storage.setItem(LAST_READ_HISTORY, JSON.stringify(lastReadHistory));\n\n    setFavoritesProgress(workTitleSlug, divisions, divisionReference, storageOverride);\n  }\n}\n\nexport function clearWorksLastRead(storageOverride = null) {\n  const storage = chooseStorage(storageOverride);\n  storage.removeItem(LAST_READ_HISTORY);\n}\n\nexport function clearFavorites(storageOverride = null) {\n  const storage = chooseStorage(storageOverride);\n  storage.removeItem(FAVORITE_WORKS);\n}\n","import {FONT_ADJUSTMENT} from \".\";\n\nexport const MAX_FONT_SIZE_ADJUSTMENT = 4;\n\nexport function setFontAdjustment(adjustment, storageOverride = null) {\n  const storage = storageOverride || localStorage;\n  storage.setItem(FONT_ADJUSTMENT, adjustment);\n}\n\nexport function getFontAdjustment(storageOverride = null) {\n  const storage = storageOverride || localStorage;\n  const adjustment = storage.getItem(FONT_ADJUSTMENT) || 0;\n\n  if(adjustment > MAX_FONT_SIZE_ADJUSTMENT || adjustment < 0) {\n    return MAX_FONT_SIZE_ADJUSTMENT;\n  }\n\n  try {\n    const parsed = parseInt(adjustment, 10);\n    if (Number.isNaN(parsed)) {\n      return MAX_FONT_SIZE_ADJUSTMENT;\n    }\n\n    return parsed;\n  } catch (error) {\n    return MAX_FONT_SIZE_ADJUSTMENT;\n  }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Header, Modal, Table, Placeholder, Image,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { ENDPOINT_WORK_INFO, ENDPOINT_WORK_IMAGE } from '../Endpoints/urls';\nimport ErrorMessage from '../ErrorMessage';\n\n\nconst AboutWorkDialog = ({ onClose, work }) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const loadInfo = () => {\n    fetch(ENDPOINT_WORK_INFO(work))\n      .then((res) => res.json())\n      .then((newData) => {\n        setData(newData);\n      })\n      .catch((e) => {\n        setError(e.toString())\n      });\n  }\n\n  const getInfoRow = (title, description) => {\n    return (\n      <Table.Row>\n        <Table.Cell>\n          <strong>{title}</strong>\n        </Table.Cell>\n        <Table.Cell>{description}</Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  useEffect(() => {\n    loadInfo(work);\n  }, []);\n\n  return (\n    <Modal size=\"small\" defaultOpen onClose={onClose}>\n      {!data && (\n        <Header content=\"About this Book\" />\n      )}\n      {data && (\n        <Header content={`About ${data.title}`} />\n      )}\n      <Modal.Content scrolling>\n        {error && (\n          <ErrorMessage\n            title=\"Unable to load work information\"\n            description=\"Unable to get information about the work from the server\"\n            message={error}\n          />\n        )}\n        {!error && data && (\n          <>\n            <div style={{ display: 'inline-block', marginRight: 16 }}>\n              <Image style={{width: 100}} src={ENDPOINT_WORK_IMAGE(work, 400)} />\n            </div>\n            <div style={{ display: 'inline-block' }}>\n              <Table basic=\"very\" celled collapsing>\n                <Table.Body>\n                  {getInfoRow('Title', data.title)}\n                  {getInfoRow('Language', data.language)}\n                  {getInfoRow('Source', data.source)}\n                </Table.Body>\n              </Table>\n            </div>\n            <div style={{ marginTop: 16 }}>\n              {data.source_description && (\n                data.source_description\n              )}\n            </div>\n            {data.wiki_info && (\n              <div style={{ marginTop: 16 }}>\n                {data.wiki_info.summary}\n              </div>\n            )}\n          </>\n        )}\n        {!error && !data && (\n          <Placeholder>\n            <Placeholder.Header image>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder.Header>\n            <Placeholder.Paragraph>\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        {data && data.wiki_info && (\n          <a target=\"_blank\" style={{ marginTop: 10, float: 'left' }} rel=\"noopener noreferrer\" href={data.wiki_info.url}>View on wikipedia</a>\n        )}\n        <Button onClick={onClose}>Close</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nAboutWorkDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  work: PropTypes.string.isRequired,\n};\n\nexport default AboutWorkDialog;\n","import React, { useState } from 'react';\nimport {\n  Button, Header, Modal, Radio, Form,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { ENDPOINT_WORK_DOWNLOAD } from '../Endpoints/urls';\n\nconst MOBI_FORMAT = 'mobi';\nconst EPUB_FORMAT = 'epub';\n\nconst WorkDownloadDialog = ({ onClose, work }) => {\n  const [format, setFormat] = useState(EPUB_FORMAT);\n\n  const download = () => {\n    document.location = ENDPOINT_WORK_DOWNLOAD(work, format);\n  }\n\n  const handleChange = (event, data) => {\n    setFormat(data.value);\n  }\n\n  return (\n    <Modal size=\"tiny\" defaultOpen onClose={onClose}>\n      <Header content=\"Download Book\" />\n      <Modal.Content>\n        <div stryle={{ marginBottom: 12 }}>Select which format you would like to download:</div>\n        <Form>\n          <Form.Field>\n            <Radio\n              label=\"ePUB Format (Recommended)\"\n              name=\"radioGroup\"\n              value={EPUB_FORMAT}\n              checked={format === EPUB_FORMAT}\n              onChange={(e, d) => handleChange(e, d)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Radio\n              label=\"MOBI Format (Amazon Kindle)\"\n              name=\"radioGroup\"\n              value={MOBI_FORMAT}\n              checked={format === MOBI_FORMAT}\n              onChange={(e, d) => handleChange(e, d)}\n            />\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose}>Close</Button>\n        <Button primary onClick={() => download()}>Download</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nWorkDownloadDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  work: PropTypes.string.isRequired,\n};\n\nexport default WorkDownloadDialog;\n","import React from \"react\";\nimport {\n  Placeholder,\n} from \"semantic-ui-react\";\nimport { toTitleCase } from \"../Utils\";\nimport AboutWorkDialog from \"../AboutWorkDialog\";\nimport WorkDownloadDialog from \"../WorkDownloadDialog\";\n\n/**\n * Defines how long a division name can get before it is considered long.\n */\nconst LONG_DIVISION_NAME = 30;\n\n/**\n * Determine if the divisions tend to have long names. This is useful for determining if we ought\n * to use the titles or the shorter descriptors.\n *\n * @param {array} divisions The list of divisions.\n */\nexport function hasLongDivisionNames(divisions) {\n  const countLongNames = (accumulator, division) =>\n    division.full_title && division.full_title.length > LONG_DIVISION_NAME\n      ? accumulator + 1\n      : accumulator;\n  const longNames = divisions.reduce(countLongNames, 0);\n\n  return longNames > 5 || longNames === divisions.length;\n}\n\n/**\n * Determine if the division descriptors appear to be names.\n *\n * @param {array} divisions The list of divisions.\n */\nexport function areDescriptorsNames(divisions) {\n  const countIndicators = (accumulator, division) =>\n    /^([0-9]+|[IVX]+|[A-Z])$/i.test(division.descriptor)\n      ? accumulator + 1\n      : accumulator;\n  const indicators = divisions.reduce(countIndicators, 0);\n  return indicators !== divisions.length;\n}\n\n/**\n * Get the the division descriptor.\n *\n * @param {array} division The list of divisions.\n * @param {*} useTitles Whether titles ought to be used.\n * @param {*} descriptorsAreNames Whether descriptors appear to be names.\n */\nexport function getDivisionText(division, useTitles, descriptorsAreNames) {\n  // Use the title (from the full_title of the division)\n  if (useTitles) {\n    return toTitleCase(division.label);\n  }\n  // Are the descriptors names (like \"Matthew\" instead of \"1\")\n  if (descriptorsAreNames) {\n    return division.descriptor;\n  }\n  return `${division.type} ${division.descriptor}`;\n}\n\n/**\n * Convert the list of divisions to options that can be processed by the dropdown menu.\n *\n * @param {array} divisions The list of divisions.\n */\nexport function convertDivisionsToOptions(divisions) {\n  const useTitles = !hasLongDivisionNames(divisions);\n  const descriptorsAreNames = areDescriptorsNames(divisions);\n\n  return divisions.map((d) => ({\n    key: d.description,\n    text: getDivisionText(d, useTitles, descriptorsAreNames),\n    value: d.descriptor,\n  }));\n}\n\n/**\n * This function looks for the chapter the user entered. It looks both in the description as well\n * as the key.\n * This is useful because the works often use a Greek name as the description but an English\n * description too and we want both to be searchable (don't want users to have to type Μαρκον).\n * @param {array} options List of dropdown options\n * @param {string} query The string that the user entered that we are searching for\n */\nexport function workSearch(options, query) {\n  const queryLower = query.toLowerCase();\n  return options.filter(\n    (opt) =>\n      opt.text.toLowerCase().includes(queryLower) ||\n      opt.key.toLowerCase().includes(queryLower)\n  );\n}\n\n/**\n * Get a placeholder for the content.\n */\nexport function getPlaceholder(inverted = false) {\n  return (\n    <div style={{ paddingTop: 16 }}>\n      <Placeholder inverted={inverted}>\n        <Placeholder.Header>\n          <Placeholder.Line />\n        </Placeholder.Header>\n        <Placeholder.Paragraph>\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n        </Placeholder.Paragraph>\n        <Placeholder.Paragraph>\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n        </Placeholder.Paragraph>\n        <Placeholder.Paragraph>\n          <Placeholder.Line />\n          <Placeholder.Line />\n          <Placeholder.Line />\n        </Placeholder.Paragraph>\n      </Placeholder>\n    </div>\n  );\n}\n\n/**\n * Get the dialogs that ought to be rendered.\n */\nexport function getDialogs(modal, data, loading, loadedWork, closeModal) {\n  return (\n    <>\n      {data && !loading && modal === \"aboutWork\" && (\n        <AboutWorkDialog\n          work={loadedWork}\n          onClose={() => closeModal()}\n        />\n      )}\n      {data && !loading && modal === \"downloadWork\" && (\n        <WorkDownloadDialog\n          work={loadedWork}\n          onClose={() => closeModal()}\n        />\n      )}\n    </>\n  );\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/prop-types */\nimport { domToReact } from \"html-react-parser\";\nimport React from 'react';\nimport { indexOfNoDiacritic } from \"../Utils\";\n\nconst getDomReplaceFunction = (\n  highlightedWords,\n  verseIdentifierPrefix,\n  highlightedVerse,\n  notesMetaData\n) => {\n  return ({ attribs, children }) => {\n    // Handle highlighted words\n    if (\n      attribs &&\n      attribs.class === \"word\" &&\n      highlightedWords &&\n      children.length > 0 &&\n      children[0].type === \"text\"\n    ) {\n      // Get the value of the word\n      const wordText = children[0].data;\n\n      // Get the index of the highlighted word\n      const highlightIndex = indexOfNoDiacritic(highlightedWords, wordText);\n\n      // Add the highlight tag if we have a match\n      if (highlightIndex >= 0) {\n        // attribs.class = `word highlighted highlight${highlightIndex}`;\n\n        return (\n          <span className={`word highlighted highlight${highlightIndex}`}>\n            {domToReact(children)}\n          </span>\n        );\n      }\n    }\n\n    // Process this if it is a verse\n    if(attribs && attribs[\"data-verse\"]) {\n      // Set the highlighted class if this is a highlighted verse\n      const verseClassName =\n        attribs && attribs[\"data-verse\"] === highlightedVerse\n          ? \"verse-link highlighted\"\n          : \"verse-link\";\n\n      // Update the attributes\n      attribs.class = verseClassName;\n      attribs['data-original-id'] = attribs.id;\n      attribs.id = `${verseIdentifierPrefix}${attribs.id}`\n    }\n\n    // Process this if it is a verse-container\n    if(attribs && attribs.id && attribs.class === \"verse-container\") {\n\n        // Set the indicator saying that it matches a note\n        if (notesMetaData && notesMetaData.find){\n          // Get the verse ID\n          const verseID = attribs.id;\n          \n          // Parse out the verse number\n          const identifierMatch = /verse-(.*)/g.exec(verseID);\n          \n          if (identifierMatch.length > 0) {\n            const identifier = identifierMatch[1];\n          \n            const notesMetaDataMatched = notesMetaData.find(metaData => metaData.verse_indicator === identifier);\n  \n            if (notesMetaDataMatched) {\n              attribs.class += \" noted\";\n            }\n          }\n        }\n    }\n\n    return undefined;\n  };\n};\n\nexport default getDomReplaceFunction;\n","/**\n * This modules is responsible for extracting the events from the chapter content. This is\n * necessary when event handlers fire on content in the chapter.\n */\n\n export const CONTEXT_WORD = 0;\n export const CONTEXT_VERSE = 1;\n export const CONTEXT_NOTE = 2;\n export const CONTEXT_EMPTY = 3;\n\n export const determineEventTargetType = (event) => {\n  // Determine if we are clicking a word, verse, note, or just empty space\n  if (event.target.className.includes(\"word\")) {\n    return CONTEXT_WORD;\n  }\n  \n  if (event.target.className.includes(\"verse\")) {\n    return CONTEXT_VERSE;\n  }\n  \n  if (event.target.className.includes(\"note-tag\")) {\n    return CONTEXT_NOTE;\n  }\n\n  return CONTEXT_EMPTY;\n};\n\n/**\n * Get the verse information from the event. This assumes element is one with the class \"verse-link\".\n * @param {*} verseLinkElement \n * @returns { verseDescriptor, verse, id, href }\n */\nexport const getVerseInfoFromVerseLinkElement = (verseLinkElement) => {\n\n  // Stop if we weren't provided a valid element\n  if (verseLinkElement === null) {\n    return { verseDescriptor: null, verse: null, id: null, href: null };\n  }\n\n  // Get the descriptor of the verse\n  const verseDescriptorElem = Array.from(verseLinkElement.attributes).find(\n    (element) => element.name === \"data-verse-descriptor\"\n  );\n  const verseDescriptor = verseDescriptorElem\n    ? verseDescriptorElem.nodeValue\n    : null;\n\n  // Get the ID\n  const { id } = verseLinkElement;\n\n  // Get the the href\n  let href;\n\n  if (verseLinkElement.attributes.href) {\n    href = verseLinkElement.attributes.href.nodeValue;\n  } else {\n    href = null;\n  }\n\n  // Get the verse number\n  const verseElem = Array.from(verseLinkElement.attributes).find(\n    (element) => element.name === \"data-verse\"\n  );\n  const verse = verseElem ? verseElem.nodeValue : null;\n\n  // Stop if we didn't get what we needed to continue\n  if (!verseDescriptor) {\n    return { verseDescriptor: null, verse: null, id: null, href: null };\n  }\n\n  return { verseDescriptor, verse, id, href };\n};\n\nexport const findVerseLinkElement = (element) => {\n  /* The on-click handlers need to find the element matching \".verse-link\" in order to find the\n     verse information.\n  */\n     let currentTarget = element;\n     let verseLinkElement = null;\n   \n     // Recurse until you find \".verse-container\"\n     let attempts = 0;\n     while (attempts < 5 && verseLinkElement === null) {\n       // Stop if we found the verse-container element\n       if (currentTarget !== null && currentTarget.className.includes(\"verse-container\")) {\n         verseLinkElement = currentTarget;\n       }\n   \n       // Recurse to the next one\n       else{\n         currentTarget = currentTarget.parentElement;\n         attempts += 1;\n       }\n     }\n   \n     // Find the related \".verse-link\"\n     const verseLinkElements = verseLinkElement.getElementsByClassName(\"verse-link\")\n   \n     // Stop if we couldn't find the verse information\n     if (verseLinkElements.length === 0) {\n       console.info(\"Failed to find the verse-link\");\n       return null;\n     }\n\n     return verseLinkElements[0];\n}\n\n/**\n * Get the verse information from the event. This assumes the event fired for the element with the class \"verse-link\".\n * @param {*} event \n * @returns { verseDescriptor, verse, id, href }\n */\nexport const getVerseInfoFromEvent = (event) => {\n\n  // Get the target containing the verse info\n  return getVerseInfoFromVerseLinkElement(findVerseLinkElement(event.target));\n};\n\nexport const getWordFromEvent = (event) => {\n  if (event.target.className.includes(\"word\")) {\n    let data = {};\n\n    data = getVerseInfoFromVerseLinkElement(findVerseLinkElement(event.target))\n\n    data.word = event.target.innerText\n    return data;\n  }\n\n  return null;\n};\n\nexport const getNoteFromEvent = (event) => {\n    // Get the ID\n    const { id } = event.target;\n\n    // Get the contents for the given ID\n    const contentsElem = document.getElementById(`content_for_${id}`);\n    let contents = [\"Note content could not be found\"];\n\n    if (contentsElem) {\n      contents = [contentsElem.textContent];\n    }\n\n    return { contents, id };\n};\n\nexport const getEventInfo = (event) => {\n  const eventType = determineEventTargetType(event);\n\n  if(eventType === CONTEXT_WORD) {\n    return [eventType, getWordFromEvent(event)];\n  }\n\n  if(eventType === CONTEXT_NOTE) {\n    return [eventType, getNoteFromEvent(event)];\n  }\n\n  if(eventType === CONTEXT_VERSE) {\n    return [eventType, getVerseInfoFromEvent(event)];\n  }\n\n  return [eventType, null];\n}\n","import React, { createRef, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport parse from 'html-react-parser';\nimport getDomReplaceFunction from './ChapterDomReplacer';\nimport { getPositionRecommendation } from '../PopupDialog';\nimport { getEventInfo, getVerseInfoFromEvent, getWordFromEvent, getNoteFromEvent, determineEventTargetType, CONTEXT_WORD, CONTEXT_VERSE, CONTEXT_NOTE } from './ChapterEventHandlers';\nimport './Chapter.scss';\n\n/**\n * This class renders the content of chapter of a work.\n *\n * render() is going to parse some HTML it gets from the server and then present it.\n * The reason is that the works are persisted in a preformatted state in order to improve\n * performance. The alternative is to parse the XML on the client-side and process it into\n * HTML. This would mean that the content could not be cached. Right now, the server pre-processes\n * the content into HTML chunks and then caches so that it can be loaded quickly.\n */\nconst Chapter = ( {content, highlightedVerse, onVerseClick, onNoteClick, onWordClick, onWordHover, onClickAway, onContextClick, highlightedWords, fontSizeAdjustment, verseIdentifierPrefix, notesMetaData, inverted} ) => {\n  // We need to track the event listener with the bind call so that it can be removed\n  // See https://dev.to/em4nl/function-identity-in-javascript-or-how-to-remove-event-listeners-properly-1ll3\n  const clickListener = useRef(null);\n  const hoverListener = useRef(null);\n  const contextListener = useRef(null);\n\n  // We need to track when a verse was selected for highlight\n  const highlightOverridden = useRef(false);\n\n  // We are keeping a reference to the wrapper so that math can be done regarding client rectangle\n  // See https://medium.com/trabe/getting-rid-of-finddomnode-method-in-your-react-application-a0d7093b2660\n  const wrapper = createRef();\n\n  /**\n   * Get the chapter content\n   * @param {string} className The class name to put the content under\n   */\n  const getChapterContent = (className) => {\n    // These options will process the nodes such that the node gets a tag indicating that it is\n    // highlighted\n    const options = {\n      replace: getDomReplaceFunction(\n        highlightedWords,\n        verseIdentifierPrefix,\n        highlightedVerse,\n        notesMetaData\n      ),\n      condition: (node) => node.className.toLowerCase() === \"word\",\n      modify: (node) => {\n        // eslint-disable-next-line no-param-reassign\n        node.className += \" highlighted\";\n        return node;\n      },\n    };\n\n    const reactElement = parse(content, options);\n\n    return (\n      <div\n        className={`${className} fontSize-${fontSizeAdjustment}`}\n        ref={wrapper}\n      >\n        {reactElement}\n      </div>\n    );\n  };\n\n  /**\n   * Add a callback handler\n   * @param {function} handler The handler to register\n   * @param {string} type The type of handler (defaults to \"click\")\n   * @param {*} target The target to apply the listener to (defaults to the wrapper)\n   */\n  const addHandler = (handler, type = \"click\", target = wrapper.current) => {\n    if (target) {\n      target.addEventListener(type, (event) => handler(event));\n    }\n  };\n\n  /**\n   * Remote a callback handler\n   * @param {function} handler The handler to register\n   * @param {string} type The type of handler (defaults to \"click\")\n   * @param {*} target The target to apply the listener to (defaults to the wrapper)\n   */\n  const removeHandler = (handler, type = \"click\", target = wrapper.current) => {\n    if (target) {\n      target.removeEventListener(type, (event) => handler(event));\n    }\n  };\n\n  /**\n   * Handle the clicking of a word.\n   *\n   * @param {*} event The event object\n   */\n  const handleClickWord = (event) => {\n    const word = event.target.textContent;\n\n    const [positionRight, positionBelow] = getPositionRecommendation(event);\n    onWordClick(word, event.clientX, event.clientY, positionRight, positionBelow);\n  };\n\n  /**\n   * Handle the clicking of a verse.\n   *\n   * @param {*} event The event object\n   */\n  const handleClickVerse = (event) => {\n    // Don't follow the link\n    event.preventDefault();\n\n    const {verseDescriptor, verse, id, href} = getVerseInfoFromEvent(event);\n    \n    // Stop if we didn't get what we needed to continue\n    if (!verseDescriptor) {\n      return;\n    }\n\n    highlightOverridden.current = true;\n\n    // Fire off the handler\n    onVerseClick(verseDescriptor, verse, id, href, event.clientX, event.clientY);\n  };\n\n  /**\n   * handle the clicking of a note.\n   */\n  const handleClickNote = (event) => {\n    // Get the contents and ID\n    const { contents, id } = getNoteFromEvent(event);\n\n    const [positionRight, positionBelow] = getPositionRecommendation(event);\n\n    // Fire off the handler\n    onNoteClick(contents, id, event.clientX, event.clientY, positionRight, positionBelow);\n  };\n\n  /**\n   * handle the content menu clicking.\n   */\n  const handleClickContext = (event) => {\n    // Don't follow the link\n    event.preventDefault();\n\n    const [positionRight, positionBelow] = getPositionRecommendation(event);\n\n    // Fire off the handler\n    const [contextType, contextData] = getEventInfo(event);\n    onContextClick(event.clientX, event.clientY, positionRight, positionBelow, content, contextType, contextData, event);\n  };\n\n  const handleClickEmpty = () => {\n    onClickAway();\n  };\n\n  const handleClick = (event) => {\n    const contextType = determineEventTargetType(event);\n\n    // Determine if we are clicking a word, verse, note, or just empty space\n    if (contextType === CONTEXT_WORD) {\n      handleClickWord(event);\n    } else if (contextType === CONTEXT_VERSE) {\n      handleClickVerse(event);\n      handleClickEmpty();\n    } else if (contextType === CONTEXT_NOTE) {\n      handleClickNote(event);\n    } else {\n      handleClickEmpty();\n    }\n  };\n\n  /**\n   * Handle the case where the user has hovered over a word.\n   * @param {*} event\n   */\n  const handleHover = (event) => {\n    if (event.target.className.includes(\"word\")) {\n      onWordHover(getWordFromEvent(event));\n    } else {\n      onWordHover(null);\n    }\n  };\n\n  useEffect(() => {\n    /**\n     * Wire up handlers for the clicking of the words and verses.\n     */\n    clickListener.current = (event) => handleClick(event);\n    addHandler(clickListener.current, \"click\");\n\n    hoverListener.current = (event) => handleHover(event);\n    addHandler(hoverListener.current, \"mousemove\");\n\n    contextListener.current = (event) => handleClickContext(event);\n    addHandler(contextListener.current, \"contextmenu\");\n\n    /**\n     * Un wire the handlers to save memory.\n     */\n    return function cleanup() {\n      removeHandler(clickListener.current);\n      removeHandler(hoverListener.current, \"mousemove\");\n      removeHandler(contextListener.current, \"contextmenu\");\n    };\n  }, []);\n\n  // Determine the class name\n  let className = \"view_read_work\";\n\n  if (inverted) {\n    className = \"view_read_work inverted\";\n  }\n\n  return <>{getChapterContent(className)}</>;\n};\n\nChapter.propTypes = {\n  content: PropTypes.string.isRequired,\n  highlightedVerse: PropTypes.string,\n  highlightedWords: PropTypes.arrayOf(PropTypes.string),\n  onVerseClick: PropTypes.func,\n  onWordClick: PropTypes.func,\n  onClickAway: PropTypes.func,\n  onNoteClick: PropTypes.func,\n  onWordHover: PropTypes.func,\n  onContextClick: PropTypes.func,\n  inverted: PropTypes.bool,\n  verseIdentifierPrefix: PropTypes.string,\n  fontSizeAdjustment: PropTypes.number,\n  notesMetaData: PropTypes.arrayOf(PropTypes.shape),\n};\n\nChapter.defaultProps = {\n  highlightedVerse: null,\n  highlightedWords: null,\n  onVerseClick: () => { },\n  onWordClick: () => { },\n  onClickAway: () => { },\n  onNoteClick: () => { },\n  onWordHover: () => { },\n  onContextClick: () => { },\n  inverted: false,\n  verseIdentifierPrefix: '',\n  fontSizeAdjustment: 0,\n  notesMetaData: null,\n};\n\nexport default Chapter;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Header, Modal, Table, Placeholder,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { ENDPOINT_VERSION_INFO } from \"../Endpoints/urls\";\nimport VersionInfo from '../../Version.json'\n\nconst AboutDialog = ({ onClose }) => {\n\n  const [serverVersionInfo, setServerVersionInfo] = useState(null);\n  const [error, setError] = useState(null);\n\n  const getServerVersionInfo = () => {\n    fetch(ENDPOINT_VERSION_INFO())\n      .then((res) => res.json())\n      .then((newData) => {\n        setServerVersionInfo(newData);\n      })\n      .catch((e) => {\n        setError(e.toString());\n      });\n  };\n\n  useEffect(() => {\n    getServerVersionInfo();\n  }, []);\n\n  const getInfoRow = (title, description) => {\n    return (\n      <Table.Row>\n        <Table.Cell>\n          <strong>{title}</strong>\n        </Table.Cell>\n        <Table.Cell>{description}</Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  const getInfoLinkRow = (title, link, linkName, prefix = '') => {\n    return (\n      <Table.Row>\n        <Table.Cell>\n          <strong>{title}</strong>\n        </Table.Cell>\n        <Table.Cell>\n          {prefix}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n            {linkName}\n          </a>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <Modal defaultOpen onClose={onClose}>\n      <Header content=\"About TextCritical.net\" />\n      <Modal.Content>\n        <p>\n          TextCritical.net is a website that provides ancient Greek texts and\n          useful analysis tools.\n        </p>\n        <Table basic=\"very\" celled collapsing>\n          <Table.Body>\n            {getInfoRow('Version', VersionInfo.version)}\n            {serverVersionInfo && getInfoRow('Server Version', `${serverVersionInfo.version}, ${serverVersionInfo.build} (${serverVersionInfo.build_date})`)}\n            {!serverVersionInfo && !error && getInfoRow('Server Version', (<Placeholder><Placeholder.Line /></Placeholder>))}\n            {error && getInfoRow('Server Version', 'Unable to get server version information')}\n            {getInfoLinkRow(\n              'Sources of the works',\n              'https://lukemurphey.net/projects/ancient-text-reader/wiki/Content_Sources',\n              'LukeMurphey.net',\n              'Available at ',\n            )}\n            {getInfoLinkRow(\n              'Source Code',\n              'https://github.com/LukeMurphey/textcritical_net',\n              'Github.com',\n              'Available at ',\n            )}\n            {getInfoLinkRow(\n              'Components used',\n              'https://lukemurphey.net/projects/ancient-text-reader/wiki/Dependencies',\n              'LukeMurphey.net',\n              'Available at ',\n            )}\n          </Table.Body>\n        </Table>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose}>Close</Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nAboutDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AboutDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message, Button } from 'semantic-ui-react';\n\nconst NoWorkSelected = ({ inverted, onClick }) => (\n  <Message info className={inverted ? 'inverted' : ''}>\n    <Message.Header>No Book Selected</Message.Header>\n    <p>\n      Choose a book above to begin reading.\n    </p>\n    {onClick && (\n      <p>\n        <Button onClick={() => onClick()} inverted={inverted}>Open Library</Button>\n      </p>\n    )}\n  </Message>\n);\n\nNoWorkSelected.propTypes = {\n  onClick: PropTypes.func,\n  inverted: PropTypes.bool,\n};\n\nNoWorkSelected.defaultProps = {\n  inverted: false,\n  onClick: null,\n};\n\nexport default NoWorkSelected;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Image, Button, Loader, Icon, Dropdown, Responsive } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { ENDPOINT_RESOLVE_REFERENCE, ENDPOINT_WORK_IMAGE } from \"../Endpoints/urls\";\nimport { MODE_LOADING, MODE_ERROR, MODE_DONE } from \"../Constants\";\nimport { READ_WORK } from \"../URLs\";\nimport { truncate } from \"../Utils\";\n\nconst WorkCard = ({\n  inverted,\n  work,\n  divisions,\n  divisionReference,\n  history,\n  setFavoriteWork,\n  removeFavoriteWork,\n}) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const loadInfo = (titleSlug) => {\n    fetch(ENDPOINT_RESOLVE_REFERENCE(titleSlug, divisionReference))\n      .then((res) => res.json())\n      .then((workData) => {\n        setData(workData);\n      })\n      .catch((e) => {\n        setError(e.toString());\n      });\n  };\n\n  useEffect(() => {\n    if (!data && !error) loadInfo(work);\n  });\n\n  const onLoadWork = () => {\n    // Get the URL\n    const workUrl = READ_WORK(work, null, ...divisions);\n    history.push(workUrl);\n  };\n\n  // Determine the mode\n  let mode = MODE_LOADING;\n\n  if (error) {\n    mode = MODE_ERROR;\n  } else if (data) {\n    mode = MODE_DONE;\n  }\n\n  // Determine the classname\n  const className = inverted ? 'inverted' : '';\n\n  // Determine if we have options\n  const provideDropdown = removeFavoriteWork || setFavoriteWork;\n\n  return (\n    <Card className={className}>\n      <Card.Content style={{cursor:'pointer'}} onClick={onLoadWork}>\n        <Responsive minWidth={992}>\n          <Image floated=\"right\" size=\"mini\" src={ENDPOINT_WORK_IMAGE(work)} />\n        </Responsive>\n        <Responsive maxWidth={992}>\n          <Image size=\"small\" src={ENDPOINT_WORK_IMAGE(work, 200)} />\n        </Responsive>\n        {mode === MODE_DONE && (\n          <Responsive minWidth={992}>\n            <Card.Header\n              style={{\n                lineHeight: \"1.2em\",\n                maxHeight: \"2.4em\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: 'black',\n                fontWeight: 'bold'\n              }}\n            >\n              {truncate(data.work_title, 20)}\n            </Card.Header>\n            <Card.Meta>{data.division_title}</Card.Meta>\n          </Responsive>\n        )}\n        {mode === MODE_LOADING && <Loader active />}\n        {mode === MODE_ERROR && (\n          <Icon color=\"red\" name=\"attention\" size=\"large\" title={error} />\n        )}\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          {provideDropdown && (\n            <>\n              <Button.Group fluid color='green'>\n                <Responsive minWidth={992}>\n                  <Button color='green' onClick={onLoadWork}>\n                    Read\n                  </Button>\n                </Responsive>\n                <Dropdown\n                  style={{textAlign: 'center'}}\n                  className='button icon'\n                  floating\n                  trigger={<></>}\n                >\n                  <Dropdown.Menu>\n                    {setFavoriteWork && (\n                      <Dropdown.Item icon='heart' data-testid=\"setFav\" text='Set as favorite' onClick={() => setFavoriteWork(work)} />\n                    )}\n                    {removeFavoriteWork && (\n                      <Dropdown.Item icon='remove' data-testid=\"removeFav\" text='Remove from favorites' onClick={() => removeFavoriteWork(work)} />\n                    )}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Button.Group>\n            </>\n          )}\n          {!provideDropdown && (\n          <Button basic color=\"green\" onClick={onLoadWork}>\n            Read\n          </Button>\n          )}\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nWorkCard.propTypes = {\n  inverted: PropTypes.bool,\n  work: PropTypes.string.isRequired,\n  divisionReference: PropTypes.string,\n  divisions: PropTypes.arrayOf(PropTypes.string),\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  setFavoriteWork: PropTypes.func,\n  removeFavoriteWork: PropTypes.func,\n};\n\nWorkCard.defaultProps = {\n  inverted: false,\n  divisionReference: null,\n  divisions: [],\n  setFavoriteWork: null,\n  removeFavoriteWork: null,\n};\n\nexport default withRouter(WorkCard);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Header, Button } from \"semantic-ui-react\";\nimport {\n  getWorksLastRead,\n  maxHistoryCount,\n  clearWorksLastRead,\n  getFavoriteWorks,\n  clearFavorites,\n  setFavoriteWork,\n  removeFavoriteWork,\n} from \"../Settings/worksList\";\nimport WorkCard from \"./WorkCard\";\n\nconst FavoriteWorks = ({ inverted, storageProvider }) => {\n  let recentlyRead = getWorksLastRead(storageProvider);\n  let favorites = getFavoriteWorks(storageProvider);\n\n  const [value, setValue] = useState(0); // Using an integer as a state marker to get the view to rerender when necessary\n\n  const onFavWork = work => {\n    setFavoriteWork(work, storageProvider);\n    setValue(value + 1)\n  }\n\n  const onUnFavWork = work => {\n    removeFavoriteWork(work, storageProvider);\n    setValue(value + 1)\n  }\n\n  return (\n    <div>\n      {((recentlyRead && recentlyRead.length > 0) || value > 0) && (\n        <>\n          <Header inverted={inverted} as=\"h3\">\n            Most Recently Read\n            {recentlyRead && recentlyRead.length > 0 && (\n              <Button\n                floated=\"right\"\n                onClick={() => {\n                  clearWorksLastRead(storageProvider);\n                  setValue(value + 1);\n                }}\n              >\n                Clear this list\n              </Button>\n              )}\n          </Header>\n          {recentlyRead && recentlyRead.length > 0 && (\n          <Card.Group style={{clear: 'both'}} itemsPerRow={maxHistoryCount()}>\n            {recentlyRead.map((work) => (\n              <WorkCard\n                key={work.workTitleSlug}\n                work={work.workTitleSlug}\n                divisions={work.divisions}\n                divisionReference={work.divisionReference}\n                setFavoriteWork={onFavWork}\n              />\n            ))}\n          </Card.Group>\n          )}\n          {(!recentlyRead || recentlyRead.length === 0) && value > 0 && (\n            <>No works in the list of recently read works</>\n          )}\n        </>\n      )}\n\n      {((favorites && favorites.length > 0) || value > 0) && (\n        <>\n          <Header inverted={inverted} as=\"h3\">\n            Favorites\n            {favorites && favorites.length > 0 && (\n            <Button\n              floated=\"right\"\n              onClick={() => {\n                clearFavorites(storageProvider);\n                setValue(value + 1);\n              }}\n            >\n              Clear this list\n            </Button>\n            )}\n          </Header>\n          {favorites && favorites.length > 0 && (\n          <Card.Group style={{clear: 'both'}} itemsPerRow={maxHistoryCount()}>\n            {favorites.map((work) => (\n              <WorkCard\n                key={work.workTitleSlug}\n                work={work.workTitleSlug}\n                divisions={work.divisions}\n                divisionReference={work.divisionReference}\n                removeFavoriteWork={onUnFavWork}\n              />\n            ))}\n          </Card.Group>\n          )}\n          {(!favorites || favorites.length === 0) && value > 0 && (\n            <>No favorited works</>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nFavoriteWorks.propTypes = {\n  inverted: PropTypes.bool,\n  storageProvider: PropTypes.object\n};\n\nFavoriteWorks.defaultProps = {\n  inverted: false,\n  storageProvider: null\n};\n\nexport default FavoriteWorks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Progress } from 'semantic-ui-react';\n\nconst BookProgress = ({ data, inverted }) => {\n\n    // Create a custom className for signaling the desire to switch to inverted\n    let classNameSuffix = \"\";\n\n    if (inverted) {\n      classNameSuffix = \" inverted\";\n    }\n\n    return (\n      <>\n        { data && data.total_chapters > 1 && data.total_chapters_in_book > 1 && (\n          <>\n            <Segment.Group\n              horizontal\n              style={{ border: 0, marginBottom: 4 }}\n              className={`${classNameSuffix}`}\n            >\n              <Segment basic inverted style={{ padding: 0 }}>\n                {data.completed_chapters_in_book}\n                {' '}\n                of\n                {\" \"}\n                {data.total_chapters_in_book}\n                {' '}\n                chapters\n                {\" \"}\n              </Segment>\n              <Segment\n                basic\n                inverted\n                style={{ textAlign: \"right\", padding: 0 }}\n              >\n                {Math.round(data.progress_in_book)}\n                % through the book\n              </Segment>\n            </Segment.Group>\n            <Progress\n              className=\"bookProgress\"\n              color=\"blue\"\n              style={{ margin: \"0 0 8px 0\" }}\n              percent={data.progress_in_book}\n              size=\"tiny\"\n            />\n          </>\n        )}\n      </>\n)};\n\nBookProgress.propTypes = {\n  data: PropTypes.shape({\n    progress_in_book: PropTypes.number,\n    total_chapters_in_book: PropTypes.number,\n    completed_chapters_in_book: PropTypes.number,\n    total_chapters: PropTypes.number,\n}),\n  inverted: PropTypes.bool,\n};\n\nBookProgress.defaultProps = {\n  inverted: false,\n  data: null,\n};\n\nexport default BookProgress;\n","import React from 'react';\nimport { Sidebar, Image, Menu } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport {\n  ENDPOINT_WORK_IMAGE,\n} from \"../Endpoints/urls\";\n\nconst BookSidebar = ({ sidebarVisible, work, openWorkInfoModal, openDownloadModal, openSearch, setSidebarVisible }) => {\n  return (\n    <Sidebar\n      as={Menu}\n      animation=\"overlay\"\n      icon=\"labeled\"\n      style={{ width: 200, paddingTop: 50 }}\n      inverted\n      visible={sidebarVisible}\n      onHide={() => setSidebarVisible(false)}\n      vertical\n      width=\"thin\"\n    >\n      <Image src={ENDPOINT_WORK_IMAGE(work, 400)} />\n      <Menu.Item as=\"a\" onClick={() => openWorkInfoModal()}>\n        Information\n      </Menu.Item>\n      <Menu.Item as=\"a\" onClick={() => openDownloadModal()}>\n        Download\n      </Menu.Item>\n      <Menu.Item as=\"a\" onClick={() => openSearch()}>\n        Search\n      </Menu.Item>\n    </Sidebar>\n  )\n}\n\nBookSidebar.propTypes = {\n  sidebarVisible: PropTypes.bool.isRequired,\n  work: PropTypes.string.isRequired,\n  openWorkInfoModal: PropTypes.func.isRequired,\n  openDownloadModal: PropTypes.func.isRequired,\n  openSearch: PropTypes.func.isRequired,\n  setSidebarVisible: PropTypes.func.isRequired,\n}\n\nexport default BookSidebar;\n","export default __webpack_public_path__ + \"images/5a0a1a6aa2a65b08197971f38a43cf6c-Library.svg\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Visibility, Image, Loader } from 'semantic-ui-react';\n\nconst LazyImage = ({size, children, src, style}) => {\n  const [show, setShow] = useState(false);\n\n  if (!show) {\n    return (\n      <Visibility as=\"span\" onOnScreen={() => setShow(true)}>\n        {children && children}\n        {!children && <Loader data-testid=\"loader\" active inline=\"centered\" size={size} />}\n      </Visibility>\n    );\n  }\n  \n  return <Image style={style} src={src} />;\n};\n\nLazyImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  children: PropTypes.element,\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n};\n\nLazyImage.defaultProps = {\n  size: 'tiny',\n  children: null,\n  style: {},\n};\n\nexport default LazyImage;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Table, Placeholder, Image, Input, Label,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n// regeneratorRuntime is needed for AwesomeDebouncePromise\n// eslint-disable-next-line no-unused-vars\nimport regeneratorRuntime from 'regenerator-runtime';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { ENDPOINT_WORKS_LISTS, ENDPOINT_WORK_IMAGE } from '../Endpoints/urls';\nimport LazyImage from '../LazyImage';\nimport ErrorMessage from '../ErrorMessage';\n\nconst ClickStyle = {\n  cursor: 'pointer',\n};\n\nconst workMatchesSearch = (work, search) => {\n  return work.title.toLowerCase().includes(search)\n  || work.title_slug.toLowerCase().includes(search)\n  || work.author.toLowerCase().includes(search)\n  || work.editor.toLowerCase().includes(search)\n  || work.language.toLowerCase().includes(search);\n}\n\nconst BookSelection = ({ relatedWorks, onSelectWork, loadedWork, authors }) => {\n\n  const [works, setWorks] = useState(null);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const searchInput = useRef(null);\n\n  const onSearchChange = (data) => {\n    setSearch(data.value);\n  }\n\n  /**\n   * Determine if the work is a related work.\n   *\n   * @param {object} work The work to see if it is a related work\n   */\n   const isRelatedWork = (work) => {\n    const found = relatedWorks.find((relatedWork) => relatedWork.title_slug === work.title_slug);\n    if (found) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Sort the list of works.\n   *\n   * @param {array} works The works to sort\n   */\n  const sortWorks = (worksToSort) => {\n    worksToSort.sort((a, b) => {\n      if (isRelatedWork(a) && !isRelatedWork(b)) {\n        return -1;\n      }\n      if (isRelatedWork(b) && !isRelatedWork(a)) {\n        return 1;\n      }\n      return a.title > b.title;\n    });\n\n    return worksToSort;\n  }\n\n  /**\n   * Load the list of works from the server.\n   */\n  const loadInfo = () => {\n    fetch(ENDPOINT_WORKS_LISTS())\n      .then((res) => res.json())\n      .then((worksData) => {\n        setWorks(sortWorks(worksData));\n        searchInput.current.focus();\n      })\n      .catch((e) => {\n        setError(e.toString());\n      });\n  }\n\n  /**\n   * Determine if the work is by the same author\n   *\n   * @param {object} work The work to see if it is a related work\n   */\n   const isSameAuthor = (work) => {\n    if (!authors || !work.author) {\n      return false;\n    }\n\n    const found = authors.find((author) => author.name === work.author);\n\n    if (found) {\n      return true;\n    }\n\n    return false;\n  }\n\n  const getWorkRow = (work, lazyLoad = true, onLargeScreen = true) => {\n    const handler = () => { onSelectWork(work.title_slug); };\n    const isRelated = isRelatedWork(work);\n    const thisIsSameAuthor = isSameAuthor(work);\n    const isLoadedWork = (loadedWork && loadedWork === work.title_slug);\n\n    return (\n      <Table.Row key={work.title_slug}>\n        { onLargeScreen && (\n          <Table.Cell className=\"workImage\" style={ClickStyle} onClick={handler}>\n            { lazyLoad && (\n              <LazyImage style={{ width: 32 }} src={ENDPOINT_WORK_IMAGE(work.title_slug, 64)}>\n                <Image style={{ width: 32 }} src=\"/book-cover-small.png\" />\n              </LazyImage>\n            )}\n            { !lazyLoad && (\n              <Image style={{ width: 32 }} src={ENDPOINT_WORK_IMAGE(work.title_slug, 64)} />\n            )}\n          </Table.Cell>\n        )}\n        <Table.Cell style={ClickStyle} onClick={handler}>\n          <div>\n            {work.title}\n            <div style={{ display: 'inline-block', float: 'right', paddingRight: 4 }}>\n              {isRelated && onLargeScreen && (\n                <Label as=\"a\" color=\"red\">Related Work</Label>\n              )}\n              {thisIsSameAuthor && !isLoadedWork && onLargeScreen && (\n                <Label as=\"a\" color=\"blue\">Same Author</Label>\n              )}\n              {isLoadedWork && onLargeScreen && (\n                <Label as=\"a\" color=\"green\">This work</Label>\n              )}\n              {isRelated && !onLargeScreen && (\n                <Label as=\"a\" color=\"red\" circular empty />\n              )}\n              {thisIsSameAuthor && !isLoadedWork && !onLargeScreen && (\n                <Label as=\"a\" color=\"blue\" circular empty />\n              )}\n            </div>\n          </div>\n          <div style={{ color: '#888' }}>\n            {work.language}\n            {work.author && ` by ${work.author}`}\n            {work.editor && ` (${work.editor})`}\n          </div>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  const searchLowerCase = search.toLowerCase();\n\n  const onChange = (event, data) => { onSearchChange(data); };\n  const onChangeDebounced = AwesomeDebouncePromise(onChange, 500);\n\n  const onLargeScreen = window.innerWidth > 767;\n\n  // Change the width on small screens\n  const width = onLargeScreen ? 500 : 250;\n\n  useEffect(() => {\n    loadInfo();\n  }, []);\n\n  return (\n    <>\n      {!error && works && (\n        <div>\n          <Input\n            ref={searchInput}\n            onChange={onChangeDebounced}\n            style={{ width: \"100%\" }}\n            placeholder=\"Search...\"\n          />\n        </div>\n      )}\n      <div style={{ maxHeight: 400, width, overflowY: \"auto\" }}>\n        {error && (\n          <ErrorMessage\n            title=\"Unable to load the list of works\"\n            description=\"Unable to get the list of works from the server\"\n            message={error}\n          />\n        )}\n        {!error && works && (\n          <Table basic=\"very\" celled collapsing>\n            <Table.Body>\n              {works\n                .filter((work) =>\n                  workMatchesSearch(work, searchLowerCase)\n                )\n                .map((work, index) =>\n                  getWorkRow(work, index > 15, onLargeScreen)\n                )}\n            </Table.Body>\n          </Table>\n        )}\n        {!error && !works && (\n          <Placeholder>\n            <Placeholder.Paragraph>\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        )}\n      </div>\n    </>\n  );\n}\n\nBookSelection.propTypes = {\n  onSelectWork: PropTypes.func.isRequired,\n  relatedWorks: PropTypes.arrayOf(PropTypes.shape),\n  authors: PropTypes.arrayOf(PropTypes.string),\n  loadedWork: PropTypes.string,\n};\n\nBookSelection.defaultProps = {\n  relatedWorks: [],\n  authors: [],\n  loadedWork: null,\n};\n\nexport default BookSelection;\n","import { ENDPOINT_USER_PREFERENCE_EDIT, ENDPOINT_USER_PREFERENCE_DELETE } from \"../../Endpoints/urls\"\n\n// Setup a remote storage\nexport default class RemoteStorage {\n    constructor(prefs = null, csrfToken = null) {\n        this.store = prefs;\n        this.csrfToken = csrfToken;\n    }\n\n    clear() {\n        this.store = null;\n    }\n\n    getItem(key) {\n        if(this.store === null) {\n            return null;\n        }\n        \n        // Get this from the server\n        return this.store[key] || null;\n    }\n    \n    setItem(key, value) {\n        const searchParams = new URLSearchParams({'value': value});\n\n        // Save this to the server\n        /*\n        POST calls in a Django app need a little work to make them function. I found that I needed to do the following:\n          1) Include the \"X-CSRFToken\" header; this needs to match the value provided by the server\n          2) Set the content-type to \"application/x-www-form-urlencoded\" and include the parameters as a URL encoded string\n        */\n        fetch(ENDPOINT_USER_PREFERENCE_EDIT(key), {\n            method: 'POST',\n            body: searchParams.toString(),\n            headers: {\n                'X-CSRFToken': this.csrfToken,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n        })\n        this.store[key] = value.toString();\n    }\n\n    removeItem(key) {\n        fetch(ENDPOINT_USER_PREFERENCE_DELETE(key), {\n            method: 'POST',\n            headers: {\n                'X-CSRFToken': this.csrfToken,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n        })\n        delete this.store[key];\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport features from './features.json';\nimport { ENDPOINT_SOCIAL_LOGIN, ENDPOINT_USER_PREFERENCES } from \"../Endpoints/urls\";\nimport RemoteStorage from \"../Settings/RemoteStorage\";\n\nexport const GlobalAppContext = React.createContext({});\n\nexport const GlobalAppContextProvider = ({ children }) => {\n\n  // This will store information about whether the user is logged in or not.\n  const [authInfo, setAuthInfo] = useState({});\n  const [authLoadingDone, setAuthLoadingDone] = useState(false);\n\n  // This stores the storage provider that will store user preferences\n  const [storageProvider, setStorageProvider] = useState(null);\n\n  // Get the user preferences\n  const getPreferences = (csrfToken) => {\n    fetch(ENDPOINT_USER_PREFERENCES())\n      .then((res) => res.json())\n      .then((prefs) => {\n        // eslint-disable-next-line no-console\n        console.info(\"Successfully loaded the user's preferences\");\n        setStorageProvider(new RemoteStorage(prefs, csrfToken));\n        setAuthLoadingDone(true);\n      })\n  };\n\n  // Get information about the logged in user\n  const getAuthInfo = () => {\n    fetch(ENDPOINT_SOCIAL_LOGIN())\n      .then((res) => res.json())\n      .then((newData) => {\n        setAuthInfo(newData);\n\n        // Start getting the preferences from the server if the user is authenticated\n        if (\n          newData &&\n          newData.authenticated &&\n          Object.prototype.hasOwnProperty.call(newData, \"csrf_token\")\n        ) {\n          getPreferences(newData.csrf_token);\n        } else {\n          setAuthLoadingDone(true);\n        }\n      })\n      .catch(() => {\n        setAuthLoadingDone(true);\n      });\n  };\n\n  // Get the authentication information\n  useEffect(() => {\n    getAuthInfo();\n  }, []);\n\n  const checkAuthenticationState = () => {\n    setAuthLoadingDone(false);\n    getAuthInfo();\n  }\n\n  return (\n    <GlobalAppContext.Provider value={{ features, authentication: { authLoadingDone, ...authInfo, checkAuthenticationState }, storageProvider}}>\n      {children}\n    </GlobalAppContext.Provider>\n  );\n};\n\nGlobalAppContextProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default GlobalAppContextProvider;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Menu, Container, Icon, Popup, Input, Button, Responsive, Dropdown } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\nimport { START_PAGE, BETA_CODE_CONVERT, SEARCH, NOTES } from \"../URLs\";\nimport LibraryIcon from \"../Icons/Library.svg\";\nimport BookSelection from '../BookSelection';\nimport { addHandler, removeHandler } from '../Utils';\nimport {\n  ENDPOINT_RESOLVE_REFERENCE,\n  ENDPOINT_READ_WORK,\n} from \"../Endpoints/urls\";\nimport { GlobalAppContext } from \"../GlobalAppContext\";\n\nconst NextPageStyle = {\n  bottom: \"20px\",\n  right: \"20px\",\n  position: \"fixed\",\n};\n\nconst PriorPageStyle = {\n  bottom: \"20px\",\n  left: \"20px\",\n  position: \"fixed\",\n};\n\nconst resolveReferenceDebounced = AwesomeDebouncePromise(\n  (titleSlug, reference) =>\n    fetch(ENDPOINT_RESOLVE_REFERENCE(titleSlug, reference)),\n  500\n);\n\nconst ReadingMenuBar = ({\n  inverted,\n  toggleSidebarVisible,\n  loadedWork,\n  relatedWorks,\n  authors,\n  onSelectWork,\n  setBookSelectionOpen,\n  bookSelectionOpen,\n  goToReference,\n  openAboutModal,\n  referenceValue,\n  history,\n  hasPriorChapter,\n  hasNextChapter,\n  goToPriorChapter,\n  goToNextChapter,\n  nextChapterDescriptor,\n  previousChapterDescriptor,\n  increaseFontSize,\n  decreaseFontSize,\n  increaseFontSizeDisabled,\n  decreaseFontSizeDisabled,\n }) => {\n  const { authentication } = React.useContext(GlobalAppContext);\n\n  // Create a custom className for signaling the desire to switch to inverted\n  let classNameSuffix = \"\";\n\n  if (inverted) {\n    classNameSuffix = \" inverted\";\n  }\n\n  // The temp reference value represents the local value of the reference that has not yet been\n  // sent up to the caller.\n  const [ tempReferenceValue, setTempReferenceValue ] = useState(null);\n\n  // Indicates if the reference is valid\n  const [ referenceValid, setReferenceValid ] = useState(true);\n\n  // Indicates we got an error somewhere\n  const [ error, setError ] = useState(null);\n\n  // This will store the last reference set so that we make sure not to replace the reference\n  // we did a reference resolution check against the server for.\n  const lastSetReference = useRef(null);\n\n  const [ menuOpen, setMenuOpen ] = useState(false);\n  \n  /**\n   * Go to the reference defined in the input box but only if it is valid.\n   */\n  const checkAndGoToReference = (requestedWork, requestedReferenceValue) => {\n    // Stop if we have no where to go\n    if (!requestedWork || !requestedReferenceValue) {\n      return;\n    }\n\n    // Verify the reference is valid before going to it\n    fetch(ENDPOINT_RESOLVE_REFERENCE(requestedWork, requestedReferenceValue))\n      .then((res) => Promise.all([res.status, res.json()]))\n      .then(([status, referenceInfo]) => {\n        if (status === 200) {\n          goToReference(requestedWork, requestedReferenceValue, referenceInfo);\n        }\n      })\n  }\n\n    /**\n     * Accept the enter key as a jump to execute the reference jump.\n     * @param {object} event The event from the key press.\n     */\n    const onKeyPressed = (event) => {\n      if (event.key === \"Enter\") {\n        setTempReferenceValue(null);\n        checkAndGoToReference(loadedWork, tempReferenceValue || referenceValue);\n      }\n    }\n\n    /**\n     * Handle a change in the reference input.\n     *\n     * @param {*} event React's original SyntheticEvent.\n     * @param {*} info All props.\n     */\n    const changeReference = (event, info) => {\n      // Stop if we have nothing to lookup\n      if (!loadedWork || !info.value) {\n        return;\n      }\n\n      setTempReferenceValue(info.value);\n      setReferenceValid(true);\n      setError(null);\n\n      // Store this entry so that we can avoid updating the reference if the user entered another\n      // reference before the server's response came back\n      lastSetReference.current = info.value;\n\n      resolveReferenceDebounced(loadedWork, info.value)\n        .then((res)  => {\n          // If the user already changed the value again, just ignore it\n          if (lastSetReference.current !== info.value) {\n            return;\n          }\n\n          if (res.status === 200) {\n            setTempReferenceValue(info.value);\n            setReferenceValid(true);\n          } else {\n            setTempReferenceValue(info.value);\n            setReferenceValid(false);\n          }\n        })\n        .catch((e) => {\n          setError(e.toString());\n        });\n    }\n\n  /**\n   * Preload the next chapter.\n   */\n  const preloadNextChapter = () => {\n    if (nextChapterDescriptor) {\n      fetch(\n        ENDPOINT_READ_WORK(`${loadedWork}/${nextChapterDescriptor}`)\n      );\n    }\n  }\n\n  /**\n   * Preload the prior chapter.\n   */\n  const preloadPriorChapter = () => {\n    if (previousChapterDescriptor) {\n      fetch(\n        ENDPOINT_READ_WORK(\n          `${loadedWork}/${previousChapterDescriptor}`\n        )\n      );\n    }\n  }\n\n    /**\n     * Preload the next and prior chapter\n     */\n    const preloadChapters = () => {\n      preloadNextChapter();\n      preloadPriorChapter();\n    }\n\n    /**\n     * Open the start page.\n     */\n    const openStartPage = () => {\n      history.push(START_PAGE());\n      setMenuOpen(false);\n    }\n\n    /**\n     * Increase font size.\n     */\n    const clickIncreaseFontSize = () => {\n      if(increaseFontSize){\n        increaseFontSize();\n      }\n    }\n\n    /**\n     * Decrease font size.\n     */\n    const clickDecreaseFontSize = () => {\n      if(decreaseFontSize){\n        decreaseFontSize();\n      }\n    }\n\n    /**\n     * Open the beta-code conversion page.\n     */\n    const openBetaCodePage = () => {\n      history.push(BETA_CODE_CONVERT());\n      setMenuOpen(false);\n    }\n\n    /**\n     * Open the search page.\n     */\n    const openSearchPage = () => {\n      history.push(SEARCH());\n      setMenuOpen(false);\n    }\n\n    /**\n     * Open the notes page.\n     */\n    const openNotesPage = () => {\n      history.push(NOTES());\n      setMenuOpen(false);\n    }\n\n    /**\n     * Clear the overriding reference value when the caller changes it.\n     * This is necessary when the caller has changed to another page and we need to show the we\n     * navigated.\n     */\n    useEffect(() => {\n      setTempReferenceValue(null);\n    }, [referenceValue]);\n\n    /**\n     * Preload the pages when we get new data.\n     */\n    useEffect(() => {\n      preloadChapters();\n    }, [nextChapterDescriptor, previousChapterDescriptor]);\n    \n    /**\n     * Handle key presses\n     */\n    const upHandler = ({ key, ctrlKey }) => {\n      if (key === 'ArrowRight' && ctrlKey) {\n        if(goToNextChapter) {\n          goToNextChapter();\n        }\n      }\n  \n      if (key === 'ArrowLeft' && ctrlKey) {\n        if(goToPriorChapter) {\n          goToPriorChapter();\n        }\n      }\n    };\n\n    // Wire-up the handlers for the key presses\n    const handler = (event) => upHandler(event);\n    useEffect(() => {\n      addHandler(handler, 'keyup');\n      return () => removeHandler(handler, 'keyup');\n    });\n\n    const checkAuthWindowURL = (loginWindow) => {\n      if(loginWindow) {\n        let authSucceeded = false;\n\n        try {\n          if(loginWindow.document.location && loginWindow.document.location.pathname === '/auth_success') {\n\n            // Refresh the authentication info\n            authentication.checkAuthenticationState();\n\n            // Close the authentication window now that it is done\n            loginWindow.close();\n\n            // Close the menu\n            setMenuOpen(false);\n\n            authSucceeded = true\n          }\n        } catch (DOMException) {\n          // This is due the window being on the Google login page.\n          // Ignore it for now and wait for the page to be redirected to the app login page.\n          authSucceeded = false;\n        }\n        \n        if (!authSucceeded) {\n          setTimeout(() => checkAuthWindowURL(loginWindow), 500);\n        }\n      }\n    };\n\n    return (\n      <Menu\n        inverted={inverted}\n        style={{ zIndex: 103 }}\n        className={`control ${classNameSuffix}`}\n        fixed=\"top\"\n      >\n        <Container>\n          {loadedWork && (\n          <Menu.Item\n            name=\"works\"\n            onClick={() => toggleSidebarVisible()}\n          >\n            <Icon name=\"bars\" />\n          </Menu.Item>\n        )}\n          <Popup\n            content={(\n              <BookSelection\n                relatedWorks={relatedWorks}\n                authors={authors}\n                onSelectWork={(work) => onSelectWork(work)}\n                loadedWork={loadedWork}\n              />\n          )}\n            on=\"click\"\n            position=\"bottom left\"\n            pinned\n            onClose={() => setBookSelectionOpen(false)}\n            onOpen={() => setBookSelectionOpen(true)}\n            open={bookSelectionOpen}\n            trigger={(\n              <Menu.Item name=\"Library\">\n                <img style={{ width: 16 }} src={LibraryIcon} alt=\"Library\" />\n              </Menu.Item>\n          )}\n          />\n          {loadedWork && (\n          <Menu.Item>\n            <Input\n              inverted={inverted}\n              className=\"referenceJumpInput\"\n              action={(\n                <Button\n                  disabled={!referenceValid}\n                  inverted={inverted}\n                  onClick={() => {\n                    setTempReferenceValue(null);\n                    checkAndGoToReference(loadedWork, tempReferenceValue || referenceValue);\n                  }}\n                  basic\n                >\n                  Go\n                </Button>\n              )}\n              placeholder=\"Jump to reference...\"\n              value={tempReferenceValue || referenceValue || ''}\n              error={!referenceValid}\n              onChange={(e, d) => changeReference(e, d)}\n              onKeyPress={(e, d) => onKeyPressed(e, d)}\n            />\n            {error && (<Popup inverted={inverted} content={error} trigger={<Icon style={{paddingLeft: 8}} color=\"red\" name=\"warning sign\" />} />)}\n          </Menu.Item>\n        )}\n          <div style={{ float: \"right\", marginLeft: \"auto\", marginTop: 11 }}>\n            <Responsive minWidth={768}>\n              {authentication && authentication.authenticated && (\n                <span style={{marginRight: 18}}>\n                  Hello \n                  {' '}\n                  {authentication.first_name}\n                </span>\n              )}\n              <Dropdown icon=\"ellipsis vertical\" direction=\"left\" open={menuOpen} onClick={() => setMenuOpen(true)} onBlur={() => setMenuOpen(false)}>\n                <Dropdown.Menu>\n                  {(increaseFontSize || decreaseFontSize) && (\n                    <>\n                      <span style={{color: 'rgba(0, 0, 0, 0.87)', marginLeft: 18, marginRight: 12}}>Font size:</span>\n                      <Button.Group>\n                        {increaseFontSize && (\n                          <Button icon=\"plus\" disabled={increaseFontSizeDisabled} onClick={() => clickIncreaseFontSize()} />\n                        )}\n                        {decreaseFontSize && (\n                          <Button icon=\"minus\" disabled={decreaseFontSizeDisabled} onClick={() => clickDecreaseFontSize()} />\n                        )}\n                      </Button.Group>\n                      \n                    </>\n                  )}\n                  <Dropdown.Item\n                    text=\"Go to Start Page\"\n                    onClick={() => openStartPage()}\n                  />\n                  {authentication && authentication.authenticated && (\n                    <Dropdown.Item\n                      text=\"Notes\"\n                      onClick={() => openNotesPage()}\n                    />\n                  )}\n                  <Dropdown.Item\n                    text=\"Search\"\n                    onClick={() => openSearchPage()}\n                  />\n                  {authentication && authentication.authenticated && (\n                    <Dropdown.Item\n                      text=\"Logout\"\n                      onClick={() => {\n                        window.location = authentication.logout;\n                      }}\n                    /> \n                  )}\n                  {authentication && !authentication.authenticated && (\n                    <Dropdown.Item\n                      text=\"Login\"\n                      onClick={() => {\n                        const loginWindow = window.open(authentication.login_google, 'login_google', 'height=500,width=800');\n                        checkAuthWindowURL(loginWindow);\n                        setMenuOpen(false);\n                      }}\n                    /> \n                  )}\n                  <Dropdown.Item\n                    text=\"Look up Greek words (and convert beta-code)\"\n                    onClick={() => openBetaCodePage()}\n                  />\n                  <Dropdown.Item\n                    text=\"About TextCritical.net\"\n                    onClick={() => {\n                      setMenuOpen(false);\n                      openAboutModal();\n                    }}\n                  />\n                </Dropdown.Menu>\n              </Dropdown>\n            </Responsive>\n          </div>\n        </Container>\n        {loadedWork && goToPriorChapter && goToNextChapter && (\n        <>\n          <Button\n            icon\n            inverted={inverted}\n            style={PriorPageStyle}\n            className={`priorPage ${classNameSuffix}`}\n            disabled={!hasPriorChapter}\n            onClick={() => goToPriorChapter()}\n            title=\"Go to prior chapter (or use shortcut ctrl + left arrow)\"\n          >\n            <Icon name=\"left chevron\" />\n          </Button>\n          <Button\n            icon\n            inverted={inverted}\n            style={NextPageStyle}\n            className={`nextPage ${classNameSuffix}`}\n            disabled={!hasNextChapter}\n            onClick={() => goToNextChapter()}\n            title=\"Go to next chapter (or use shortcut ctrl + right arrow)\"\n          >\n            <Icon name=\"right chevron\" />\n          </Button>\n        </>\n      )}\n      </Menu>\n    )\n};\n\nReadingMenuBar.propTypes = {\n  inverted: PropTypes.bool.isRequired,\n  relatedWorks: PropTypes.arrayOf(PropTypes.shape),\n  authors: PropTypes.arrayOf(PropTypes.string),\n  loadedWork: PropTypes.string,\n  toggleSidebarVisible: PropTypes.func.isRequired,\n  onSelectWork: PropTypes.func.isRequired,\n  setBookSelectionOpen: PropTypes.func.isRequired,\n  bookSelectionOpen: PropTypes.bool,\n  goToReference: PropTypes.func.isRequired,\n  openAboutModal: PropTypes.func.isRequired,\n  goToPriorChapter: PropTypes.func,\n  goToNextChapter: PropTypes.func,\n  increaseFontSize: PropTypes.func,\n  decreaseFontSize: PropTypes.func,\n  authenticationCompleted: PropTypes.func,\n  referenceValue: PropTypes.string,\n  hasNextChapter: PropTypes.bool,\n  hasPriorChapter: PropTypes.bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  nextChapterDescriptor: PropTypes.string,\n  previousChapterDescriptor: PropTypes.string,\n  increaseFontSizeDisabled: PropTypes.bool,\n  decreaseFontSizeDisabled: PropTypes.bool,\n}\n\nReadingMenuBar.defaultProps = {\n  referenceValue: '',\n  authors: [],\n  relatedWorks: [],\n  loadedWork: null,\n  bookSelectionOpen: false,\n  hasNextChapter: false,\n  hasPriorChapter: false,\n  goToPriorChapter: null,\n  goToNextChapter: null,\n  increaseFontSize: null,\n  decreaseFontSize: null,\n  nextChapterDescriptor: null,\n  previousChapterDescriptor: null,\n  increaseFontSizeDisabled: true,\n  decreaseFontSizeDisabled: true,\n  authenticationCompleted: null,\n}\n\nexport default withRouter(ReadingMenuBar);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Dropdown,\n  Header,\n} from \"semantic-ui-react\";\nimport { convertDivisionsToOptions, workSearch }  from \"./shortcuts\";\n\nconst ChapterHeader = ({ inverted, data, onChangeChapter }) => {\n  return (\n    <Header inverted={inverted} floated=\"left\" as=\"h3\">\n      {data.chapter.parent_division && (\n      <>\n        <Dropdown\n          inline\n          floating\n          deburr\n          scrolling\n          search={workSearch}\n          options={convertDivisionsToOptions(\n              data.divisions\n            )}\n          value={data.chapter.parent_division.descriptor}\n          onChange={(event, info) =>\n            onChangeChapter(event, info)}\n        />\n        <div\n          style={{\n              display: \"inline-block\",\n              paddingLeft: 6,\n            }}\n        >\n          {data.chapter.type}\n          {` ${data.chapter.descriptor}`}\n        </div>\n      </>\n      )}\n    </Header>\n  )\n};\n\n\nChapterHeader.propTypes = {\n  data: PropTypes.shape({\n      chapter: PropTypes.shape({\n        descriptor: PropTypes.string,\n        type: PropTypes.string,\n        parent_division: PropTypes.shape({\n          descriptor: PropTypes.string,\n        }),\n      }),\n      divisions: PropTypes.arrayOf(PropTypes.shape({\n        description: PropTypes.string,\n        type: PropTypes.string,\n        label: PropTypes.string,\n      }))\n  }),\n  onChangeChapter: PropTypes.func,\n  inverted: PropTypes.bool,\n}\n\nChapterHeader.defaultProps = {\n  data: null,\n  onChangeChapter: null,\n  inverted: false,\n}\n\nexport default ChapterHeader;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst StaleURLMessage = ({ inverted }) => {\n\n  // Create a custom className for signaling the desire to switch to inverted\n  let classNameSuffix = \"\";\n\n  if (inverted) {\n    classNameSuffix = \" inverted\";\n  }\n\n  return (\n    <Message info className={classNameSuffix}>\n      <p>\n        The URL you were using was old so you were redirected to\n        the new one. You may want to update your shortcuts.\n      </p>\n    </Message>\n  );\n};\n\nStaleURLMessage.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nStaleURLMessage.defaultProps = {\n  inverted: false,\n};\n\nexport default StaleURLMessage;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst WarningMessages = ({ inverted, warnings }) => {\n\n  // Create a custom className for signaling the desire to switch to inverted\n  let classNameSuffix = \"\";\n\n  if (inverted) {\n    classNameSuffix = \" inverted\";\n  }\n\n  return (\n    <>\n      { warnings.map((warning) => (\n        <Message\n          className={classNameSuffix}\n          warning\n          key={warning[0]}\n          header={warning[0]}\n          content={warning[1]}\n        />\n      ))}\n    </>\n  )};\n\n  WarningMessages.propTypes = {\n    inverted: PropTypes.bool,\n    warnings: PropTypes.arrayOf(\n      PropTypes.string,\n      PropTypes.string,\n    ).isRequired,\n  };\n  \n  WarningMessages.defaultProps = {\n    inverted: false,\n  };\n  \n  export default WarningMessages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupDialog from '../PopupDialog';\n\nconst FootnoteDialog = (props) => {\n  const {\n    notes, onClose, x, y, positionBelow, positionRight, inverted,\n  } = props;\n\n  return (\n    <PopupDialog\n      onClose={onClose}\n      inverted={inverted}\n      x={x}\n      y={y}\n      positionBelow={positionBelow}\n      positionRight={positionRight}\n    >\n      <div>\n        {notes.map((note, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <div key={index}>{note}</div>\n        ))}\n      </div>\n    </PopupDialog>\n  );\n};\n\nFootnoteDialog.propTypes = {\n  notes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onClose: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  positionBelow: PropTypes.bool,\n  positionRight: PropTypes.bool,\n  inverted: PropTypes.bool,\n};\n\nFootnoteDialog.defaultProps = {\n  positionBelow: true,\n  positionRight: true,\n  inverted: false,\n};\n\nexport default FootnoteDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Header, Button } from 'semantic-ui-react';\nimport UserNotesTable from '../UserNotesTable';\nimport './NotesList.scss';\n\nconst UserNotesList = ({ notes, onClose, onSelectNote, onCreateNewNote, topContent, isLoading }) => {\n\n  return (\n    <Modal defaultOpen onClose={onClose}>\n      <Header content=\"Notes\" />\n      <Modal.Content>\n        {topContent}\n        <UserNotesTable\n          notes={notes}\n          isLoading={isLoading}\n          onSelectNote={onSelectNote}\n          onCreateNewNote={onCreateNewNote}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose}>Close</Button>\n      </Modal.Actions>\n    </Modal>\n  )\n\n};\n\nUserNotesList.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  notes: PropTypes.arrayOf(PropTypes.object),\n  onClose: PropTypes.func.isRequired,\n  onSelectNote: PropTypes.func.isRequired,\n  onCreateNewNote: PropTypes.func.isRequired,\n  topContent: PropTypes.element,\n  isLoading: PropTypes.bool,\n};\n\nUserNotesList.defaultProps = {\n  topContent: null,\n  isLoading: false,\n  notes: null,\n}\n\nexport default UserNotesList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Message } from 'semantic-ui-react'\nimport ErrorMessage from '../ErrorMessage';\nimport UserNoteEditor from './UserNoteEditor';\nimport NoteViewer from './NoteViewer';\nimport NotesList from './NotesList';\nimport { deleteNote, getNotes } from \"../Endpoints\";\n\nexport const STATE_LIST = 0;\nexport const STATE_VIEW = 1;\nexport const STATE_EDIT = 2;\n\nconst UserNoteDialog = ({ onClose, work, division }) => {\n\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [loadedNote, setLoadedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchNotes = () => {\n    setIsLoading(true);\n    getNotes({\n      onSuccess: (newData) => {\n        setNotes(newData);\n        setIsLoading(false);\n      },\n      onError: (e) => {\n        setError(e);\n        setIsLoading(false);\n      },\n      work,\n      division: division.join(\"/\"),\n      includeRelated: true\n    });\n  };\n\n  /**\n   * Delete the note.\n   */\n  const onDeleteNote = (noteId) => {\n\n    // eslint-disable-next-line no-restricted-globals, no-alert\n    if( confirm(\"Are you sure you want to delete this note?\") !== true ){\n      return;\n    }\n\n    deleteNote({\n      onSuccess: () => {\n        // Reload the notes\n        fetchNotes();\n        setLoadedNote(null);\n        setIsEditing(false);\n        setMessage(\"Note successfully deleted\");\n      },\n      onError: (data) => {\n        setError(data);\n      },\n      noteId,\n    })\n  };\n\n  const cancelEditOrViewing = () => {\n    setIsEditing(false);\n    setLoadedNote(null);\n    setMessage(null);\n  };\n\n  const onCreateNewNote = () => {\n    setIsEditing(true);\n    setLoadedNote(null);\n  }\n  \n  const onSave = (_, isNew) => {\n    setIsEditing(false);\n    setLoadedNote(null);\n\n    if(isNew) {\n      setMessage(\"Note successfully created\");\n    }\n    else{\n      setMessage(\"Note successfully edited\");\n    }\n    \n    fetchNotes();\n  }\n\n  // Load the note when opening the form\n  useEffect(() => {\n    fetchNotes()\n  }, []);\n\n  // Determine what state the UI ought to be in\n  let state = STATE_LIST;\n\n  if(!error) {\n\n    if(isEditing === true) {\n      state = STATE_EDIT;\n    }\n\n    else if(loadedNote) {\n      state = STATE_VIEW;\n    }\n  }\n\n  let topContent = null;\n\n  if (error) {\n    topContent = (\n      <ErrorMessage\n        title=\"Error\"\n        description=\"Unable to communicate with the server\"\n        message={error}\n      />\n    )\n  }\n\n  else if (message) {\n    topContent = (\n      <Message positive>{message}</Message>\n    )\n  }\n\n  return (\n    <> \n      {state === STATE_LIST && (\n        <>\n          <NotesList\n            notes={notes}\n            work={work}\n            division={division}\n            onClose={onClose}\n            onSelectNote={(note) => { setLoadedNote(note); setMessage(null); }}\n            onCreateNewNote={onCreateNewNote}\n            topContent={topContent}\n            isLoading={isLoading}\n          />\n        </>\n      )}\n      {state === STATE_EDIT && (\n        <UserNoteEditor note={loadedNote} work={work} division={division} onClose={onClose} onCancel={cancelEditOrViewing} onSave={onSave} />\n      )}\n      {state === STATE_VIEW && (\n        <NoteViewer\n          note={loadedNote}\n          onClose={onClose}\n          onEdit={() => { setIsEditing(true); }}\n          onCancel={cancelEditOrViewing}\n          onDelete={(note) => { onDeleteNote(note.id) }}\n        />\n      )}\n    </>\n  );\n};\n\nUserNoteDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  work: PropTypes.string.isRequired,\n  division: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default UserNoteDialog;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { Menu } from 'semantic-ui-react'\nimport PopupDialog from '../PopupDialog';\nimport UserNoteDialog from \"../UserNoteDialog\";\nimport { CONTEXT_WORD, CONTEXT_VERSE } from '../Reader/ChapterEventHandlers';\nimport { SEARCH, READ_WORK } from '../URLs'\nimport { ENDPOINT_WORK_TEXT } from '../Endpoints/urls';\nimport { GlobalAppContext } from \"../GlobalAppContext\";\n\nconst ContextPopup = ({\n  data, onClose, x, y, positionBelow, positionRight, inverted, contextType, contextData, history,\n}) => {\n\n  const { features, authentication } = React.useContext(GlobalAppContext);\n\n  const [userNoteDialogOpen, setUserNoteDialogOpen] = useState(false);\n\n  const getDivisionReference = (verse = null) => {\n    const divisions = [data.chapter.descriptor];\n\n    if(Object.prototype.hasOwnProperty.call(data.chapter, 'parent_division') && data.chapter.parent_division && data.chapter.parent_division.descriptor) {\n      divisions.splice(0, 0, data.chapter.parent_division.descriptor);\n    }\n\n    // Add in the verse\n    if(verse) {\n      divisions.push(verse);\n    }\n\n    return divisions;\n  };\n\n  const copyVerseToClipboard = () => {\n    fetch(ENDPOINT_WORK_TEXT(data.work.title_slug, ...getDivisionReference(contextData.verse)))\n      .then((res) => res.json())\n      .then((newData) => {\n        navigator.clipboard.writeText(newData);\n        onClose();\n    })\n  }\n\n  const copyChapterToClipboard = () => {\n    fetch(ENDPOINT_WORK_TEXT(data.work.title_slug, ...getDivisionReference()))\n      .then((res) => res.json())\n      .then((newData) => {\n        navigator.clipboard.writeText(newData);\n        onClose();\n    })\n  }\n\n  const copyLinkToClipboard = () => {\n    // Get the URL to the verse if for a verse\n    if(contextData.verse !== undefined) {\n      navigator.clipboard.writeText(`${window.location.protocol}//${window.location.host}${READ_WORK(data.work.title_slug, null, ...getDivisionReference(contextData.verse))}`);\n    }\n    else{\n      navigator.clipboard.writeText(`${window.location.protocol}//${window.location.host}${READ_WORK(data.work.title_slug, null, ...getDivisionReference())}`);\n    }\n    onClose();\n  }\n\n  const createUserNote = () => {\n    setUserNoteDialogOpen(true);\n  }\n\n  const searchAllWorks = () => {\n    history.push(SEARCH(contextData.word));\n    onClose();\n  }\n\n  const searchThisWork = () => {\n    history.push(SEARCH(`work:${data.work.title_slug} ${contextData.word}`));\n    onClose();\n  }\n\n  const getMenuItems = () => {\n    const menuItems = [];\n  \n    // Add the copy to chapter option\n    menuItems.push(\n      <Menu.Item\n        name='chapter_clipboard'\n        onClick={copyChapterToClipboard}\n        key='chapter_clipboard'\n      >\n        Copy chapter\n      </Menu.Item>\n    );\n\n    if(contextType === CONTEXT_VERSE || contextType === CONTEXT_WORD ){\n      if(contextData.verse) {\n        menuItems.push(\n          <Menu.Item\n            name='verse_clipboard'\n            onClick={copyVerseToClipboard}\n            key='verse_clipboard'\n          >\n            Copy verse\n          </Menu.Item>\n        );\n      }\n\n      menuItems.push(\n        <Menu.Item\n          name='link_clipboard'\n          onClick={copyLinkToClipboard}\n          key='link_clipboard'\n        >\n          Copy link\n        </Menu.Item>\n      );\n\n      if(features.userNotesEnabled && authentication.authenticated) {\n        menuItems.push(\n          <Menu.Item\n            name='create_user_note'\n            onClick={createUserNote}\n            key='create_user_note'\n          >\n            View or create notes\n          </Menu.Item>\n        );\n      }\n    }\n\n    if(contextType === CONTEXT_WORD){\n      menuItems.push(\n        <Menu.Item\n          name='search_this_work'\n          onClick={searchThisWork}\n          key='search_this_work'\n        >\n          Search for this word in this work\n        </Menu.Item>\n      );\n\n      menuItems.push(\n        <Menu.Item\n          name='search_all_works'\n          onClick={searchAllWorks}\n          key='search_all_works'\n        >\n          Search for this word in all works\n        </Menu.Item>\n      );\n    }\n\n    return menuItems;\n\n  }\n\n  // Get the list of items to render\n  const menuItems = getMenuItems();\n\n  // Determine the height\n  const height = 16 + (menuItems.length * 43);\n\n  if (userNoteDialogOpen) {\n    return (\n      <UserNoteDialog\n        onClose={onClose}\n        work={data.work.title_slug}\n        division={getDivisionReference(contextData.verse)}\n      />\n    )\n  }\n\n  return (\n    <PopupDialog\n      onClose={onClose}\n      inverted={inverted}\n      x={x}\n      y={y}\n      positionBelow={positionBelow}\n      positionRight={positionRight}\n      width={250}\n      maxHeight={height}\n      frameless\n    >\n      <div>\n        <Menu style={{ width: '100%' }} inverted={inverted} vertical>\n          {menuItems}\n        </Menu>\n      </div>\n    </PopupDialog>\n  );\n\n};\n\nContextPopup.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  positionBelow: PropTypes.bool,\n  positionRight: PropTypes.bool,\n  inverted: PropTypes.bool,\n  contextType: PropTypes.number.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  contextData: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\n\nContextPopup.defaultProps = {\n  positionBelow: true,\n  positionRight: true,\n  inverted: false,\n};\n\nexport default withRouter(ContextPopup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WordInformation from \"../WordInformation/WordInformationPopup\";\nimport FootnotePopup from \"../FootnotePopup\";\nimport ContextPopup from \"../ContextPopup\";\nimport { GlobalAppContext } from \"../GlobalAppContext\";\n\nexport const MODAL_WORD = \"word\";\nexport const MODAL_FOOTNOTE = \"footnote\";\nexport const MODAL_USERNOTE = \"note\";\nexport const MODAL_CONTEXT = \"context\";\n\nconst Popups = ({\n    modal,\n    data,\n    loading,\n    selectedWord,\n    popupX,\n    popupY,\n    popupPositionRight,\n    popupPositionBelow,\n    selectedNote,\n    loadedWork,\n    closeModal,\n    searchState,\n    inverted,\n    popupContextData\n}) => {\n    const { features } = React.useContext(GlobalAppContext);\n\n    return (\n      <>\n        {selectedWord && !loading && modal === MODAL_WORD && (\n        <WordInformation\n          inverted={inverted}\n          positionBelow={popupPositionBelow}\n          positionRight={popupPositionRight}\n          x={popupX}\n          y={popupY}\n          word={selectedWord}\n          work={loadedWork}\n          onClose={() => closeModal()}\n          searchState={searchState}\n        />\n        )}\n        {selectedNote && !loading && modal === MODAL_FOOTNOTE && (\n        <FootnotePopup\n          inverted={inverted}\n          positionBelow={popupPositionBelow}\n          positionRight={popupPositionRight}\n          x={popupX}\n          y={popupY}\n          notes={selectedNote}\n          onClose={() => closeModal()}\n        />\n        )}\n        {data && !loading && modal === MODAL_CONTEXT && features.contextMenuEnabled && (\n        <ContextPopup\n          inverted={inverted}\n          positionBelow={popupPositionBelow}\n          positionRight={popupPositionRight}\n          x={popupX}\n          y={popupY}\n          data={data}\n          onClose={() => closeModal()}\n          contextType={popupContextData.contextType}\n          contextData={popupContextData.contextData}\n        />\n        )}\n      </>\n    )\n};\n\nPopups.propTypes = {\n    modal: PropTypes.string.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    data: PropTypes.object.isRequired,\n    loading: PropTypes.bool,\n    selectedWord: PropTypes.string,\n    popupX: PropTypes.number.isRequired,\n    popupY: PropTypes.number.isRequired,\n    popupPositionRight: PropTypes.bool.isRequired,\n    popupPositionBelow: PropTypes.bool.isRequired,\n    selectedNote: PropTypes.string,\n    loadedWork: PropTypes.string,\n    closeModal: PropTypes.func.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    searchState: PropTypes.object,\n    inverted: PropTypes.bool.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    popupContextData: PropTypes.object.isRequired,\n};\n\nPopups.defaultProps = {\n    loading: false,\n    searchState: {},\n    selectedNote: \"\",\n    selectedWord: \"\",\n    loadedWork: null\n};\n\nexport default Popups;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Container, Header, Grid, Segment, Sidebar, Icon } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { ENDPOINT_READ_WORK, ENDPOINT_WORD_FORMS } from \"../Endpoints/urls\";\nimport { setWorkProgress } from \"../Settings/worksList\";\nimport { setFontAdjustment, getFontAdjustment, MAX_FONT_SIZE_ADJUSTMENT } from \"../Settings/fontAdjustment\";\nimport { SEARCH, READ_WORK } from \"../URLs\";\nimport { PARAMS_READ_WORK } from \"../URLs/Parameters\";\nimport { getPlaceholder, getDialogs }  from \"./shortcuts\";\nimport { scrollToTarget } from '../Utils';\nimport Chapter from \"./Chapter\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport AboutDialog from \"../AboutDialog\";\nimport NoWorkSelected from \"./NoWorkSelected\";\nimport \"./index.scss\";\nimport FavoriteWorks from \"../FavoriteWorks\";\nimport BookProgress from \"./BookProgress\";\nimport BookSidebar from \"./BookSidebar\";\nimport ReadingMenuBar from \"./ReadingMenuBar\";\nimport ChapterHeader from \"./ChapterHeader\";\nimport StaleURLMessage from \"./StaleURLMessage\";\nimport WarningMessages from \"./WarningMessages\";\nimport Popups, { MODAL_WORD, MODAL_FOOTNOTE, MODAL_CONTEXT } from \"./Popups\";\nimport { MODE_LOADING, MODE_ERROR, MODE_DONE, MODE_NOT_READY } from \"../Constants\";\nimport { GlobalAppContext } from \"../GlobalAppContext\";\nimport { getNotesMetaData } from \"../Endpoints\";\n\n/**\n * Below are some notes about how this works:\n *   * useState() will trigger the fetch of the work as necessary when the URL changes.\n *   * loadChapter() will fetch the chapter and load it into the UI.\n */\nconst PARALLEL_WORK_PREFIX = 'secondWork-';\n\nconst ContainerStyle = {\n  paddingTop: 0,\n};\n\nconst SidebarStyle = {\n  height: \"calc(100vh - 60px)\",\n  marginTop: 0,\n};\n\nconst getWordFormsDebounced = AwesomeDebouncePromise(\n  (word) =>\n  fetch(ENDPOINT_WORD_FORMS(word)),\n  500\n);\n\n/**\n * Scroll to the given verse\n *\n * @param {string} verse The number of the verse to scroll to.\n */\nconst scrollToVerse = (verse) => {\n  // Scroll to the verse\n  if(verse) {\n    scrollToTarget(`verse-link_${verse}`);\n  }\n}\n\n/**\n * Get the parameter of the second work to be loaded.\n */\nconst getSecondWorkParameter = (location) => {\n  const params = new URLSearchParams(location.search);\n  return params.get('parallel');\n}\n\n/**\n * Go to the search page.\n */\nconst openSearch = (loadedWork, secondWork, divisions, history) => {\n  let q = `work:${loadedWork}`;\n\n  // Add the second work\n  if (secondWork) {\n    q += ` OR work:${secondWork}`;\n  }\n\n  // Add in the section\n  if (divisions && divisions.length > 0) {\n    q += ` section:\"${divisions[0]}\"`;\n  }\n\n  history.push(SEARCH(q), {\n    work: loadedWork,\n    secondWork,\n    divisions,\n  });\n}\n\nconst Reader = ({\n  inverted,\n  location,\n  history,\n  match,\n  highlightRelatedForms\n}) => {\n\n  const [modal, setModal] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [divisions, setDivisions] = useState(null);\n  const [referenceValue, setReferenceValue] = useState(null);\n  const [loadedWork, setLoadedWork] = useState(null);\n\n  const [bookSelectionOpen, setBookSelectionOpen] = useState(null);\n  const [sidebarVisible, setSidebarVisible] = useState(false);\n\n  const [errorDescription, setErrorDescription] = useState(null);\n  const [errorTitle, setErrorTitle] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [redirectedFrom, setRedirectedFrom] = useState(null);\n  const [redirectedTo, setRedirectedTo] = useState(null);\n\n  const [highlightedVerse, setHighlightedVerse] = useState(null);\n  const [highlightedWords, setHighlightedWords] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null);\n\n  const [popupX, setPopupX] = useState(null);\n  const [popupY, setPopupY] = useState(null);\n  const [popupPositionRight, setPopupPositionRight] = useState(null);\n  const [popupPositionBelow, setPopupPositionBelow] = useState(null);\n  const [popupWork, setPopupWork] = useState(null);\n\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const [secondWork, setSecondWork] = useState(null);\n  const [secondWorkData, setSecondWorkData] = useState(null);\n  const [secondWorkChapterNotFound, setSecondWorkChapterNotFound] = useState(false);\n  const [secondWorkTitle, setSecondWorkTitle] = useState(null);\n\n  const [fontSizeAdjustment, setFontSizeAdjustment] = useState(getFontAdjustment());\n\n  const [notesMetaData, setNotesMetaData] = useState(null);\n\n  // Keep a list of verse references that are known to be a reference within the current chapter\n  const verseReferences = useRef([]);\n  const popupContextData = useRef(null);\n\n  const { authentication, storageProvider } = React.useContext(GlobalAppContext);\n\n  /**\n   * Set an error state.\n   *\n   * @param {string} errorTitle The title\n   * @param {string} errorDescription The description\n   * @param {string} errorMessage The detailed error message (like from an AJAX call)\n   */\n  const setErrorState = (errTitle, errDescription = \"\", errMessage = null) => {\n    setErrorMessage(errMessage);\n    setErrorDescription(errDescription);\n    setErrorTitle(errTitle);\n  }\n\n  /**\n   * Increase the font size\n   */\n  const increaseFontSize = () => {\n    if(fontSizeAdjustment < MAX_FONT_SIZE_ADJUSTMENT) {\n      setFontAdjustment(fontSizeAdjustment + 1);\n      setFontSizeAdjustment(fontSizeAdjustment + 1);\n    }\n  }\n\n  /**\n   * Decrease the font size\n   */\n  const decreaseFontSize = () => {\n    if(fontSizeAdjustment > 0) {\n      setFontAdjustment(fontSizeAdjustment - 1);\n      setFontSizeAdjustment(fontSizeAdjustment - 1);\n    }\n  }\n\n  /**\n   * Load the given chapter.\n   *\n   * @param {string} work The title slug of the work\n   * @param {array} divisions The list of division indicators\n   */\n  const loadSecondWorkChapter = (work, ...secondDivisions) => {\n    // Load the start page if there is no work to load\n    if (!work) {\n      return;\n    }\n\n    // Reset the state to show that we are loading\n    setSecondWork(work);\n    setSecondWorkData(null);\n    setSecondWorkTitle(null);\n\n    fetch(ENDPOINT_READ_WORK(work, ...secondDivisions))\n      .then((res) => Promise.all([res.status, res.json()]))\n      .then(([status, newData]) => {\n        if (status >= 200 && status < 300) {\n          setSecondWork(work);\n          setSecondWorkData(newData);\n          setSecondWorkTitle(newData.work.title);\n\n          if(status === 210) {\n            setSecondWorkChapterNotFound(true);\n          } else {\n            setSecondWorkChapterNotFound(false);\n          }\n\n          // Rescroll to keep the verse in the view\n          if(highlightedVerse) {\n            scrollToVerse(highlightedVerse);\n          }\n\n          // Remember that we read this work\n          setWorkProgress(work, secondDivisions, newData.reference_descriptor, storageProvider);\n\n        } else {\n          setErrorState(\n            \"Work could not be found\",\n            \"Yikes. The given work is not recognized as a valid work.\"\n          );\n        }\n      })\n      .catch((e) => {\n        setErrorState(\n          \"Unable to load the content\",\n          \"The given chapter could not be loaded from the server\",\n          e.toString()\n        );\n      });\n  }\n\n  /**\n   * Update the history but only if it has changed.\n   *\n   * @param {str} work The title slug of the work\n   * @param {str} secondWork The title slug of the second work to load work\n   * @param  {...any} divisions The list of division indicators\n   */\n  const updateHistory = (work, newSecondWork, ...newDivisions) => {\n\n    const parallelWork = getSecondWorkParameter(location);\n\n    // Get the URL\n    const workUrl = READ_WORK(work, null, ...newDivisions);\n\n    // Determine if the URL is already set\n    // Note that we need to check redirectedFrom because the URL might not match because we were\n    // redirected since a work had been renamed.\n    if (workUrl === location.pathname && parallelWork === newSecondWork) {\n      return false;\n    }\n\n    // Add the parallel work\n    if (newSecondWork) {\n      history.push({\n        pathname: workUrl,\n        search: PARAMS_READ_WORK(newSecondWork)\n      })\n    } else {\n      history.push(workUrl);\n    }\n\n    return true;\n  }\n\n  /**\n   * Go to the reference defined in the input box.\n   */\n  const goToReference = (requestedWork, newReferenceValue, referenceInfo) => {\n\n    // Stop if we have no where to go\n    if (!requestedWork || !referenceValue) {\n      return;\n    }\n\n    setDivisions(referenceInfo.divisions);\n    scrollToVerse(referenceInfo.verse_to_highlight);\n    setHighlightedVerse(referenceInfo.verse_to_highlight);\n    setReferenceValue(newReferenceValue);\n\n    // TODO: find a way to keep the verse to highlight \n    updateHistory(requestedWork, secondWork, ...referenceInfo.divisions);\n  }\n\n  /**\n   * Close the second work\n   */\n  const closeSecondWork = () => {\n    setSecondWork(null);\n    setSecondWorkData(null);\n\n    if(divisions) {\n      updateHistory(loadedWork, null, ...divisions);\n    }\n    else {\n      updateHistory(loadedWork);\n    }\n  }\n\n  /**\n   * Handle the selection of a work.\n   * @param {string} work the title slug of a work to load\n   */\n  const onSelectWork = (work) => {\n    let isRelated = false;\n\n    // See if this is a related work\n    if (data && data.related_works) {\n      isRelated = data.related_works.find(\n        (relatedWork) => relatedWork.title_slug === work\n      );\n    }\n\n    // If this is related work, then use the same divisions\n    if (isRelated && work !== loadedWork) {\n      setBookSelectionOpen(false);\n      loadSecondWorkChapter(work, ...divisions);\n\n      history.push({\n        pathname: location.pathname,\n        search: PARAMS_READ_WORK(work)\n      })\n    } else {\n      // Drop the second work since this one is not related\n      closeSecondWork();\n      updateHistory(work);  \n    }\n  }\n\n  /**\n   * Add the href to the list so that we can remember what URL is capable of loading it.\n   * @param {string} href The partial URL of the page (e.g. \"/work/new-testament/John/8/4\")\n   * @param {string} chapter The chapter descriptor (e.g. \"John/9\")\n   */\n  const addVerseToHistoryList = (href, chapter, verse, newReferenceValue) => {\n    verseReferences.current[href] = {\n      chapter,\n      verse,\n      newReferenceValue,\n    };\n  }\n\n  /**\n   * Handle the clicking of a verse.\n   *\n   * @param {string} verseDescriptor A description of the verse (e.g. \"John 8:4\")\n   * @param {string} verse The verse number (e.g. \"4\")\n   * @param {string} id An ID that designates the verse in the HTML DOM\n   * @param {string} href A href for the verse (e.g. \"/work/new-testament/John/8/4\")\n   */\n  const onVerseClick = (verseDescriptor, verse, id, href) => {\n    // Add the verse to the list\n    addVerseToHistoryList(\n      href,\n      data.chapter.full_descriptor,\n      verse,\n      verseDescriptor\n    );\n\n    scrollToTarget(id);\n\n    setReferenceValue(verseDescriptor);\n    \n    // Add the parallel work\n    if (secondWork) {\n      history.push(`${href}${PARAMS_READ_WORK(secondWork)}`);\n    } else {\n      history.push(href);\n    }\n  }\n\n  /**\n   * Handle the clicking of a verse of a second work.\n   *\n   * @param {string} verseDescriptor A description of the verse (e.g. \"John 8:4\")\n   * @param {string} verse The verse number (e.g. \"4\")\n   * @param {string} id An ID that designates the verse in the HTML DOM\n   */\n  const onVerseClickSecondWork = (verseDescriptor, verse, id) => {\n    const firstWorkId = id.substr(PARALLEL_WORK_PREFIX.length);\n\n    // Find the verse descriptor from the first work\n    const firstWorkVerse = document.getElementById(firstWorkId);\n\n    // Fire the associated handler\n    // This may not match for works that have more verses in the parallel work than the primary one\n    if(firstWorkVerse) {\n      onVerseClick(verseDescriptor, verse, id, firstWorkVerse.attributes.href.value);\n    }\n  }\n\n  /**\n   * Go to the next chapter.\n   */\n  const goToNextChapter = () => {\n    if (data && data.next_chapter) {\n      updateHistory(loadedWork, secondWork, data.next_chapter.full_descriptor);\n    }\n  }\n\n  /**\n   * Go to the prior chapter.\n   */\n  const goToPriorChapter = () => {\n    if (data && data.previous_chapter) {\n      updateHistory(loadedWork, secondWork, data.previous_chapter.full_descriptor);\n    }\n  }\n\n  /**\n   * Handle the selection of the division.\n   *\n   * @param {*} event React's original SyntheticEvent.\n   * @param {*} info All props.\n   */\n  const changeChapter = (event, info) => {\n    updateHistory(loadedWork, secondWork, info.value);\n  }\n\n  /**\n   * Handle the clicking of a word.\n   *\n   * @param {string} word The word to get information on\n   * @param {int} x The x coordinate designating where to show the popup\n   * @param {int} y The y coordinate designating where to show the popup\n   * @param {bool} positionRight Indicates it is best to show the popup to the right of the offset\n   * @param {bool} positionBelow Indicates it is best to show the popup below the offset\n   * @param {string} work Indicates the work clicked\n   */\n  const onWordClick = (word, x, y, positionRight, positionBelow, work) => {\n    setSelectedWord(word);\n    setPopupX(x);\n    setPopupY(y);\n    setPopupPositionRight(positionRight);\n    setPopupPositionBelow(positionBelow);\n    setPopupWork(work);\n    setModal(MODAL_WORD);\n\n    if(highlightRelatedForms) {\n      getWordFormsDebounced(word)\n      .then((res) => res.json())\n      .then(wordData => {\n        if(wordData.forms.length > 1){\n          // Add in the word we searched for just in case\n          const wordsList = wordData.forms.slice();\n          wordsList.splice(0, 0, word);\n\n          // Light them up\n          setHighlightedWords(wordsList);\n        }\n        \n      });\n    }\n  }\n\n  /**\n   * Handle the context menu.\n   *\n   * @param {int} x The x coordinate designating where to show the popup\n   * @param {int} y The y coordinate designating where to show the popup\n   * @param {bool} positionRight Indicates it is best to show the popup to the right of the offset\n   * @param {bool} positionBelow Indicates it is best to show the popup below the offset\n   * @param {string} work Indicates the work clicked\n   */\n   const onContextClick = (x, y, positionRight, positionBelow, work, content, contextType, contextData, event) => {\n    setSelectedWord(null);\n    setPopupX(x);\n    setPopupY(y);\n    setPopupPositionRight(positionRight);\n    setPopupPositionBelow(positionBelow);\n    setPopupWork(work);\n    popupContextData.current = { content, contextType, contextData, event }\n    setModal(MODAL_CONTEXT);\n  }\n\n  /**\n   * Handle the clicking of a note.\n   *\n   * @param {string} note The note's contents\n   * @param {string} id The ID of the note\n   * @param {int} x The x coordinate designating where to show the popup\n   * @param {int} y The y coordinate designating where to show the popup\n   * @param {bool} positionRight Indicates it is best to show the popup to the right of the offset\n   * @param {bool} positionBelow Indicates it is best to show the popup below the offset\n   */\n  const onNoteClick = (note, id, x, y, positionRight, positionBelow) => {\n    setSelectedNote(note);\n    setPopupX(x);\n    setPopupY(y);\n    setPopupPositionRight(positionRight);\n    setPopupPositionBelow(positionBelow);\n    setModal(MODAL_FOOTNOTE);\n  }\n\n  /**\n   * Load the given chapter.\n   *\n   * @param {string} work The title slug of the work\n   * @param {array} divisions The list of division indicators\n   */\n  const loadChapter = (work, ...newDivisions) => {\n    // Load the start page if there is no work to load\n    if (!work) {\n      setBookSelectionOpen(false);\n      setModal(null);\n      setErrorTitle(null);\n      setErrorMessage(null);\n      setErrorDescription(null);\n      setRedirectedFrom(null);\n      setRedirectedTo(null);\n      setHighlightedVerse(null);\n      setData(null);\n      setLoading(null);\n      setLoadedWork(null);\n      setDivisions(null);\n      setReferenceValue(null);\n\n      return;\n    }\n\n    // Reset the state to show that we are loading\n    setLoading(true);\n    setBookSelectionOpen(false);\n    setModal(null);\n    setErrorTitle(null);\n    setErrorMessage(null);\n    setErrorDescription(null);\n    setRedirectedFrom(null);\n    setRedirectedTo(null);\n    setHighlightedVerse(null);\n\n    // Load the second work if necessary\n    if (secondWork) {\n      loadSecondWorkChapter(secondWork, ...newDivisions);\n    }\n\n    // Load the work\n    fetch(ENDPOINT_READ_WORK(work, ...newDivisions))\n      .then((res) => Promise.all([res.status, res.json()]))\n      .then(([status, updatedData]) => {\n        if (status >= 200 && status < 300) {\n          let newRedirectedFrom = null;\n          let newRedirectedTo = null;\n\n          // If the work alias didn't match, then update the URL accordingly\n          if (updatedData.work.title_slug !== work) {\n            newRedirectedFrom = READ_WORK(work, null, ...newDivisions);\n            newRedirectedTo = READ_WORK(updatedData.work.title_slug, null, ...newDivisions);\n          }\n\n          setLoadedWork(updatedData.work.title_slug);\n          setDivisions(newDivisions);\n          setReferenceValue(updatedData.reference_descriptor);\n          setRedirectedFrom(newRedirectedFrom);\n          setRedirectedTo(newRedirectedTo);\n          setHighlightedVerse(updatedData.verse_to_highlight);\n          setData(updatedData);\n          setLoading(false);\n\n          // Remember that we read this work\n          setWorkProgress(work, newDivisions, updatedData.reference_descriptor, storageProvider);\n\n          // Add the verse to the list\n          addVerseToHistoryList(\n            READ_WORK(work, null, ...newDivisions),\n            updatedData.chapter.full_descriptor,\n            updatedData.verse_to_highlight,\n            updatedData.chapter.description\n          );\n\n          // Scroll to the verse\n          scrollToVerse(updatedData.verse_to_highlight);\n\n          // Update the URL if we were redirected\n          if (redirectedFrom) {\n            updateHistory(updatedData.work.title_slug, secondWork, ...newDivisions);\n          }\n        } else {\n          setErrorState(\n            \"Work could not be found\",\n            \"Yikes. The given work is not recognized as a valid work.\"\n          );\n        }\n      })\n      .catch((e) => {\n        setErrorState(\n          \"Unable to load the content\",\n          \"The given chapter could not be loaded from the server\",\n          e.toString()\n        );\n      });\n  }\n\n  const previousPathname = useRef();\n\n  useEffect(() => {\n    // Get the divisions from the URL\n    const divisionsFiltered = [\n      match.params.division0,\n      match.params.division1,\n      match.params.division2,\n      match.params.division3,\n      match.params.division4,\n      match.params.leftovers,\n    ].filter((entry) => entry);\n\n    // See if we have loaded the same work\n    const sameSecondWork = secondWork === getSecondWorkParameter(location);\n\n    // See if we know that this is a reference to this chapter\n    const existingChapter = verseReferences.current[location.pathname];\n\n    // Check if the chapter we have loaded already\n    // This needs to check the loaded work too, since we need to recognize if we the reference is\n    // the same reference but in a different work.\n    let isReferenceForSameChapter = false;\n    if(data && existingChapter && loadedWork) {\n      if(existingChapter.chapter === data.chapter.full_descriptor && loadedWork === match.params.work) {\n        isReferenceForSameChapter = true;\n      }\n    }\n  \n    // Check if the chapter we have loaded already\n    // This needs to check the loaded work too, since we need to recognize if we the reference is\n    // the same reference but in a different work.\n    if (isReferenceForSameChapter && sameSecondWork) {\n  \n      // Get the highlighted verse\n      const highlightedVerseRef = existingChapter.verse;\n\n      if (highlightedVerse !== highlightedVerseRef) {\n        if(highlightedVerseRef) {\n          setHighlightedVerse(highlightedVerseRef);\n        }\n        \n        if(!referenceValue){\n          setReferenceValue(existingChapter.referenceValue);\n        }\n      }\n\n      // Don't load the new one, we already have it on the page\n      return;\n    }\n\n    // Determine if the page changed\n    if (\n      (location.pathname !== previousPathname.current &&\n      redirectedTo !== location.pathname)\n    ) {\n      loadChapter(match.params.work, ...divisionsFiltered);\n      previousPathname.current = location.pathname;\n      return;\n    }\n\n    previousPathname.current = location.pathname;\n\n    // Try to get the second work\n    if (!sameSecondWork) {\n      if(getSecondWorkParameter(location)) {\n        loadSecondWorkChapter(getSecondWorkParameter(location), ...divisionsFiltered);\n      }\n      else {\n        setSecondWork(null);\n        setSecondWorkData(null);\n      }\n    }\n  });\n\n  // When the data changes, get the notes meta-data\n  useEffect(() => {\n    if(data) {\n      getNotesMetaData({\n        onSuccess:(newData) => setNotesMetaData(newData),\n        work: loadedWork,\n        division: data.chapter.full_descriptor,\n        includeRelated: true }\n      );\n    }\n\n  }, [data]);\n\n  // Figure out a description for the chapter\n  let description = \"\";\n  let referenceDescription = referenceValue;\n\n  if (data) {\n    description = data.chapter.description;\n\n    if (referenceValue === \"\") {\n      referenceDescription = description;\n    }\n  }\n\n  // Create a custom className for signaling the desire to switch to inverted\n  let classNameSuffix = \"\";\n\n  if (inverted) {\n    classNameSuffix = \" inverted\";\n  }\n\n  // Determine what we ought to be rendering\n  let mode = MODE_LOADING;\n\n  if (data && !loading) {\n    mode = MODE_DONE;\n  } else if (errorTitle) {\n    mode = MODE_ERROR;\n  } else if (match.params && match.params.work && !data) {\n    mode = MODE_LOADING;\n  } else if (loading && !errorTitle) {\n    mode = MODE_LOADING;\n  } else {\n    mode = MODE_NOT_READY;\n  }\n\n  // Get the list of related works so that the book selector can put the related ones at the top\n  const relatedWorks = data && data.related_works ? data.related_works : [];\n  const authors =\n    data && data.authors ? data.authors.map((author) => author.name) : null;\n\n  return (\n    <>\n      <div\n        className=\"buffer\"\n        style={{\n          height: 54,\n          width: \"100%\",\n        }}\n      />\n      <ReadingMenuBar\n        inverted={inverted}\n        relatedWorks={relatedWorks}\n        authors={authors}\n        loadedWork={loadedWork}\n        toggleSidebarVisible={() => setSidebarVisible(!sidebarVisible)}\n        onSelectWork={(work) => onSelectWork(work)}\n        setBookSelectionOpen={(b) => setBookSelectionOpen(b)}\n        bookSelectionOpen={bookSelectionOpen}\n        goToReference={(newWork, newReferenceValue, referenceInfo) =>\n          goToReference(newWork, newReferenceValue, referenceInfo)}\n        openAboutModal={() => setModal(\"about\")}\n        openLoginModal={() => setModal(\"login\")}\n        goToPriorChapter={loading ? null : () => goToPriorChapter()}\n        goToNextChapter={loading ? null : () => goToNextChapter()}\n        referenceValue={referenceDescription}\n        hasNextChapter={!loading && data && data.next_chapter !== null}\n        hasPriorChapter={!loading && data && data.previous_chapter !== null}\n        nextChapterDescriptor={\n          data && data.previous_chapter && data.previous_chapter.full_descriptor\n        }\n        previousChapterDescriptor={\n          data && data.next_chapter && data.next_chapter.full_descriptor\n        }\n        decreaseFontSize={!loading && data ? () => decreaseFontSize() : null}\n        increaseFontSize={!loading && data ? () => increaseFontSize() : null}\n        increaseFontSizeDisabled={\n          fontSizeAdjustment >= MAX_FONT_SIZE_ADJUSTMENT\n        }\n        decreaseFontSizeDisabled={fontSizeAdjustment <= 0}\n        storageProvider={storageProvider}\n      />\n      {mode === MODE_DONE && (\n        <>\n          <BookSidebar\n            sidebarVisible={sidebarVisible}\n            work={loadedWork}\n            openWorkInfoModal={() => setModal(\"aboutWork\")}\n            openDownloadModal={() => setModal(\"downloadWork\")}\n            openSearch={() =>\n              openSearch(loadedWork, secondWork, divisions, history)}\n            setSidebarVisible={() => setSidebarVisible()}\n          />\n          <Sidebar.Pushable\n            as={Segment}\n            basic\n            style={SidebarStyle}\n            className={`${classNameSuffix}`}\n          >\n            <Sidebar.Pusher>\n              <Container className={`underMenu ${classNameSuffix}`}>\n                {getDialogs(modal, data, loading, loadedWork, () =>\n                  setModal(null)\n                )}\n                { modal && (\n                  <Popups\n                    modal={modal} \n                    data={popupWork?.title_slug === loadedWork ? data : secondWorkData}\n                    loading={loading}\n                    selectedWord={selectedWord}\n                    popupX={popupX}\n                    popupY={popupY}\n                    popupPositionRight={popupPositionRight}\n                    popupPositionBelow={popupPositionBelow}\n                    selectedNote={selectedNote}\n                    popupWork={popupWork}\n                    closeModal={() => setModal(null)}\n                    searchState={{\n                      work: loadedWork,\n                      secondWork,\n                      divisions,\n                    }}\n                    inverted={inverted}\n                    popupContextData={popupContextData.current}\n                  />\n                ) }\n                <Grid inverted={inverted}>\n                  <Grid.Row>\n                    <Grid.Column width={8}>\n                      <ChapterHeader\n                        inverted={inverted}\n                        data={data}\n                        onChangeChapter={(event, info) => changeChapter(event, info)}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={8}>\n                      <Container textAlign=\"right\">\n                        <Header inverted={inverted} floated=\"right\" as=\"h3\">\n                          {data.work.title}\n                          {secondWork && secondWorkTitle && (\n                            <>\n                              {\" / \"}\n                              {secondWorkTitle}\n                              <Icon\n                                title={`Close ${secondWorkTitle}`}\n                                size=\"mini\"\n                                style={{\n                                  cursor: \"pointer\",\n                                  fontSize: 13,\n                                  paddingLeft: 8,\n                                }}\n                                inverted={inverted}\n                                name=\"close\"\n                                onClick={() => closeSecondWork()}\n                              />\n                            </>\n                          )}\n                        </Header>\n                      </Container>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                <div style={{ marginTop: 6 }} />\n                {data && <WarningMessages warnings={data.warnings} />}\n                {redirectedFrom && <StaleURLMessage inverted={inverted} />}\n                <BookProgress data={data} />\n\n                {!secondWork && (\n                  <Chapter\n                    chapter={data.chapter}\n                    content={data.content}\n                    work={data.work}\n                    onVerseClick={onVerseClick}\n                    onWordClick={(word, x, y, positionRight, positionBelow) => {\n                      onWordClick(\n                        word,\n                        x,\n                        y,\n                        positionRight,\n                        positionBelow,\n                        loadedWork\n                      );\n                    }}\n                    onNoteClick={onNoteClick}\n                    onContextClick={(x, y, positionRight, positionBelow, content, contextType, contextData, event) => {\n                      onContextClick(x, y, positionRight, positionBelow, data.work, content, contextType, contextData, event);\n                    }}\n                    onClickAway={() => setModal(null)}\n                    highlightedVerse={highlightedVerse}\n                    inverted={inverted}\n                    fontSizeAdjustment={fontSizeAdjustment}\n                    highlightedWords={highlightedWords}\n                    notesMetaData={notesMetaData}\n                  />\n                )}\n\n                {secondWork && (\n                  <Grid divided=\"vertically\">\n                    <Grid.Row columns={2}>\n                      <Grid.Column>\n                        <Chapter\n                          chapter={data.chapter}\n                          content={data.content}\n                          work={data.work}\n                          onVerseClick={onVerseClick}\n                          onWordClick={(\n                            word,\n                            x,\n                            y,\n                            positionRight,\n                            positionBelow\n                          ) => {\n                            onWordClick(\n                              word,\n                              x,\n                              y,\n                              positionRight,\n                              positionBelow,\n                              loadedWork\n                            );\n                          }}\n                          onNoteClick={onNoteClick}\n                          onContextClick={(x, y, positionRight, positionBelow, content, contextType, contextData, event) => {\n                            onContextClick(x, y, positionRight, positionBelow, data.work, content, contextType, contextData, event);\n                          }}\n                          onClickAway={() => setModal(null)}\n                          highlightedVerse={highlightedVerse}\n                          inverted={inverted}\n                          fontSizeAdjustment={fontSizeAdjustment}\n                          highlightedWords={highlightedWords}\n                          notesMetaData={notesMetaData}\n                        />\n                      </Grid.Column>\n                      <Grid.Column>\n                        {secondWorkData && !secondWorkChapterNotFound && (\n                          <Chapter\n                            chapter={secondWorkData.chapter}\n                            content={secondWorkData.content}\n                            work={secondWorkData.work}\n                            onVerseClick={(verseDescriptor, verse, id, href) =>\n                              onVerseClickSecondWork(\n                                verseDescriptor,\n                                verse,\n                                id,\n                                href\n                              )}\n                            onWordClick={(\n                              word,\n                              x,\n                              y,\n                              positionRight,\n                              positionBelow\n                            ) => {\n                              onWordClick(\n                                word,\n                                x,\n                                y,\n                                positionRight,\n                                positionBelow,\n                                secondWork\n                              );\n                            }}\n                            onNoteClick={onNoteClick}\n                            onContextClick={(x, y, positionRight, positionBelow, content, contextType, contextData, event) => {\n                              onContextClick(x, y, positionRight, positionBelow, secondWorkData.work, content, contextType, contextData, event);\n                            }}\n                            onClickAway={() => setModal(null)}\n                            highlightedVerse={highlightedVerse}\n                            inverted={inverted}\n                            verseIdentifierPrefix={PARALLEL_WORK_PREFIX}\n                            fontSizeAdjustment={fontSizeAdjustment}\n                            highlightedWords={highlightedWords}\n                            notesMetaData={notesMetaData}\n                          />\n                        )}\n                        {secondWorkData && secondWorkChapterNotFound && (\n                          <WarningMessages\n                            inverted={inverted}\n                            warnings={[\n                              [\n                                \"Chapter not found\",\n                                `The given chapter does not exist in ${secondWorkTitle}`,\n                              ],\n                            ]}\n                          />\n                        )}\n                        {!secondWorkData &&\n                          !secondWorkChapterNotFound &&\n                          getPlaceholder(inverted)}\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                )}\n              </Container>\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n        </>\n      )}\n      {mode === MODE_ERROR && (\n        <Container style={ContainerStyle} className={`${classNameSuffix}`}>\n          <ErrorMessage\n            inverted={inverted}\n            title={errorTitle}\n            description={errorDescription}\n            message={errorMessage}\n          />\n        </Container>\n      )}\n      {mode === MODE_LOADING && (\n        <Container style={ContainerStyle} className={`${classNameSuffix}`}>\n          {getPlaceholder(inverted)}\n        </Container>\n      )}\n      {mode === MODE_NOT_READY && (\n        <Container style={ContainerStyle} className={`${classNameSuffix}`}>\n          <div style={{ paddingTop: 24 }}>\n            <NoWorkSelected\n              onClick={() => setBookSelectionOpen(true)}\n              inverted={inverted}\n            />\n            {authentication.authLoadingDone && <FavoriteWorks inverted={inverted} storageProvider={storageProvider} /> }\n          </div>\n        </Container>\n      )}\n      {modal === \"about\" && <AboutDialog onClose={() => setModal(null)} />}\n    </>\n  );\n\n}\n\nReader.propTypes = {\n  inverted: PropTypes.bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  match: PropTypes.object.isRequired,\n  highlightRelatedForms: PropTypes.bool,\n};\n\nReader.defaultProps = {\n  inverted: false,\n  highlightRelatedForms: false,\n};\n\nexport default withRouter(Reader);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Reader from './components/Reader';\nimport { GlobalAppContextProvider } from \"./components/GlobalAppContext\";\n\nconst App = ({ inverted }) => (\n  <GlobalAppContextProvider>\n    <Reader\n      inverted={inverted}\n    />\n  </GlobalAppContextProvider>\n)\n\nApp.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(App);\n"],"sourceRoot":""}