{"version":3,"sources":["webpack:///./src/components/URLs/index.jsx","webpack:///./src/components/Endpoints/index.js","webpack:///./src/components/ErrorMessage/index.jsx","webpack:///./src/components/FullscreenDialog/index.jsx","webpack:///./src/components/Search/index.scss?3245","webpack:///./src/components/Search/index.scss","webpack:///./src/components/Charts/BarChart.jsx","webpack:///./src/components/Search/SearchResults.jsx","webpack:///./src/components/Search/SearchHelp.jsx","webpack:///./src/components/Search/index.jsx"],"names":["READ_WORK","work","divisionReference","divisions","divisionsFiltered","filter","entry","length","join","SEARCH","ignoreDiacritics","searchRelatedForms","page","url","GOOGLE_SEARCH","PERSEUS_WORD_LOOKUP","LOGEION_WORD_LOOKUP","config","getHostConfig","origin","window","location","hostname","ENDPOINT_READ_WORK","ENDPOINT_WORK_INFO","ENDPOINT_WORK_IMAGE","width","ENDPOINT_WORK_DOWNLOAD","format","ENDPOINT_RESOLVE_REFERENCE","reference","ENDPOINT_WORD_PARSE","word","ENDPOINT_WORKS_LISTS","ENDPOINT_SEARCH","query","relatedFormsConverted","ignoreDiacriticsConverted","encodeURIComponent","i","ErrorMessage","title","description","message","inverted","color","as","style","marginBottom","propTypes","PropTypes","string","isRequired","bool","defaultProps","FullscreenDialog","children","onClickBack","backTitle","compact","BackLinkStyle","onClick","BackButtonStyle","name","corner","fitted","TitleStyle","marginTop","ContentStyle","display","fontSize","textAlign","cursor","verticalAlign","paddingLeft","object","func","api","r","content","__esModule","default","module","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","InvertedColors","fill","background","lineColor","tickColor","text","NormalColors","BarChart","results","noDataMessage","categories","data","Object","entries","map","key","value","colors","options","chart","type","backgroundColor","legend","enabled","xAxis","labels","yAxis","min","align","overflow","plotOptions","bar","dataLabels","credits","series","highcharts","Highcharts","shape","number","SearchResults","renderHighlights","highlights","className","dangerouslySetInnerHTML","__html","lastPage","goBack","goNext","matchCount","resultCount","Table","celled","collapsing","result","Row","Cell","href","Button","Group","attached","active","Segment","padding","arrayOf","SearchHelp","handleClick","e","titleProps","index","setActiveIndex","activeIndex","preformattedStyle","marginLeft","fontFamily","exampleStyle","useState","Accordion","Title","Icon","Content","Message","info","Header","HeaderCell","Body","CheckboxStyle","marginRight","getParamOrDefault","searchParams","paramName","defaultValue","convertFormat","paramValue","get","parseInt","Search","history","queryParams","URLSearchParams","useLocation","search","setQuery","resultSet","setResultSet","error","setError","setIgnoreDiacritics","setSearchRelatedForms","searching","setSearching","setPage","searchedKey","setSearchedKey","linkBackURL","setLinkBackURL","doSearch","requestedPage","q","selectedPage","diacritics","relatedForms","Math","ceil","result_count","useEffect","fetch","then","res","json","toString","state","mode","classNameSuffix","panes","menuItem","render","Tab","Pane","icon","loading","match_count","keys","matched_terms","matched_works","matched_sections","Container","Input","action","basic","placeholder","onChange","d","onKeyPress","Checkbox","label","checked","withRouter"],"mappings":"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","file":"4.bundle.js","sourcesContent":["/**\n * This page provides helper functions for creating URLs for the website.\n */\n\nexport function READ_WORK(work = '', ...divisions) {\n  let divisionReference = '';\n\n  const divisionsFiltered = divisions.filter((entry) => entry);\n\n  if (divisions.length > 0 && work) {\n    divisionReference = divisionsFiltered.join('/');\n    return `/work/${work}/${divisionReference}`;\n  }\n\n  return `/work/${work}`;\n}\n\nexport function SEARCH(\n  q = '',\n  ignoreDiacritics = false,\n  searchRelatedForms = false,\n  page = '',\n) {\n  let url = `/search?q=${q}`;\n\n  if (page) {\n    url += `&page=${page}`;\n  }\n\n  if (ignoreDiacritics) {\n    url += '&ignore_diacritics=1';\n  }\n\n  if (searchRelatedForms) {\n    url += '&include_related=1';\n  }\n\n  return url;\n}\n\nexport function GOOGLE_SEARCH(q = '') {\n  return `https://www.google.com/search?q=${q}`;\n}\n\nexport function PERSEUS_WORD_LOOKUP(word = '') {\n  return `http://www.perseus.tufts.edu/hopper/morph?l=${word}&la=greek`;\n}\n\nexport function LOGEION_WORD_LOOKUP(word = '') {\n  return `https://logeion.uchicago.edu/${word}`;\n}\n","\n/**\n * The following provides a way to map REST calls to another service (for development).\n */\nconst config = {\n  // localhost: 'http://localhost:8080',\n};\n\n/**\n * This function determines what host to use for REST calls based on the hostname.\n * @param {*} origin The host to find the REST call domain for\n */\nexport function getHostConfig(origin = window.location.hostname) {\n  if (origin in config) {\n    return config[origin];\n  }\n\n  return '';\n}\n\nexport function ENDPOINT_READ_WORK(work = '', ...divisions) {\n\n  let divisionReference = '';\n\n  if (divisions.length > 0 && work) {\n    divisionReference = divisions.join('/');\n    return `${getHostConfig()}/api/work/${work}/${divisionReference}`;\n  }\n\n  return `${getHostConfig()}/api/work/${work}`;\n}\n\nexport function ENDPOINT_WORK_INFO(work) {\n  return `${getHostConfig()}/api/work_info/${work}`;\n}\n\nexport function ENDPOINT_WORK_IMAGE(work, width = 100) {\n  return `${getHostConfig()}/api/work_image/${work}?width=${width}`;\n}\n\nexport function ENDPOINT_WORK_DOWNLOAD(work, format = 'epub') {\n  return `${getHostConfig()}/api/download/work/${work}?format=${format}`;\n}\n\nexport function ENDPOINT_RESOLVE_REFERENCE(work, reference) {\n  return `${getHostConfig()}/api/resolve_reference/?work=${work}&ref=${reference}`;\n}\n\nexport function ENDPOINT_WIKI_INFO(search, search2 = null, search3 = null) {\n  const searchParams = [search, search2, search3].filter((e) => e != null);\n  return `${getHostConfig()}/api/wikipedia_info/${searchParams.join('/')}`;\n}\n\nexport function ENDPOINT_WORD_PARSE(word) {\n  return `${getHostConfig()}/api/word_parse/${word}`;\n}\n\nexport function ENDPOINT_WORKS_LISTS() {\n  return `${getHostConfig()}/api/works`;\n}\n\nexport function ENDPOINT_VERSION_INFO() {\n  return `${getHostConfig()}/api/version_info`;\n}\n\nexport function ENDPOINT_SEARCH(query, page = 1, relatedForms = false, ignoreDiacritics = false) {\n  let relatedFormsConverted = 0;\n  if (relatedForms) {\n    relatedFormsConverted = 1;\n  }\n\n  let ignoreDiacriticsConverted = 0;\n  if (ignoreDiacritics) {\n    ignoreDiacriticsConverted = 1;\n  }\n\n  return `${getHostConfig()}/api/search/${encodeURIComponent(query)}?page=${page}&related_forms=${relatedFormsConverted}&ignore_diacritics=${ignoreDiacriticsConverted}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Segment } from 'semantic-ui-react';\n\n/**\n * This class renders the content of chapter of a work.\n */\nfunction ErrorMessage({\n  title, description, message, inverted,\n}) {\n  return (\n    <Segment color=\"red\" inverted={inverted}>\n      <Header as=\"h3\">{title}</Header>\n      {description && (\n        description\n      )}\n      {message && description && (\n        <div style={{ marginBottom: 12 }} />\n      )}\n      { message }\n    </Segment>\n  );\n}\n\nErrorMessage.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  inverted: PropTypes.bool,\n};\n\nErrorMessage.defaultProps = {\n  description: null,\n  inverted: false,\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport {\n  Segment, Icon, Header, Divider, Container,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst BackButtonStyle = {\n  display: 'inline-block',\n  fontSize: 16,\n  textAlign: 'middle',\n};\n\nconst BackLinkStyle = {\n  cursor: 'pointer',\n  marginBottom: 0,\n};\n\nconst TitleStyle = {\n  display: 'inline-block',\n  fontSize: 12,\n  verticalAlign: 'top',\n  paddingLeft: 12,\n  color: 'white',\n};\n\nconst ContentStyle = {\n  marginTop: 0,\n};\n\nconst FullscreenDialog = ({\n  children, onClickBack, inverted, backTitle,\n}) => (\n  <Container>\n    <Segment compact style={BackLinkStyle} onClick={onClickBack} inverted={inverted}>\n      <div style={BackButtonStyle}>\n        <Icon name=\"arrow left\" corner=\"top left\" fitted />\n      </div>\n      <div style={TitleStyle}>\n        <Header inverted={inverted} as=\"h4\">{backTitle}</Header>\n      </div>\n    </Segment>\n    <Divider style={{ marginTop: 0 }} />\n    <Segment compact style={ContentStyle} inverted={inverted}>\n      {children}\n    </Segment>\n  </Container>\n);\n\nFullscreenDialog.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.object.isRequired,\n  inverted: PropTypes.bool,\n  onClickBack: PropTypes.func,\n  backTitle: PropTypes.string,\n};\n\nFullscreenDialog.defaultProps = {\n  inverted: false,\n  onClickBack: () => {},\n  backTitle: 'Back',\n};\n\nexport default FullscreenDialog;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"b.match{font-weight:bold}.term0{background-color:#edcbfa}.term1{background-color:#faecd6}.term2{background-color:#e9e6ed}.term3{background-color:#f3e8e1}.term4{background-color:#cbe1fa}.term5{background-color:#f5d3f4}.term6{background-color:#f3f7d2}.term7{background-color:#e9ece7}.term8{background-color:#dee4fa}.term9{background-color:#e7dafa}.term10{background-color:#cae2fa}.term11{background-color:#fae6dc}.term12{background-color:#f8e3e1}.term13{background-color:#f2e3e7}.term14{background-color:#d4f1f7}.term15{background-color:#f2deec}.term16{background-color:#d4e2fa}.term17{background-color:#dceaf6}.term18{background-color:#eaf4de}.term19{background-color:#e9ebe8}.term20{background-color:#d9f6ed}.term21{background-color:#cdf6f9}.term22{background-color:#dae0fa}.term23{background-color:#f0ccfa}.term24{background-color:#d7d3fa}.term25{background-color:#f5e4e3}.term26{background-color:#cae4fa}.term27{background-color:#ceeffa}.term28{background-color:#cacffa}.term29{background-color:#e4f6e2}.term30{background-color:#d2ebfa}.term31{background-color:#eeece2}.term32{background-color:#cfeefa}.term33{background-color:#d4eafa}.term34{background-color:#d7e8fa}.term35{background-color:#facaf8}.term36{background-color:#f9f7cc}.term37{background-color:#eaf6dc}.term38{background-color:#dbd1fa}.term39{background-color:#e9d0fa}.term40{background-color:#d1d7fa}.term41{background-color:#f8f5cf}.term42{background-color:#d3effa}.term43{background-color:#d9d8fa}.term44{background-color:#dceff1}.term45{background-color:#f6d2f4}.term46{background-color:#eccffa}.term47{background-color:#d5e0fa}.term48{background-color:#ece9e7}.term49{background-color:#e9efe4}.term50{background-color:#e7d0fa}.inverted>.term0{background-color:#897754}.inverted>.term1{background-color:#50788c}.inverted>.term2{background-color:#4c3996}.inverted>.term3{background-color:#2b8396}.inverted>.term4{background-color:#5a5296}.inverted>.term5{background-color:#3c4696}.inverted>.term6{background-color:#37908d}.inverted>.term7{background-color:#544096}.inverted>.term8{background-color:#564a96}.inverted>.term9{background-color:#8d8047}.inverted>.term10{background-color:#3e3696}.inverted>.term11{background-color:#2e5796}.inverted>.term12{background-color:#746b75}.inverted>.term13{background-color:#7e5581}.inverted>.term14{background-color:#6c5f89}.inverted>.term15{background-color:#743396}.inverted>.term16{background-color:#783496}.inverted>.term17{background-color:#748f51}.inverted>.term18{background-color:#864d81}.inverted>.term19{background-color:#7f4392}.inverted>.term20{background-color:#3c6996}.inverted>.term21{background-color:#2e7996}.inverted>.term22{background-color:#8a804a}.inverted>.term23{background-color:#4b8f7a}.inverted>.term24{background-color:#727b67}.inverted>.term25{background-color:#498883}.inverted>.term26{background-color:#373796}.inverted>.term27{background-color:#5b7188}.inverted>.term28{background-color:#378096}.inverted>.term29{background-color:#8a7f4b}.inverted>.term30{background-color:#2f4f96}.inverted>.term31{background-color:#2d3096}.inverted>.term32{background-color:#407e96}.inverted>.term33{background-color:#964b73}.inverted>.term34{background-color:#7a4196}.inverted>.term35{background-color:#564996}.inverted>.term36{background-color:#45947b}.inverted>.term37{background-color:#374396}.inverted>.term38{background-color:#326d96}.inverted>.term39{background-color:#4e3896}.inverted>.term40{background-color:#6f9550}.inverted>.term41{background-color:#514b96}.inverted>.term42{background-color:#353e96}.inverted>.term43{background-color:#808f45}.inverted>.term44{background-color:#7c4d8b}.inverted>.term45{background-color:#6b8960}.inverted>.term46{background-color:#533d96}.inverted>.term47{background-color:#584596}.inverted>.term48{background-color:#476396}.inverted>.term49{background-color:#51768d}.inverted>.term50{background-color:#524196}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst InvertedColors = {\n  fill: '#006dcc',\n  background: '#2B2B2E',\n  lineColor: '#DDD',\n  tickColor: '#DDD',\n  text: '#DDD',\n};\n\nconst NormalColors = {\n  fill: '#006dcc',\n  background: '#FFF',\n  lineColor: '#000',\n  tickColor: '#000',\n  text: '#000',\n};\n\nfunction BarChart(\n  {\n    results, title, noDataMessage, width, inverted,\n  },\n) {\n  // Process the data into what the charting library expects\n  const categories = [];\n  let data = [];\n\n  if (results) {\n    data = Object.entries(results).map(([key, value]) => {\n      categories.push(key);\n      return value;\n    });\n  }\n\n  // Determine the color scheme\n  let colors = NormalColors;\n\n  if (inverted) {\n    colors = InvertedColors;\n  }\n\n  // Construct the options\n  const options = {\n    colors: [colors.fill],\n    chart: {\n      type: 'bar',\n      backgroundColor: colors.background,\n      width,\n    },\n    title: {\n      text: title,\n      style: { color: colors.text },\n    },\n    legend: {\n      enabled: false,\n    },\n    xAxis: {\n      categories,\n      title: {\n        text: null,\n      },\n      labels: {\n        style: { color: colors.text },\n      },\n      lineColor: colors.lineColor,\n      tickColor: colors.tickColor,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n        style: {\n          color: colors.text,\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: false,\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Count',\n        data,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {data.length >= 0 && (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n        />\n      )}\n      {data.length === 0 && (\n        noDataMessage\n      )}\n    </>\n  );\n}\n\nBarChart.propTypes = {\n  results: PropTypes.shape({\n    title: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  noDataMessage: PropTypes.string,\n  width: PropTypes.number,\n  inverted: PropTypes.bool,\n};\n\nBarChart.defaultProps = {\n  noDataMessage: 'No data matched',\n  width: null,\n  inverted: false,\n};\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Button, Table } from 'semantic-ui-react';\n\nfunction SearchResults({\n  results,\n  page,\n  lastPage,\n  goBack,\n  goNext,\n  matchCount,\n  resultCount,\n  inverted,\n  as,\n}) {\n  const renderHighlights = (highlights) => {\n    let className = '';\n    if (inverted) {\n      className = 'inverted';\n    }\n\n    // eslint-disable-next-line react/no-danger\n    return (<div className={className} dangerouslySetInnerHTML={{ __html: highlights }} />);\n  };\n\n  return (\n    <>\n      {as === 'table' && (\n        <>\n          <Table celled collapsing inverted={inverted}>\n            {results.map((result) => (\n              <Table.Row key={result.url}>\n                <Table.Cell>\n                  <strong>\n                    <a href={result.url}>\n                      {result.work}\n                      {' '}\n                      {result.description}\n                    </a>\n                  </strong>\n                </Table.Cell>\n                <Table.Cell>\n                  {renderHighlights(result.highlights)}\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table>\n          <Button.Group attached=\"bottom\">\n            <Button inverted={inverted} active={page <= 1} onClick={() => goBack()}>\n              Back\n            </Button>\n            <Button inverted={inverted} active={page >= lastPage} onClick={() => goNext()}>\n              Next\n            </Button>\n          </Button.Group>\n        </>\n      )}\n      {as === 'segment' && (\n        <Segment.Group>\n          {results.map((result) => (\n            <Segment style={{ padding: 8 }} inverted={inverted} key={result.url}>\n              <div>\n                <strong>\n                  <a href={result.url}>\n                    {result.work}\n                    {' '}\n                    {result.description}\n                  </a>\n                </strong>\n              </div>\n              {renderHighlights(result.highlights)}\n            </Segment>\n          ))}\n          <Button.Group attached=\"bottom\">\n            <Button inverted={inverted} active={page <= 1} onClick={() => goBack()}>\n              Back\n            </Button>\n            <Button inverted={inverted} active={page >= lastPage} onClick={() => goNext()}>\n              Next\n            </Button>\n          </Button.Group>\n        </Segment.Group>\n      )}\n      <div>\n        {'Page '}\n        {page}\n        {' of '}\n        {lastPage}\n        {' ('}\n        {matchCount}\n        {' word matches in '}\n        {resultCount}\n        {' verses)'}\n      </div>\n    </>\n  );\n}\n\nSearchResults.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  matchCount: PropTypes.number.isRequired,\n  resultCount: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  lastPage: PropTypes.number.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goNext: PropTypes.func.isRequired,\n  inverted: PropTypes.bool,\n  as: PropTypes.string,\n};\n\nSearchResults.defaultProps = {\n  inverted: false,\n  as: 'table',\n};\n\nexport default SearchResults;\n","import React, { useState } from 'react';\nimport {\n  Message, Accordion, Icon, Table,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nfunction SearchHelp({ inverted }) {\n  const preformattedStyle = {\n    marginLeft: 32,\n    fontFamily: 'monospace',\n  };\n\n  const exampleStyle = {\n    marginTop: 10,\n  };\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  };\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <Accordion inverted={inverted}>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        How do I search?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        The search language used by TextCritical.net allows several operations.\n        Here are some common ones:\n\n        <div style={exampleStyle}>\n          Search for verses with both ἱστορίας and νόμον:\n          <div style={preformattedStyle}>ἱστορίας νόμον</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the phrase &quot;ἱστορίας νόμον&quot;:\n          <div style={preformattedStyle}>&quot;ἱστορίας νόμον&quot;</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the word ἱστορίας or νόμον:\n          <div style={preformattedStyle}>ἱστορίας OR νόμον</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the word συγγνώμην provided they do not include either ἱστορίας\n          or νόμον:\n          <div style={preformattedStyle}>συγγνώμην NOT (ἱστορίας OR νόμον)</div>\n        </div>\n\n        <div style={exampleStyle}>\n          The search engine accepts beta-code representations of Greek words. Thus, a search for\n          no/mon is equivalent to a search for νόμον:\n          <div style={preformattedStyle}>no/mon</div>\n        </div>\n        <Message\n          info\n          className={className}\n          content=\"If you are searching using beta-code, make sure to put your search query in single quotes (e.g. 'no/mon')\"\n        />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        How do I search for related forms?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        Searching for related forms causes the search engine to look for all other variations of a\n        word. For example, a search for ἀδελφός would also search for ἀδελφοί, ἀδελφοῦ, ἀδελφοί,\n        etc.\n        <Message\n          info\n          className={className}\n          content=\"Searching for related forms is considerably slower than searching for a particular form. \"\n        />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        What fields can be searched?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        Several fields exist that can be be searched. Just append the field name to the search\n        with a colon to search it (e.g. work:new-testament). Below are the available fields:\n        <Table inverted={inverted}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Field</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Example</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>work</Table.Cell>\n              <Table.Cell>\n                Search for items within a particular work (New Testament, Agammenon, etc.)\n              </Table.Cell>\n              <Table.Cell>work:&quot;New Testament&quot;</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>no_diacritics</Table.Cell>\n              <Table.Cell>\n                Search for words disregarding the diacritical marks. Searching for\n                no_diacritics:και will match on καὶ and καῖ\n              </Table.Cell>\n              <Table.Cell>no_diacritics:ευαγγελιον</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>section</Table.Cell>\n              <Table.Cell>\n                Search for items within a section (chapter, division, book, etc.)\n              </Table.Cell>\n              <Table.Cell>section:&quot;Matthew 5&quot;</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>author</Table.Cell>\n              <Table.Cell>\n                Search for verses within works created by a particular author.\n              </Table.Cell>\n              <Table.Cell>author:&quot;Flavius Josephus&quot;</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Accordion.Content>\n    </Accordion>\n  );\n}\n\nSearchHelp.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nSearchHelp.defaultProps = {\n  inverted: false,\n};\n\nexport default SearchHelp;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport {\n  Input, Container, Button, Checkbox, Icon, Message, Tab,\n} from 'semantic-ui-react';\nimport BarChart from '../Charts/BarChart';\nimport SearchResults from './SearchResults';\nimport SearchHelp from './SearchHelp';\nimport ErrorMessage from '../ErrorMessage';\nimport FullscreenDialog from '../FullscreenDialog';\nimport { ENDPOINT_SEARCH } from '../Endpoints';\nimport { SEARCH, READ_WORK } from '../URLs';\nimport './index.scss';\n\nconst MODE_NOT_STARTED = 0;\nconst MODE_SEARCHING = 1;\nconst MODE_ERROR = 2;\nconst MODE_NO_RESULTS = 3;\nconst MODE_RESULTS = 4;\n\nconst CONVERT_INT = 0;\nconst CONVERT_BOOL = 1;\n\nconst CheckboxStyle = {\n  marginTop: 12,\n  marginRight: 12,\n  marginBottom: 12,\n};\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction searchResultsByMode(mode, resultSet, page, lastPage, goBack, goNext, error, inverted) {\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <Tab.Pane inverted={inverted}>\n      {mode === MODE_SEARCHING && (\n        <Message icon className={className}>\n          <Icon name=\"circle notched\" loading />\n          <Message.Content>\n            <Message.Header>Just one second</Message.Header>\n            Performing the search...\n          </Message.Content>\n        </Message>\n      )}\n      {mode === MODE_ERROR && (\n        <ErrorMessage\n          title=\"Unable to perform the search\"\n          description=\"The search could not be executed.\"\n          message={error}\n          inverted={inverted}\n        />\n      )}\n      {mode === MODE_NO_RESULTS && (\n        <Message className={className}>\n          <Message.Header>No Results Found</Message.Header>\n          <p>\n            No Results were found for the given search.\n          </p>\n        </Message>\n      )}\n      {mode === MODE_RESULTS && (\n        <SearchResults\n          results={resultSet.results}\n          matchCount={resultSet.match_count}\n          resultCount={resultSet.result_count}\n          page={page}\n          lastPage={lastPage}\n          goBack={() => goBack()}\n          goNext={() => goNext()}\n          inverted={inverted}\n        />\n      )}\n      {mode === MODE_NOT_STARTED && (\n        <Message className={className}>\n          <Message.Header>Enter a search</Message.Header>\n          <p>\n            Enter a search term to get started.\n          </p>\n        </Message>\n      )}\n    </Tab.Pane>\n  );\n}\n\n/**\n * Gets the parameter of the default value. This optionally converts the parameter format too.\n * @param {string} searchParams The string containing the URL parameters\n * @param {*} paramName The name of the paramter to get\n * @param {*} defaultValue The default value if the paramter doesn't exist yet\n * @param {*} convertFormat Whether to convert the value type (null or CONVERT_INT or CONVERT_BOOL)\n */\nfunction getParamOrDefault(searchParams, paramName, defaultValue, convertFormat = null) {\n  const paramValue = searchParams.get(paramName);\n  if (paramValue) {\n    if (convertFormat === CONVERT_INT) {\n      return parseInt(paramValue, 10);\n    }\n\n    if (convertFormat === CONVERT_BOOL && paramValue === '0') {\n      return false;\n    }\n\n    if (convertFormat === CONVERT_BOOL) {\n      return true;\n    }\n\n    return paramValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * This class renders a search page and results.\n */\nfunction Search({ inverted, history, location }) {\n  // Get the query params\n  const queryParams = useQuery();\n\n  // Setup state\n  const [query, setQuery] = useState(getParamOrDefault(queryParams, 'q', ''));\n  const [resultSet, setResultSet] = useState(null);\n  const [error, setError] = useState(null);\n  const [ignoreDiacritics, setIgnoreDiacritics] = useState(getParamOrDefault(queryParams, 'ignore_diacritics', false, CONVERT_BOOL));\n  const [searchRelatedForms, setSearchRelatedForms] = useState(getParamOrDefault(queryParams, 'include_related', false, CONVERT_BOOL));\n  const [searching, setSearching] = useState(false);\n  const [page, setPage] = useState(getParamOrDefault(queryParams, 'page', 1, CONVERT_INT));\n  const [searchedKey, setSearchedKey] = useState(null);\n  const [linkBackURL, setLinkBackURL] = useState(null);\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  // Calculate the last page\n  let lastPage = 1;\n\n  if (resultSet) {\n    lastPage = Math.ceil(resultSet.result_count / 10);\n  }\n\n  /**\n   * Change the history entry.\n   *\n   * @param {string} q The search query\n   * @param {integer} selectedPage The page offset\n   * @param {bool} diacritics Whether diacritics ought to be ignored\n   * @param {bool} relatedForms Whether related forms ought to be ignored\n   */\n  const updateHistory = (q, selectedPage, diacritics, relatedForms) => {\n    history.push(SEARCH(q, diacritics, relatedForms, selectedPage));\n  };\n\n  /**\n   * Update the history so that the search is kicked off.\n   *\n   * @param {int} requestedPage The page number\n   */\n  const doSearch = (requestedPage) => {\n    updateHistory(query, requestedPage, ignoreDiacritics, searchRelatedForms);\n  };\n\n  /**\n   * Perform the REST call to perform the search\n   *\n   * @param {int} requestedPage The page number\n   */\n  const executeSearch = (requestedPage) => {\n    setSearching(true);\n    setError(null);\n    setPage(requestedPage);\n\n    fetch(ENDPOINT_SEARCH(query, requestedPage, ignoreDiacritics, searchRelatedForms))\n      .then((res) => res.json())\n      .then((data) => {\n        setResultSet(data);\n        setSearching(false);\n        setError(null);\n      })\n      .catch((e) => {\n        setError(e.toString());\n        setSearching(false);\n        setResultSet(null);\n      });\n  };\n\n  useEffect(() => {\n    // Use the searched key to determine if we have already searched for this page\n    if (location.key !== searchedKey) {\n      setSearchedKey(location.key);\n      executeSearch(getParamOrDefault(queryParams, 'page', page, CONVERT_INT));\n    }\n\n    // Remember what the history state was so that we can link back to the reading page\n    if (!linkBackURL && location.state && location.state.work) {\n      setLinkBackURL(READ_WORK(location.state.work, ...location.state.divisions));\n    }\n  });\n\n  const goBack = () => {\n    if (page > 1) {\n      doSearch(page - 1);\n    }\n  };\n\n  const goNext = () => {\n    if (page < lastPage) {\n      doSearch(page + 1);\n    }\n  };\n\n  const onKeyPressed = (event) => {\n    if (event.key === 'Enter') {\n      doSearch(1);\n    }\n  };\n\n  const onClickBack = () => {\n    if (linkBackURL) {\n      history.push(linkBackURL);\n    } else {\n      history.push(READ_WORK());\n    }\n  };\n\n  // Figure out what mode the page is in\n  let mode = MODE_NOT_STARTED;\n\n  if (searching) {\n    mode = MODE_SEARCHING;\n  } else if (error) {\n    mode = MODE_ERROR;\n  } else if (resultSet && resultSet.result_count === 0) {\n    mode = MODE_NO_RESULTS;\n  } else if (resultSet && resultSet.result_count > 0) {\n    mode = MODE_RESULTS;\n  }\n\n  // Create a custom className for signaling the desire to switch to inverted\n  let classNameSuffix = '';\n\n  if (inverted) {\n    classNameSuffix = ' inverted';\n  }\n\n  // Create the list of tab panes to show\n  const panes = [\n    {\n      menuItem: 'Results',\n      render: () => searchResultsByMode(\n        mode, resultSet, page, lastPage, goBack, goNext, error, inverted,\n      ),\n    },\n    {\n      menuItem: 'Matched words',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && Object.keys(resultSet.matched_terms).length > 0 && (\n            <BarChart\n              results={resultSet.matched_terms}\n              title=\"Frequency of matched words\"\n              noDataMessage=\"No data available on matched terms\"\n              inverted={inverted}\n            />\n          )}\n          {(!resultSet || Object.keys(resultSet.matched_terms).length === 0) && (\n            <Message info className={classNameSuffix}>\n              No data available on matched terms\n            </Message>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Matched works',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && Object.keys(resultSet.matched_works).length > 0 && (\n            <BarChart\n              results={resultSet.matched_works}\n              title=\"Frequency of matched works\"\n              noDataMessage=\"No data available on matched works\"\n              inverted={inverted}\n            />\n          )}\n          {(!resultSet || Object.keys(resultSet.matched_works).length === 0) && (\n            <Message info className={classNameSuffix}>\n              No data available on matched works\n            </Message>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Matched sections',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && Object.keys(resultSet.matched_sections).length > 0 && (\n            <BarChart\n              results={resultSet.matched_sections}\n              title=\"Frequency of matched sections\"\n              noDataMessage=\"No data available on matched sections\"\n              inverted={inverted}\n            />\n          )}\n          {(!resultSet || Object.keys(resultSet.matched_sections).length === 0) && (\n            <Message info className={classNameSuffix}>\n              No data available on matched sections\n            </Message>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Help',\n      render: () => <Tab.Pane inverted={inverted}><SearchHelp inverted={inverted} /></Tab.Pane>,\n    },\n  ];\n\n  return (\n    <FullscreenDialog inverted={inverted} onClickBack={onClickBack} backTitle=\"Back to the Library\">\n      <Container>\n        <Input\n          action={\n            (\n              <Button\n                onClick={() => doSearch(1)}\n                basic\n                inverted={inverted}\n              >\n                Go\n              </Button>\n            )\n          }\n          inverted={inverted}\n          placeholder=\"Enter the text to search for (e.g. νόμου or no/mou)\"\n          value={query}\n          onChange={(e, d) => setQuery(d.value)}\n          onKeyPress={(e) => onKeyPressed(e)}\n          style={{ width: '100%' }}\n        />\n        <Checkbox className={className} style={CheckboxStyle} label=\"Search ignoring diacritics\" checked={ignoreDiacritics} onChange={(e, d) => setIgnoreDiacritics(d.checked)} />\n        <Checkbox className={className} style={CheckboxStyle} label=\"Search related Greek forms (slower but more thorough)\" checked={searchRelatedForms} onChange={(e, d) => setSearchRelatedForms(d.checked)} />\n        <Tab className={className} panes={panes} />\n      </Container>\n    </FullscreenDialog>\n  );\n}\n\nSearch.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n  inverted: PropTypes.bool,\n};\n\nSearch.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(Search);\n"],"sourceRoot":""}