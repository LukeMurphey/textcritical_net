{"version":3,"sources":["webpack:///./src/components/Endpoints/index.js","webpack:///./src/components/ErrorMessage/index.jsx","webpack:///./src/components/URLs/index.jsx","webpack:///./src/components/Search/index.scss?3245","webpack:///./src/components/Search/index.scss","webpack:///./src/components/Charts/BarChart.jsx","webpack:///./src/components/Search/SearchResults.jsx","webpack:///./src/components/Search/SearchHelp.jsx","webpack:///./src/components/Search/index.jsx"],"names":["config","getHostConfig","origin","window","location","hostname","ENDPOINT_READ_WORK","work","divisionReference","divisions","length","join","ENDPOINT_WORK_INFO","ENDPOINT_WORK_IMAGE","width","ENDPOINT_WORK_DOWNLOAD","format","ENDPOINT_RESOLVE_REFERENCE","reference","ENDPOINT_WORD_PARSE","word","ENDPOINT_WORKS_LISTS","ENDPOINT_SEARCH","query","page","relatedFormsConverted","ignoreDiacriticsConverted","encodeURIComponent","i","ErrorMessage","title","description","message","inverted","color","as","style","marginBottom","propTypes","PropTypes","string","isRequired","bool","defaultProps","READ_WORK","divisionsFiltered","filter","entry","SEARCH","ignoreDiacritics","searchRelatedForms","url","GOOGLE_SEARCH","PERSEUS_WORD_LOOKUP","LOGEION_WORD_LOOKUP","api","content","__esModule","default","module","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","InvertedColors","fill","background","lineColor","tickColor","text","NormalColors","BarChart","results","noDataMessage","categories","data","Object","entries","map","key","value","colors","options","chart","type","backgroundColor","legend","enabled","xAxis","labels","yAxis","min","align","overflow","plotOptions","bar","dataLabels","credits","series","name","highcharts","Highcharts","shape","number","SearchResults","lastPage","goBack","goNext","matchCount","resultCount","Segment","Group","result","href","highlights","className","dangerouslySetInnerHTML","__html","Button","attached","active","onClick","arrayOf","func","SearchHelp","handleClick","e","titleProps","index","setActiveIndex","activeIndex","preformattedStyle","marginLeft","fontFamily","exampleStyle","marginTop","useState","Accordion","Title","Icon","Content","Message","info","Table","Header","Row","HeaderCell","Body","Cell","CheckboxStyle","marginRight","getParamOrDefault","searchParams","paramName","defaultValue","convertFormat","paramValue","get","parseInt","Search","history","queryParams","URLSearchParams","useLocation","search","setQuery","resultSet","setResultSet","error","setError","setIgnoreDiacritics","setSearchRelatedForms","searching","setSearching","setPage","searchedKey","setSearchedKey","doSearch","requestedPage","q","selectedPage","diacritics","relatedForms","Math","ceil","result_count","useEffect","fetch","then","res","json","toString","mode","panes","menuItem","render","Tab","Pane","icon","loading","match_count","matched_terms","matched_works","matched_sections","Container","Input","action","basic","placeholder","onChange","d","onKeyPress","Checkbox","label","checked","object","withRouter"],"mappings":"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","file":"4.bundle.js","sourcesContent":["\n/**\n * The following provides a way to map REST calls to another service (for development).\n */\nconst config = {\n  // localhost: 'http://localhost:8080',\n};\n\n/**\n * This function determines what host to use for REST calls based on the hostname.\n * @param {*} origin The host to find the REST call domain for\n */\nexport function getHostConfig(origin = window.location.hostname) {\n  if (origin in config) {\n    return config[origin];\n  }\n\n  return '';\n}\n\nexport function ENDPOINT_READ_WORK(work = '', ...divisions) {\n\n  let divisionReference = '';\n\n  if (divisions.length > 0 && work) {\n    divisionReference = divisions.join('/');\n    return `${getHostConfig()}/api/work/${work}/${divisionReference}`;\n  }\n\n  return `${getHostConfig()}/api/work/${work}`;\n}\n\nexport function ENDPOINT_WORK_INFO(work) {\n  return `${getHostConfig()}/api/work_info/${work}`;\n}\n\nexport function ENDPOINT_WORK_IMAGE(work, width = 100) {\n  return `${getHostConfig()}/api/work_image/${work}?width=${width}`;\n}\n\nexport function ENDPOINT_WORK_DOWNLOAD(work, format = 'epub') {\n  return `${getHostConfig()}/api/download/work/${work}?format=${format}`;\n}\n\nexport function ENDPOINT_RESOLVE_REFERENCE(work, reference) {\n  return `${getHostConfig()}/api/resolve_reference/?work=${work}&ref=${reference}`;\n}\n\nexport function ENDPOINT_WIKI_INFO(search, search2 = null, search3 = null) {\n  const searchParams = [search, search2, search3].filter((e) => e != null);\n  return `${getHostConfig()}/api/wikipedia_info/${searchParams.join('/')}`;\n}\n\nexport function ENDPOINT_WORD_PARSE(word) {\n  return `${getHostConfig()}/api/word_parse/${word}`;\n}\n\nexport function ENDPOINT_WORKS_LISTS() {\n  return `${getHostConfig()}/api/works`;\n}\n\nexport function ENDPOINT_VERSION_INFO() {\n  return `${getHostConfig()}/api/version_info`;\n}\n\nexport function ENDPOINT_SEARCH(query, page = 1, relatedForms = false, ignoreDiacritics = false) {\n  let relatedFormsConverted = 0;\n  if (relatedForms) {\n    relatedFormsConverted = 1;\n  }\n\n  let ignoreDiacriticsConverted = 0;\n  if (ignoreDiacritics) {\n    ignoreDiacriticsConverted = 1;\n  }\n\n  return `${getHostConfig()}/api/search/${encodeURIComponent(query)}?page=${page}&related_forms=${relatedFormsConverted}&ignore_diacritics=${ignoreDiacriticsConverted}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Segment } from 'semantic-ui-react';\n\n/**\n * This class renders the content of chapter of a work.\n */\nfunction ErrorMessage({\n  title, description, message, inverted,\n}) {\n  return (\n    <Segment color=\"red\" inverted={inverted}>\n      <Header as=\"h3\">{title}</Header>\n      {description && (\n        description\n      )}\n      {message && description && (\n        <div style={{ marginBottom: 12 }} />\n      )}\n      { message }\n    </Segment>\n  );\n}\n\nErrorMessage.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  inverted: PropTypes.bool,\n};\n\nErrorMessage.defaultProps = {\n  description: null,\n  inverted: false,\n};\n\nexport default ErrorMessage;\n","/**\n * This page provides helper functions for creating URLs for the website.\n */\n\nexport function READ_WORK(work = '', ...divisions) {\n  let divisionReference = '';\n\n  const divisionsFiltered = divisions.filter((entry) => entry);\n\n  if (divisions.length > 0 && work) {\n    divisionReference = divisionsFiltered.join('/');\n    return `/work/${work}/${divisionReference}`;\n  }\n\n  return `/work/${work}`;\n}\n\nexport function SEARCH(\n  q = '',\n  ignoreDiacritics = false,\n  searchRelatedForms = false,\n  page = '',\n) {\n  let url = `/search?q=${q}`;\n\n  if (page) {\n    url += `&page=${page}`;\n  }\n\n  if (ignoreDiacritics) {\n    url += '&ignore_diacritics=1';\n  }\n\n  if (searchRelatedForms) {\n    url += '&include_related=1';\n  }\n\n  return url;\n}\n\nexport function GOOGLE_SEARCH(q = '') {\n  return `https://www.google.com/search?q=${q}`;\n}\n\nexport function PERSEUS_WORD_LOOKUP(word = '') {\n  return `http://www.perseus.tufts.edu/hopper/morph?l=${word}&la=greek`;\n}\n\nexport function LOGEION_WORD_LOOKUP(word = '') {\n  return `https://logeion.uchicago.edu/${word}`;\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"b.match{font-weight:bold}.term0{background-color:#e4cbfa}.term1{background-color:#f4d0f8}.term2{background-color:#d2e8fa}.term3{background-color:#d7eef7}.term4{background-color:#f4c9fa}.term5{background-color:#f1ddee}.term6{background-color:#e7f9dc}.term7{background-color:#d6dcfa}.term8{background-color:#eef3db}.term9{background-color:#f2e3e7}.term10{background-color:#f3e7e2}.term11{background-color:#f3daef}.term12{background-color:#cfcafa}.term13{background-color:#d2d7fa}.term14{background-color:#d8dbfa}.term15{background-color:#deddfa}.term16{background-color:#cfe8fa}.term17{background-color:#e5ebec}.term18{background-color:#faf0d2}.term19{background-color:#daddfa}.term20{background-color:#efede0}.term21{background-color:#d3f7f2}.term22{background-color:#ceccfa}.term23{background-color:#ddd6fa}.term24{background-color:#f8dde7}.term25{background-color:#e1d6fa}.term26{background-color:#e1d0fa}.term27{background-color:#e6dbfa}.term28{background-color:#ced0fa}.term29{background-color:#cfeafa}.term30{background-color:#cfccfa}.term31{background-color:#dfd9fa}.term32{background-color:#d0d4fa}.term33{background-color:#d3d5fa}.term34{background-color:#dbccfa}.term35{background-color:#d2d8fa}.term36{background-color:#f0d4f8}.term37{background-color:#d6d4fa}.term38{background-color:#dbe4fa}.term39{background-color:#dae0fa}.term40{background-color:#fadde5}.term41{background-color:#f6efd7}.term42{background-color:#dde1fa}.term43{background-color:#dfcefa}.term44{background-color:#d4d4fa}.term45{background-color:#def2ec}.term46{background-color:#f5cafa}.term47{background-color:#faf5cd}.term48{background-color:#e3e5f4}.term49{background-color:#eff4d9}.term50{background-color:#e3e1f8}.inverted>.term0{background-color:#699655}.inverted>.term1{background-color:#685296}.inverted>.term2{background-color:#457896}.inverted>.term3{background-color:#574896}.inverted>.term4{background-color:#5a6b8f}.inverted>.term5{background-color:#917e45}.inverted>.term6{background-color:#948e32}.inverted>.term7{background-color:#435d96}.inverted>.term8{background-color:#396996}.inverted>.term9{background-color:#897c4f}.inverted>.term10{background-color:#397e96}.inverted>.term11{background-color:#948040}.inverted>.term12{background-color:#803a96}.inverted>.term13{background-color:#8c7b4d}.inverted>.term14{background-color:#2c2e96}.inverted>.term15{background-color:#928d35}.inverted>.term16{background-color:#82785a}.inverted>.term17{background-color:#525f96}.inverted>.term18{background-color:#3a8892}.inverted>.term19{background-color:#3b8296}.inverted>.term20{background-color:#367c96}.inverted>.term21{background-color:#8e695d}.inverted>.term22{background-color:#6d5691}.inverted>.term23{background-color:#817e55}.inverted>.term24{background-color:#64628e}.inverted>.term25{background-color:#513896}.inverted>.term26{background-color:#712b96}.inverted>.term27{background-color:#785983}.inverted>.term28{background-color:#4b9178}.inverted>.term29{background-color:#4a6c96}.inverted>.term30{background-color:#4a6596}.inverted>.term31{background-color:#395196}.inverted>.term32{background-color:#774895}.inverted>.term33{background-color:#7d5b7c}.inverted>.term34{background-color:#515096}.inverted>.term35{background-color:#3a2a96}.inverted>.term36{background-color:#952f90}.inverted>.term37{background-color:#8d3493}.inverted>.term38{background-color:#8c3e8a}.inverted>.term39{background-color:#6a5793}.inverted>.term40{background-color:#6e9353}.inverted>.term41{background-color:#515996}.inverted>.term42{background-color:#476096}.inverted>.term43{background-color:#303796}.inverted>.term44{background-color:#5b6b8e}.inverted>.term45{background-color:#566d91}.inverted>.term46{background-color:#8c8147}.inverted>.term47{background-color:#445896}.inverted>.term48{background-color:#2b8996}.inverted>.term49{background-color:#51877c}.inverted>.term50{background-color:#2b4c96}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst InvertedColors = {\n  fill: '#006dcc',\n  background: '#2B2B2E',\n  lineColor: '#DDD',\n  tickColor: '#DDD',\n  text: '#DDD',\n};\n\nconst NormalColors = {\n  fill: '#006dcc',\n  background: '#FFF',\n  lineColor: '#000',\n  tickColor: '#000',\n  text: '#000',\n};\n\nfunction BarChart(\n  {\n    results, title, noDataMessage, width, inverted,\n  },\n) {\n  // Process the data into what the charting library expects\n  const categories = [];\n  let data = [];\n\n  if (results) {\n    data = Object.entries(results).map(([key, value]) => {\n      categories.push(key);\n      return value;\n    });\n  }\n\n  // Determine the color scheme\n  let colors = NormalColors;\n\n  if (inverted) {\n    colors = InvertedColors;\n  }\n\n  // Construct the options\n  const options = {\n    colors: [colors.fill],\n    chart: {\n      type: 'bar',\n      backgroundColor: colors.background,\n      width,\n    },\n    title: {\n      text: title,\n      style: { color: colors.text },\n    },\n    legend: {\n      enabled: false,\n    },\n    xAxis: {\n      categories,\n      title: {\n        text: null,\n      },\n      labels: {\n        style: { color: colors.text },\n      },\n      lineColor: colors.lineColor,\n      tickColor: colors.tickColor,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n        style: {\n          color: colors.text,\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: false,\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Count',\n        data,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {data.length >= 0 && (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n        />\n      )}\n      {data.length === 0 && (\n        noDataMessage\n      )}\n    </>\n  );\n}\n\nBarChart.propTypes = {\n  results: PropTypes.shape({\n    title: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  noDataMessage: PropTypes.string,\n  width: PropTypes.number,\n  inverted: PropTypes.bool,\n};\n\nBarChart.defaultProps = {\n  noDataMessage: 'No data matched',\n  width: null,\n  inverted: false,\n};\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Button } from 'semantic-ui-react';\n\nfunction SearchResults({\n  results,\n  page,\n  lastPage,\n  goBack,\n  goNext,\n  matchCount,\n  resultCount,\n  inverted,\n}) {\n  const renderHighlights = (highlights) => {\n    let className = '';\n    if (inverted) {\n      className = 'inverted';\n    }\n\n    // eslint-disable-next-line react/no-danger\n    return (<div className={className} dangerouslySetInnerHTML={{ __html: highlights }} />);\n  };\n\n  return (\n    <>\n      <Segment.Group>\n        {results.map((result) => (\n          <Segment inverted={inverted} key={result.url}>\n            <div>\n              <strong>\n                <a href={result.url}>\n                  {result.work}\n                  {' '}\n                  {result.description}\n                </a>\n              </strong>\n            </div>\n            {renderHighlights(result.highlights)}\n          </Segment>\n        ))}\n        <Button.Group attached=\"bottom\">\n          <Button inverted={inverted} active={page <= 1} onClick={() => goBack()}>\n            Back\n          </Button>\n          <Button inverted={inverted} active={page >= lastPage} onClick={() => goNext()}>\n            Next\n          </Button>\n        </Button.Group>\n      </Segment.Group>\n      <div>\n        {'Page '}\n        {page}\n        {' of '}\n        {lastPage}\n        {' ('}\n        {matchCount}\n        {' word matches in '}\n        {resultCount}\n        {' verses)'}\n      </div>\n    </>\n  );\n}\n\nSearchResults.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  matchCount: PropTypes.number.isRequired,\n  resultCount: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  lastPage: PropTypes.number.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goNext: PropTypes.func.isRequired,\n  inverted: PropTypes.bool,\n};\n\nSearchResults.defaultProps = {\n  inverted: false,\n};\n\nexport default SearchResults;\n","import React, { useState } from 'react';\nimport {\n  Message, Accordion, Icon, Table,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nfunction SearchHelp({ inverted }) {\n  const preformattedStyle = {\n    marginLeft: 32,\n    fontFamily: 'monospace',\n  };\n\n  const exampleStyle = {\n    marginTop: 10,\n  };\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  };\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <Accordion inverted={inverted}>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        How do I search?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        The search language used by TextCritical.net allows several operations.\n        Here are some common ones:\n\n        <div style={exampleStyle}>\n          Search for verses with both ἱστορίας and νόμον:\n          <div style={preformattedStyle}>ἱστορίας νόμον</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the phrase &quot;ἱστορίας νόμον&quot;:\n          <div style={preformattedStyle}>&quot;ἱστορίας νόμον&quot;</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the word ἱστορίας or νόμον:\n          <div style={preformattedStyle}>ἱστορίας OR νόμον</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the word συγγνώμην provided they do not include either ἱστορίας\n          or νόμον:\n          <div style={preformattedStyle}>συγγνώμην NOT (ἱστορίας OR νόμον)</div>\n        </div>\n\n        <div style={exampleStyle}>\n          The search engine accepts beta-code representations of Greek words. Thus, a search for\n          no/mon is equivalent to a search for νόμον:\n          <div style={preformattedStyle}>no/mon</div>\n        </div>\n        <Message\n          info\n          className={className}\n          content=\"If you are searching using beta-code, make sure to put your search query in single quotes (e.g. 'no/mon')\"\n        />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        How do I search for related forms?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        Searching for related forms causes the search engine to look for all other variations of a\n        word. For example, a search for ἀδελφός would also search for ἀδελφοί, ἀδελφοῦ, ἀδελφοί,\n        etc.\n        <Message\n          info\n          className={className}\n          content=\"Searching for related forms is considerably slower than searching for a particular form. \"\n        />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        What fields can be searched?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        Several fields exist that can be be searched. Just append the field name to the search\n        with a colon to search it (e.g. work:new-testament). Below are the available fields:\n        <Table inverted={inverted}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Field</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Example</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>work</Table.Cell>\n              <Table.Cell>\n                Search for items within a particular work (New Testament, Agammenon, etc.)\n              </Table.Cell>\n              <Table.Cell>work:&quot;New Testament&quot;</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>no_diacritics</Table.Cell>\n              <Table.Cell>\n                Search for words disregarding the diacritical marks. Searching for\n                no_diacritics:και will match on καὶ and καῖ\n              </Table.Cell>\n              <Table.Cell>no_diacritics:ευαγγελιον</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>section</Table.Cell>\n              <Table.Cell>\n                Search for items within a section (chapter, division, book, etc.)\n              </Table.Cell>\n              <Table.Cell>section:&quot;Matthew 5&quot;</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>author</Table.Cell>\n              <Table.Cell>\n                Search for verses within works created by a particular author.\n              </Table.Cell>\n              <Table.Cell>author:&quot;Flavius Josephus&quot;</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Accordion.Content>\n    </Accordion>\n  );\n}\n\nSearchHelp.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nSearchHelp.defaultProps = {\n  inverted: false,\n};\n\nexport default SearchHelp;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport {\n  Segment, Input, Container, Header, Button, Checkbox, Icon, Message, Tab,\n} from 'semantic-ui-react';\nimport BarChart from '../Charts/BarChart';\nimport SearchResults from './SearchResults';\nimport SearchHelp from './SearchHelp';\nimport ErrorMessage from '../ErrorMessage';\nimport { ENDPOINT_SEARCH } from '../Endpoints';\nimport { SEARCH } from '../URLs';\nimport './index.scss';\n\nconst MODE_NOT_STARTED = 0;\nconst MODE_SEARCHING = 1;\nconst MODE_ERROR = 2;\nconst MODE_NO_RESULTS = 3;\nconst MODE_RESULTS = 4;\n\nconst CONVERT_INT = 0;\nconst CONVERT_BOOL = 1;\n\nconst CheckboxStyle = {\n  marginTop: 12,\n  marginRight: 12,\n  marginBottom: 12,\n};\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction searchResultsByMode(mode, resultSet, page, lastPage, goBack, goNext, error, inverted) {\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <Tab.Pane inverted={inverted}>\n      {mode === MODE_SEARCHING && (\n        <Message icon className={className}>\n          <Icon name=\"circle notched\" loading />\n          <Message.Content>\n            <Message.Header>Just one second</Message.Header>\n            Performing the search...\n          </Message.Content>\n        </Message>\n      )}\n      {mode === MODE_ERROR && (\n        <ErrorMessage\n          title=\"Unable to perform the search\"\n          description=\"The search could not be executed.\"\n          message={error}\n          inverted={inverted}\n        />\n      )}\n      {mode === MODE_NO_RESULTS && (\n        <Message className={className}>\n          <Message.Header>No Results Found</Message.Header>\n          <p>\n            No Results were found for the given search.\n          </p>\n        </Message>\n      )}\n      {mode === MODE_RESULTS && (\n        <SearchResults\n          results={resultSet.results}\n          matchCount={resultSet.match_count}\n          resultCount={resultSet.result_count}\n          page={page}\n          lastPage={lastPage}\n          goBack={() => goBack()}\n          goNext={() => goNext()}\n          inverted={inverted}\n        />\n      )}\n      {mode === MODE_NOT_STARTED && (\n        <Message className={className}>\n          <Message.Header>Enter a search</Message.Header>\n          <p>\n            Enter a search term to get started.\n          </p>\n        </Message>\n      )}\n    </Tab.Pane>\n  );\n}\n\n/**\n * Gets the parameter of the default value. This optionally converts the parameter format too.\n * @param {string} searchParams The string containing the URL parameters\n * @param {*} paramName The name of the paramter to get\n * @param {*} defaultValue The default value if the paramter doesn't exist yet\n * @param {*} convertFormat Whether to convert the value type (null or CONVERT_INT or CONVERT_BOOL)\n */\nfunction getParamOrDefault(searchParams, paramName, defaultValue, convertFormat = null) {\n  const paramValue = searchParams.get(paramName);\n  if (paramValue) {\n    if (convertFormat === CONVERT_INT) {\n      return parseInt(paramValue, 10);\n    }\n\n    if (convertFormat === CONVERT_BOOL && paramValue === '0') {\n      return false;\n    }\n\n    if (convertFormat === CONVERT_BOOL) {\n      return true;\n    }\n\n    return paramValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * This class renders a search page and results.\n */\nfunction Search({ inverted, history, location }) {\n  // Get the query params\n  const queryParams = useQuery();\n\n  // Setup state\n  const [query, setQuery] = useState(getParamOrDefault(queryParams, 'q', ''));\n  const [resultSet, setResultSet] = useState(null);\n  const [error, setError] = useState(null);\n  const [ignoreDiacritics, setIgnoreDiacritics] = useState(getParamOrDefault(queryParams, 'ignore_diacritics', false, CONVERT_BOOL));\n  const [searchRelatedForms, setSearchRelatedForms] = useState(getParamOrDefault(queryParams, 'include_related', false, CONVERT_BOOL));\n  const [searching, setSearching] = useState(false);\n  const [page, setPage] = useState(getParamOrDefault(queryParams, 'page', 1, CONVERT_INT));\n  const [searchedKey, setSearchedKey] = useState(null);\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  // Calculate the last page\n  let lastPage = 1;\n\n  if (resultSet) {\n    lastPage = Math.ceil(resultSet.result_count / 10);\n  }\n\n  /**\n   * Change the history entry.\n   *\n   * @param {string} q The search query\n   * @param {integer} selectedPage The page offset\n   * @param {bool} diacritics Whether diacritics ought to be ignored\n   * @param {bool} relatedForms Whether related forms ought to be ignored\n   */\n  const updateHistory = (q, selectedPage, diacritics, relatedForms) => {\n    history.push(SEARCH(q, diacritics, relatedForms, selectedPage));\n  };\n\n  /**\n   * Update the history so that the search is kicked off.\n   *\n   * @param {int} requestedPage The page number\n   */\n  const doSearch = (requestedPage) => {\n    updateHistory(query, requestedPage, ignoreDiacritics, searchRelatedForms);\n  };\n\n  /**\n   * Perform the REST call to perform the search\n   *\n   * @param {int} requestedPage The page number\n   */\n  const executeSearch = (requestedPage) => {\n    setSearching(true);\n    setError(null);\n    setPage(requestedPage);\n\n    fetch(ENDPOINT_SEARCH(query, requestedPage, ignoreDiacritics, searchRelatedForms))\n      .then((res) => res.json())\n      .then((data) => {\n        setResultSet(data);\n        setSearching(false);\n        setError(null);\n      })\n      .catch((e) => {\n        setError(e.toString());\n        setSearching(false);\n        setResultSet(null);\n      });\n  };\n\n  useEffect(() => {\n    // Use the searched key to determine if we have already searched for this page\n    if (location.key !== searchedKey) {\n      setSearchedKey(location.key);\n      executeSearch(getParamOrDefault(queryParams, 'page', page, CONVERT_INT));\n    }\n  });\n\n  const goBack = () => {\n    if (page > 1) {\n      doSearch(page - 1);\n    }\n  };\n\n  const goNext = () => {\n    if (page < lastPage) {\n      doSearch(page + 1);\n    }\n  };\n\n  const onKeyPressed = (event) => {\n    if (event.key === 'Enter') {\n      doSearch(1);\n    }\n  };\n\n  // Figure out what mode the page is in\n  let mode = MODE_NOT_STARTED;\n\n  if (searching) {\n    mode = MODE_SEARCHING;\n  } else if (error) {\n    mode = MODE_ERROR;\n  } else if (resultSet && resultSet.result_count === 0) {\n    mode = MODE_NO_RESULTS;\n  } else if (resultSet && resultSet.result_count > 0) {\n    mode = MODE_RESULTS;\n  }\n\n  // Create the list of tab panes to show\n  const panes = [\n    {\n      menuItem: 'Results',\n      render: () => searchResultsByMode(\n        mode, resultSet, page, lastPage, goBack, goNext, error, inverted,\n      ),\n    },\n    {\n      menuItem: 'Matched words',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && (\n            <BarChart\n              results={resultSet.matched_terms}\n              title=\"Frequency of matched words\"\n              noDataMessage=\"No data available on matched terms\"\n              inverted={inverted}\n            />\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Matched works',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && (\n            <BarChart\n              results={resultSet.matched_works}\n              title=\"Frequency of matched works\"\n              noDataMessage=\"No data available on matched works\"\n              inverted={inverted}\n            />\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Matched sections',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && (\n            <BarChart\n              results={resultSet.matched_sections}\n              title=\"Frequency of matched sections\"\n              noDataMessage=\"No data available on matched sections\"\n              inverted={inverted}\n            />\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Help',\n      render: () => <Tab.Pane inverted={inverted}><SearchHelp inverted={inverted} /></Tab.Pane>,\n    },\n  ];\n\n  return (\n    <Segment inverted={inverted}>\n      <Container>\n        <Header inverted={inverted} as=\"h1\">Search</Header>\n        <Input\n          action={\n            (\n              <Button\n                onClick={() => doSearch(1)}\n                basic\n                inverted={inverted}\n              >\n                Go\n              </Button>\n            )\n          }\n          inverted={inverted}\n          placeholder=\"Enter the text to search for (e.g. νόμου or no/mou)\"\n          value={query}\n          onChange={(e, d) => setQuery(d.value)}\n          onKeyPress={(e) => onKeyPressed(e)}\n          style={{ width: '100%' }}\n        />\n        <Checkbox className={className} style={CheckboxStyle} label=\"Search ignoring diacritics\" checked={ignoreDiacritics} onChange={(e, d) => setIgnoreDiacritics(d.checked)} />\n        <Checkbox className={className} style={CheckboxStyle} label=\"Search related Greek forms (slower but more thorough)\" checked={searchRelatedForms} onChange={(e, d) => setSearchRelatedForms(d.checked)} />\n        <Tab className={className} panes={panes} />\n      </Container>\n    </Segment>\n  );\n}\n\nSearch.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n  inverted: PropTypes.bool,\n};\n\nSearch.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(Search);\n"],"sourceRoot":""}