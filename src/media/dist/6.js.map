{"version":3,"sources":["webpack:///./src/components/Utils/index.jsx","webpack:///./src/components/URLs/BasePaths.jsx","webpack:///./src/components/URLs/index.jsx","webpack:///./src/components/Endpoints/index.js","webpack:///./src/components/URLs/Parameters.jsx","webpack:///./src/components/ErrorMessage/index.jsx","webpack:///./src/components/FullscreenDialog/index.jsx","webpack:///./src/components/PopupDialog/index.jsx","webpack:///./src/components/Constants/index.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js","webpack:///./src/components/WordInformation/WordLemma.css?af8a","webpack:///./src/components/WordInformation/WordLemma.css","webpack:///./src/components/PopupDialog/PopupDialog.scss?1847","webpack:///./src/components/PopupDialog/PopupDialog.scss","webpack:///./src/components/WordInformation/WordLemma.jsx","webpack:///./src/components/WordInformation/index.jsx","webpack:///./src/components/WordInformation/ExternalLookupLinks.jsx","webpack:///./src/components/WordInformation/WordInformationPopup.jsx","webpack:///./src/components/BetaCodeConverter/index.jsx"],"names":["toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","truncate","maxLength","length","substring","addHandler","handler","type","window","addEventListener","removeHandler","removeEventListener","getAbsolutePosition","element","r","x","offsetLeft","y","offsetTop","offsetParent","tmp","scrollToTarget","id","elmnt","document","getElementById","scrollIntoView","behavior","block","inline","indexOfNoDiacritic","array","word","findIndex","str1","localeCompare","undefined","sensitivity","appendLeadingQuestionMark","url","appendAmpersand","params","START_PAGE","BETA_CODE_CONVERT","READ_WORK","work","secondWork","divisionReference","divisions","divisionsFiltered","filter","entry","join","PARAMS_READ_WORK","SEARCH","q","ignoreDiacritics","searchRelatedForms","page","PARAMS_SEARCH","GOOGLE_SEARCH","PARAMS_GOOGLE_SEARCH","PERSEUS_WORD_LOOKUP","PARAMS_PERSEUS_WORD_LOOKUP","LOGEION_WORD_LOOKUP","config","getHostConfig","origin","location","hostname","ENDPOINT_READ_WORK","ENDPOINT_WORK_INFO","ENDPOINT_WORK_IMAGE","width","ENDPOINT_WORK_DOWNLOAD","format","ENDPOINT_RESOLVE_REFERENCE","reference","ENDPOINT_WORD_PARSE","ENDPOINT_WORD_FORMS","ENDPOINT_WORKS_LISTS","ENDPOINT_VERSION_INFO","ENDPOINT_SEARCH","query","relatedForms","download","pagelen","relatedFormsConverted","ignoreDiacriticsConverted","encodeURIComponent","ENDPOINT_CONVERT_BETA_CODE_QUERY","parallelWork","ErrorMessage","title","description","message","inverted","color","as","style","marginBottom","propTypes","PropTypes","string","isRequired","bool","defaultProps","BackButtonStyle","display","fontSize","textAlign","BackLinkStyle","cursor","TitleStyle","verticalAlign","paddingLeft","ContentStyle","marginTop","FullscreenDialog","children","onClickBack","backTitle","compact","onClick","name","corner","fitted","object","func","getPositionRecommendation","event","clientX","innerWidth","clientY","innerHeight","PopupDialog","props","onClose","positionBelow","positionRight","footer","closeButtonStyle","float","marginRight","segmentStyle","position","maxHeight","overflowY","padding","zIndex","segmentStyleTinyTop","top","left","segmentStyleTinyBelow","bottom","isSmallMode","footerStyle","getContent","className","basic","height","open","number","MODE_LOADING","MODE_ERROR","MODE_DONE","MODE_NOT_READY","Divider","clearing","content","hidden","horizontal","section","vertical","classes","rest","ElementType","createElement","isNil","handledProps","api","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","WordLemma","lexiconEntries","Message","warning","Icon","map","lexiconEntry","key","lemma_lexical_form","dangerouslySetInnerHTML","__html","definition","arrayOf","shape","WordInformation","searchState","useState","loading","setLoading","wordInfo","setWordInfo","error","setError","activeIndex","setActiveIndex","useEffect","fetch","then","res","json","data","e","toString","mode","ignoring_diacritics","Accordion","fluid","index","Fragment","form","Title","active","titleProps","handleClick","lemma","meaning","Content","lexicon_entries","state","to","pathname","search","getSearchLinks","Placeholder","Header","Line","Paragraph","ExternalLookupLinks","target","rel","href","WordInformationDialog","SegmentStyle","convertBetaCodeDebounced","AwesomeDebouncePromise","originalText","BetaCodeConverter","history","setOriginalText","convertedText","setConvertedText","modal","setModal","selectedWord","setSelectedWord","popupX","setPopupX","popupY","setPopupY","popupPositionRight","setPopupPositionRight","popupPositionBelow","setPopupPositionBelow","handleWordClick","includes","textContent","right","below","layerX","layerY","placeholder","value","onChange","secondary","split","t","withRouter"],"mappings":"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","file":"6.bundle.js","sourcesContent":["export function toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n}\n\nexport function truncate(str, maxLength) {\n    return str.length > maxLength ? `${str.substring(0, (maxLength-3))}...` : str;\n}\n\nexport function addHandler(handler, type = 'click') {\n  window.addEventListener(type, handler);\n}\n\nexport function removeHandler(handler, type = 'click') {\n  window.removeEventListener(type, handler);\n}\n\nexport function getAbsolutePosition(element) {\n  const r = { x: element.offsetLeft, y: element.offsetTop };\n  if (element.offsetParent) {\n    const tmp = getAbsolutePosition(element.offsetParent);\n    r.x += tmp.x;\n    r.y += tmp.y;\n  }\n  return r;\n};\n\nexport function scrollToTargetAdjusted(id, offset=45){\n  const element = document.getElementById(id);\n  const elementPosition = element.getBoundingClientRect().top;\n  const offsetPosition = elementPosition - offset;\n\n  window.scrollTo({\n       top: offsetPosition,\n       behavior: \"smooth\"\n  });\n}\n\nexport function scrollToTarget(id){\n  const elmnt = document.getElementById(id);\n  if(elmnt) {\n    elmnt.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\n  }\n}\n\nexport function indexOfNoDiacritic(array, word){\n  const comparer = str1 => {\n    if(str1) {\n      // Note: zero means they are equivalent\n      return str1.localeCompare(word, undefined, { sensitivity: 'base' }) === 0;\n    }\n    return false;\n  };\n\n  // const comparer = str1 => str1 === word;\n  return array.findIndex(comparer);\n}\n\n/**\n * Append a leading question mark if necessary.\n * @param {string} url \n * @returns \n */\n export function appendLeadingQuestionMark(url) {\n  return url.length === 0 ? url : `?${url}`;\n}\n\n/**\n * Append an ampersand if necessary if the URL already has at least one argument.\n * @param {*} url The URL that is going to be appended to.\n * @param {*} params The parameters that you want to append.\n * @returns The parameter with an ampersand if necessary.\n */\nexport function appendAmpersand(url, params) {\n  return url.length > 0 ? `&${params}` : params;\n}\n","/**\n * This includes the base paths for various URLs. These are broken out so that people can create references tp the paths using history where the parameters are transmitted to history.pushState via the search argument.\n */\nexport const BASE_PATH_START_PAGE = \"/\";\nexport const BASE_PATH_BETA_CODE_CONVERT = \"/beta_code_converter\";\nexport const BASE_PATH_READ_WORK = \"/work\";\nexport const BASE_PATH_SEARCH = \"/search\";\n\nexport const BASE_PATH_GOOGLE_SEARCH = \"https://www.google.com/search\";\nexport const BASE_PATH_PERSEUS_WORD_LOOKUP =\n  \"http://www.perseus.tufts.edu/hopper/morph\";\nexport const BASE_PATH_LOGEION_WORD_LOOKUP = \"https://logeion.uchicago.edu\";\n","/**\n * This page provides helper functions for creating URLs for the website.\n */\n\nimport { BASE_PATH_START_PAGE, BASE_PATH_BETA_CODE_CONVERT, BASE_PATH_READ_WORK, BASE_PATH_SEARCH, BASE_PATH_GOOGLE_SEARCH, BASE_PATH_PERSEUS_WORD_LOOKUP, BASE_PATH_LOGEION_WORD_LOOKUP } from \"./BasePaths\";\nimport { PARAMS_SEARCH, PARAMS_GOOGLE_SEARCH, PARAMS_PERSEUS_WORD_LOOKUP, PARAMS_READ_WORK } from \"./Parameters\";\n\nexport function START_PAGE() {\n  return BASE_PATH_START_PAGE;\n}\n\nexport function BETA_CODE_CONVERT() {\n  return BASE_PATH_BETA_CODE_CONVERT;\n}\n\nexport function READ_WORK(work = '', secondWork = null, ...divisions) {\n  let divisionReference = '';\n\n  const divisionsFiltered = divisions.filter((entry) => entry);\n\n  if (divisions.length > 0 && work) {\n    divisionReference = divisionsFiltered.join('/');\n    return `${BASE_PATH_READ_WORK}/${work}/${divisionReference}${PARAMS_READ_WORK(secondWork)}`;\n  }\n\n  return `${BASE_PATH_READ_WORK}/${work}`;\n}\n\nexport function SEARCH(\n  q = '',\n  ignoreDiacritics = false,\n  searchRelatedForms = false,\n  page = '',\n) {\n  return `${BASE_PATH_SEARCH}${PARAMS_SEARCH(q, ignoreDiacritics, searchRelatedForms, page)}`;\n}\n\nexport function GOOGLE_SEARCH(q = '') {\n  return `${BASE_PATH_GOOGLE_SEARCH}${PARAMS_GOOGLE_SEARCH(q)}`;\n}\n\nexport function PERSEUS_WORD_LOOKUP(word = '') {\n  return `${BASE_PATH_PERSEUS_WORD_LOOKUP}${PARAMS_PERSEUS_WORD_LOOKUP(word)}`;\n}\n\nexport function LOGEION_WORD_LOOKUP(word = '') {\n  return `${BASE_PATH_LOGEION_WORD_LOOKUP}/${word}`;\n}\n","\n/**\n * The following provides a way to map REST calls to another service (for development).\n */\n import { appendAmpersand } from '../Utils';\n \nconst config = {\n  // localhost: 'http://localhost:8080',\n};\n\n/**\n * This function determines what host to use for REST calls based on the hostname.\n * @param {*} origin The host to find the REST call domain for\n */\nexport function getHostConfig(origin = window.location.hostname) {\n  if (origin in config) {\n    return config[origin];\n  }\n\n  return '';\n}\n\nexport function ENDPOINT_READ_WORK(work = '', ...divisions) {\n\n  let divisionReference = '';\n\n  if (divisions.length > 0 && work) {\n    divisionReference = divisions.join('/');\n    return `${getHostConfig()}/api/work/${work}/${divisionReference}`;\n  }\n\n  return `${getHostConfig()}/api/work/${work}`;\n}\n\nexport function ENDPOINT_WORK_INFO(work) {\n  return `${getHostConfig()}/api/work_info/${work}`;\n}\n\nexport function ENDPOINT_WORK_IMAGE(work, width = 100) {\n  return `${getHostConfig()}/api/work_image/${work}?width=${width}`;\n}\n\nexport function ENDPOINT_WORK_DOWNLOAD(work, format = 'epub') {\n  return `${getHostConfig()}/api/download/work/${work}?format=${format}`;\n}\n\nexport function ENDPOINT_RESOLVE_REFERENCE(work, reference) {\n  return `${getHostConfig()}/api/resolve_reference/?work=${work}&ref=${reference}`;\n}\n\nexport function ENDPOINT_WIKI_INFO(search, search2 = null, search3 = null) {\n  const searchParams = [search, search2, search3].filter((e) => e != null);\n  return `${getHostConfig()}/api/wikipedia_info/${searchParams.join('/')}`;\n}\n\nexport function ENDPOINT_WORD_PARSE(word) {\n  return `${getHostConfig()}/api/word_parse/${word}`;\n}\n\nexport function ENDPOINT_WORD_FORMS(word) {\n  return `${getHostConfig()}/api/word_forms/${word}`;\n}\n\nexport function ENDPOINT_WORKS_LISTS() {\n  return `${getHostConfig()}/api/works`;\n}\n\nexport function ENDPOINT_VERSION_INFO() {\n  return `${getHostConfig()}/api/version_info`;\n}\n\nexport function ENDPOINT_SEARCH(query, page = 1, relatedForms = false, ignoreDiacritics = false, download = null, pagelen = null) {\n  let relatedFormsConverted = 0;\n  if (relatedForms) {\n    relatedFormsConverted = 1;\n  }\n\n  let ignoreDiacriticsConverted = 0;\n  if (ignoreDiacritics) {\n    ignoreDiacriticsConverted = 1;\n  }\n\n  let url = '';\n\n  if (page) {\n    url += appendAmpersand(url, `page=${page}`);\n  }\n\n  if (pagelen) {\n    url += appendAmpersand(url, `pagelen=${pagelen}`);\n  }\n\n  url += appendAmpersand(url, `ignore_diacritics=${ignoreDiacriticsConverted}`);\n  url += appendAmpersand(url, `related_forms=${relatedFormsConverted}`);\n\n  if (download) {\n    url += appendAmpersand(url, `download=`);\n  }\n\n  return `${getHostConfig()}/api/search/${encodeURIComponent(query)}?${url}`;\n}\n\nexport function ENDPOINT_CONVERT_BETA_CODE_QUERY(query) {\n  return `${getHostConfig()}/api/convert_query_beta_code/?q=${query}`;\n}\n","/**\n * This contains the functions for making the URL parameters (that part past the ? in the URL).\n */\n\n import { appendAmpersand, appendLeadingQuestionMark } from '../Utils';\n\nexport function PARAMS_SEARCH(\n  q = \"\",\n  ignoreDiacritics = false,\n  searchRelatedForms = false,\n  page = \"\"\n) {\n  let url = \"\";\n\n  if (q) {\n    url += appendAmpersand(url, `q=${q}`);\n  }\n\n  if (page) {\n    url += appendAmpersand(url, `page=${page}`);\n  }\n\n  if (ignoreDiacritics) {\n    url += appendAmpersand(url, \"ignore_diacritics=1\");\n  }\n\n  if (searchRelatedForms) {\n    url += appendAmpersand(url, \"include_related=1\");\n  }\n\n\n  return appendLeadingQuestionMark(url)\n}\n\nexport function PARAMS_READ_WORK(\n  parallelWork = null,\n) {\n  let url = \"\";\n\n  if (parallelWork) {\n    url += appendAmpersand(url, `parallel=${parallelWork}`);\n  }\n\n  return appendLeadingQuestionMark(url)\n}\n\nexport function PARAMS_PERSEUS_WORD_LOOKUP(word = '') {\n  let url = \"\";\n\n  if (word) {\n    url += `l=${word}&la=greek`;\n  }\n\n  return appendLeadingQuestionMark(url)\n}\n\nexport function PARAMS_GOOGLE_SEARCH(q = '') {\n  let url = \"\";\n\n  if (q) {\n    url = `q=${q}`;\n  }\n\n  return appendLeadingQuestionMark(url)\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Segment } from 'semantic-ui-react';\n\n/**\n * This class renders the content of chapter of a work.\n */\nfunction ErrorMessage({\n  title, description, message, inverted,\n}) {\n  return (\n    <Segment color=\"red\" inverted={inverted}>\n      <Header as=\"h3\">{title}</Header>\n      {description && (\n        description\n      )}\n      {message && description && (\n        <div style={{ marginBottom: 12 }} />\n      )}\n      { message }\n    </Segment>\n  );\n}\n\nErrorMessage.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  message: PropTypes.string.isRequired,\n  inverted: PropTypes.bool,\n};\n\nErrorMessage.defaultProps = {\n  description: null,\n  inverted: false,\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport {\n  Segment, Icon, Header, Divider, Container,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst BackButtonStyle = {\n  display: 'inline-block',\n  fontSize: 16,\n  textAlign: 'middle',\n};\n\nconst BackLinkStyle = {\n  cursor: 'pointer',\n  marginBottom: 0,\n};\n\nconst TitleStyle = {\n  display: 'inline-block',\n  fontSize: 12,\n  verticalAlign: 'top',\n  paddingLeft: 12,\n  color: 'white',\n};\n\nconst ContentStyle = {\n  marginTop: 0,\n};\n\nconst FullscreenDialog = ({\n  children, onClickBack, inverted, backTitle,\n}) => (\n  <Container>\n    <Segment compact style={BackLinkStyle} onClick={onClickBack} inverted={inverted}>\n      <div style={BackButtonStyle}>\n        <Icon name=\"arrow left\" corner=\"top left\" fitted />\n      </div>\n      <div style={TitleStyle}>\n        <Header inverted={inverted} as=\"h4\">{backTitle}</Header>\n      </div>\n    </Segment>\n    <Divider style={{ marginTop: 0 }} />\n    <Segment compact style={ContentStyle} inverted={inverted}>\n      {children}\n    </Segment>\n  </Container>\n);\n\nFullscreenDialog.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.object.isRequired,\n  inverted: PropTypes.bool,\n  onClickBack: PropTypes.func,\n  backTitle: PropTypes.string,\n};\n\nFullscreenDialog.defaultProps = {\n  inverted: false,\n  onClickBack: () => {},\n  backTitle: 'Back',\n};\n\nexport default FullscreenDialog;\n","import React from 'react';\nimport { Segment, Icon, Portal } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport './PopupDialog.scss';\n\n/**\n * Determines a recommendation about where to show a popup.\n *\n * @param {object} event The event from the handler with the dimensions\n */\nexport const getPositionRecommendation = (event) => {\n  const positionRight = event.clientX < (window.innerWidth / 2);\n  const positionBelow = event.clientY < (window.innerHeight / 2);\n\n  return [positionRight, positionBelow];\n};\n\nconst PopupDialog = (props) => {\n  const {\n    children, onClose, x, y, positionBelow, positionRight, footer, inverted,\n  } = props;\n\n  /**\n   * This is done to get rid of the outline around the close button and get it to show up at the\n   * right of the screen.\n   */\n  const closeButtonStyle = {\n    float: 'right',\n    cursor: 'pointer',\n    marginRight: 0,\n  };\n\n  // Correct for the cases where the dialog is off of the bottom of the screen.\n  const segmentStyle = {\n    position: 'absolute',\n    width: 500,\n    maxHeight: 300,\n    overflowY: 'auto',\n    padding: 0,\n    zIndex: 103,\n  };\n\n  const segmentStyleTinyTop = {\n    ...segmentStyle,\n    ...{\n      top: 45,\n      left: 5,\n      width: 'calc(100% - 10px)',\n      position: 'fixed',\n    },\n  };\n\n  const segmentStyleTinyBelow = {\n    ...segmentStyle,\n    ...{\n      bottom: 5,\n      left: 5,\n      width: 'calc(100% - 10px)',\n      position: 'fixed',\n    },\n  };\n\n  // Determine if we ought to enter the mode for mobile devices\n  const isSmallMode = () => window.innerWidth < 1024;\n\n  // Get the style appropriate for the segment to appear\n  const getSegmentStyle = () => {\n    if (isSmallMode()) {\n      if (positionBelow) {\n        return segmentStyleTinyBelow;\n      }\n      return segmentStyleTinyTop;\n    }\n\n    return segmentStyle;\n  };\n\n  // This applies to the footer\n  const footerStyle = {\n    position: 'sticky',\n    bottom: 0,\n    width: '100%',\n  };\n\n  // Get the main content for the popup\n  const getContent = () => (\n    <Segment className=\"popupDialog\" inverted={inverted} style={getSegmentStyle()}>\n      <div style={{ padding: 15 }}>\n        <Icon style={closeButtonStyle} onClick={onClose}>&#10005;</Icon>\n        {children}\n      </div>\n      {footer && (\n        <Segment className=\"popupDialogFooter\" inverted={inverted} basic style={footerStyle}>{footer}</Segment>\n      )}\n    </Segment>\n  );\n\n  // Determine the height of the dialog\n  const height = segmentStyle.height ? segmentStyle.height : 300;\n\n  // Calculate the vertical position\n  if (positionBelow) {\n    segmentStyle.top = y;\n  } else {\n    segmentStyle.top = y - height - 20;\n  }\n\n  // Calculate the horizontal position\n  if (positionRight) {\n    segmentStyle.left = x;\n  } else {\n    segmentStyle.left = x - segmentStyle.width - 10;\n  }\n\n  // If we are running in small mode, run it as a portal so that it can appear in a fixed location\n  if (isSmallMode()) {\n    return (\n      <Portal open>\n        {getContent()}\n      </Portal>\n    );\n  }\n\n  // Otherwise, run it inline so that it is fixed in the rest of the content\n  return getContent();\n};\n\nPopupDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  positionBelow: PropTypes.bool,\n  positionRight: PropTypes.bool,\n  children: PropTypes.element.isRequired,\n  footer: PropTypes.element,\n  inverted: PropTypes.bool,\n};\n\nPopupDialog.defaultProps = {\n  positionBelow: true,\n  positionRight: true,\n  footer: null,\n  inverted: false,\n};\n\nexport default PopupDialog;\n","\nexport const MODE_LOADING = 0;\nexport const MODE_ERROR = 1;\nexport const MODE_DONE = 2;\nexport const MODE_NOT_READY = 3;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./WordLemma.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".view_lexicon .speaker {\\n  font-weight: bold;\\n  display: block;\\n  margin-top: 12px;\\n}\\n.view_lexicon .milestone {\\n  color: #999999;\\n}\\n.view_lexicon [data-rend=\\\"italics\\\"] {\\n  font-style: italic;\\n}\\n.view_lexicon .milestone[data-n].milestone[data-unit]:after {\\n  font-size: smaller;\\n  margin: 3px;\\n  content: \\\"[\\\" attr(data-unit) \\\" \\\" attr(data-n) \\\"]\\\";\\n}\\n.view_lexicon .milestone[data-unit=\\\"para\\\"] {\\n  display: block;\\n  padding-top: 12px;\\n}\\n.view_lexicon .l {\\n  display: block;\\n  margin-left: 24px;\\n}\\n.view_lexicon .gap {\\n  content: \\\"...\\\";\\n}\\n.view_lexicon .quote,\\n.view_lexicon .q {\\n  font-style: italic;\\n}\\n.view_lexicon .bibl {\\n  margin-left: 3px;\\n  margin-right: 3px;\\n  font-weight: bold;\\n}\\n.view_lexicon .bibl::before {\\n  content: \\\"[\\\";\\n}\\n.view_lexicon .bibl::after {\\n  content: \\\"]\\\";\\n}\\n.view_lexicon .docauthor {\\n  display: block;\\n  padding-bottom: 16px;\\n}\\n.view_lexicon .label:not(.block) .label {\\n  margin-left: 8px;\\n  margin-right: 4px;\\n}\\n.view_lexicon .note-tag {\\n  margin-left: 4px;\\n  margin-right: 2px;\\n  cursor: hand;\\n  cursor: pointer;\\n}\\n.view_lexicon .read-more {\\n  margin-top: 16px;\\n  display: block;\\n}\\n\\n.view_lexicon .lb {\\n  display: block;\\n}\\n\\n.view_lexicon .div3 {\\n  padding-top: 16px;\\n  display: block;\\n}\\n\\n.view_lexicon .quote > .title {\\n  font-weight: bold;\\n  display: block;\\n}\\n\\n.view_lexicon .p {\\n  margin-bottom: 16px;\\n  display: block;\\n}\\n\\n.view_lexicon .lemma {\\n  text-decoration: underline;\\n  font-weight: bold;\\n}\\n\\n.view_lexicon .orth {\\n  font-weight: bold;\\n  display: block;\\n}\\n\\n.view_lexicon .etym {\\n  display: block;\\n  margin-top: 12px;\\n  font-weight: bold;\\n}\\n\\n/**\\n * Style the sense entries so that they are nested accordingly\\n */\\n.view_lexicon .sense {\\n  display: block;\\n  margin-left: 15px;\\n  margin-top: 8px;\\n}\\n\\n/**\\n * Set the margins\\n */\\n.view_lexicon .sense[data-level=\\\"2\\\"] {\\n  margin-left: 30px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"3\\\"] {\\n  margin-left: 45px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"4\\\"] {\\n  margin-left: 60px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"5\\\"] {\\n  margin-left: 75px;\\n}\\n\\n.view_lexicon .sense[data-level=\\\"6\\\"] {\\n  margin-left: 90px;\\n}\\n\\n/**\\n * Show the N indicator (\\\"1.\\\", \\\"2.\\\", etc.)\\n */\\n.view_lexicon .sense[data-level]:before {\\n  content: \\\"\\\" attr(data-n) \\\". \\\";\\n}\\n\\n.view_lexicon .sense[data-level=\\\"0\\\"]:before {\\n  content: \\\"\\\";\\n}\\n\\n/* -----------------------------------------\\n     Read work\\n     ----------------------------------------- */\\n.verse.number {\\n  font-weight: bold;\\n  color: black;\\n  /*\\n  border: white solid 1px;\\n  padding: 1px 4px 1px 4px;\\n  background-color: white;\\n  */\\n}\\n\\n.verse-container {\\n  display: inline;\\n  line-height: 25px;\\n}\\n\\n.block {\\n  display: block;\\n  margin-top: 12px;\\n}\\n\\n.no_definition_entries {\\n  font-style: italic;\\n}\\n\\n.verse .word {\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n.verse .word:hover {\\n  text-decoration: underline;\\n}\\n\\n.view_lexicon .tr {\\n  font-style: italic;\\n  font-weight: bold;\\n}\\n\\n@media print {\\n  .view_lexicon .note-tag {\\n    display: none;\\n  }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./PopupDialog.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ui.inverted.segment.popupDialog{background-color:#2b2b2e;border:1px solid #444;-webkit-box-shadow:0 15px 20px rgba(0,0,0,.5);box-shadow:0 15px 20px rgba(0,0,0,.5)}.popupDialog{z-index:100}.ui.inverted.segment.popupDialogFooter{border-top:1px solid #202023;background-color:#202023}.ui.segment.popupDialogFooter{border-top:1px solid #ddd;background-color:#f6f6f6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message, Icon } from 'semantic-ui-react';\nimport './WordLemma.css';\n\nconst WordLemma = (props) => {\n  const {\n    lexiconEntries, inverted,\n  } = props;\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <>\n      {lexiconEntries.length === 0 && (\n        <Message warning className={className}>\n          <Icon name=\"warning\" />\n          No definition available from Liddel and Scott.\n        </Message>\n      )}\n      {lexiconEntries && (\n        lexiconEntries.map((lexiconEntry) => (\n          <div\n            key={lexiconEntry.lemma_lexical_form}\n            className=\"view_lexicon\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: lexiconEntry.definition }}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nWordLemma.propTypes = {\n  lexiconEntries: PropTypes.arrayOf(PropTypes.shape),\n  inverted: PropTypes.bool,\n};\n\nWordLemma.defaultProps = {\n  lexiconEntries: null,\n  inverted: false,\n};\n\nexport default WordLemma;\n","import React, { useState, useEffect } from 'react';\nimport { Placeholder, Accordion, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ENDPOINT_WORD_PARSE } from '../Endpoints';\nimport { SEARCH } from '../URLs';\nimport { PARAMS_SEARCH } from '../URLs/Parameters';\nimport ErrorMessage from '../ErrorMessage';\nimport WordLemma from './WordLemma';\nimport { MODE_LOADING, MODE_ERROR, MODE_DONE } from \"../Constants\";\n\nconst WordInformation = ({ word, inverted, work, searchState }) => {\n  const [loading, setLoading] = useState(false);\n  const [wordInfo, setWordInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const getSearchLinks = (state = null) => {\n    if (work) {\n      return (\n        <>\n          Search for\n          {' '}\n          {word}\n          {' '}\n          in\n          {' '}\n          <Link to={{\n            pathname: SEARCH(),\n            search: PARAMS_SEARCH(`work:${work} ${word}`),\n            state,\n            }}\n          >\n            this work\n          </Link>\n          {' '}\n          or\n          {' '}\n          <Link to={SEARCH(word)}>all works</Link>\n        </>\n      );\n    }\n    return (\n      <>\n        Search for\n        {' '}\n        <Link to={SEARCH(word)}>{word}</Link>\n      </>\n    );\n  }\n\n\n  /**\n   * Get information for the given word.\n   *\n   * @param {string} wordToLookup The word to get information on\n   */\n   const getWordInfo = () => {\n    setLoading(true);\n\n    fetch(ENDPOINT_WORD_PARSE(word))\n      .then((res) => res.json())\n      .then((data) => {\n        setWordInfo(data);\n        setLoading(false);\n        setError(null);\n        setActiveIndex(null);\n      })\n      .catch((e) => {\n        setError(e.toString());\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    getWordInfo();\n  }, [word]);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  }\n\n  let mode = MODE_LOADING;\n  if (!loading && wordInfo) {\n    mode = MODE_DONE;\n  }\n  else if (!loading && error) {\n    mode = MODE_ERROR;\n  }\n\n  return (\n    <>\n      {mode === MODE_DONE && (\n        <div>\n          Found\n          {' '}\n          {wordInfo.length}\n          {' '}\n          {wordInfo.length !== 1 && (\n            <>parses for</>\n          )}\n          {wordInfo.length === 1 && (\n            <>parse for</>\n          )}\n          {' '}\n          {word}\n          .\n          {wordInfo && wordInfo.length > 0 && wordInfo[0].ignoring_diacritics && (\n            <>\n              {' '}\n              An exact match could not be found, so similar words with different diacritical marks\n              are being returned.\n            </>\n          )}\n          <Accordion inverted={inverted} style={{ marginTop: 18 }} fluid>\n            {wordInfo.map((entry, index) => (\n              <React.Fragment key={`${entry.form}::${entry.description}`}>\n                <Accordion.Title\n                  active={activeIndex === index}\n                  index={index}\n                  onClick={(e, titleProps) => handleClick(e, titleProps)}\n                >\n                  <Icon name=\"dropdown\" />\n                  {entry.lemma}\n                  {' '}\n                  (\n                  {entry.description}\n                  ):\n                  {' '}\n                  {entry.meaning}\n                </Accordion.Title>\n                <Accordion.Content\n                  active={activeIndex === index}\n                >\n                  <WordLemma\n                    lexiconEntries={entry.lexicon_entries}\n                    inverted={inverted}\n                  />\n                </Accordion.Content>\n              </React.Fragment>\n            ))}\n          </Accordion>\n          <div style={{ marginTop: 12 }}>\n            {getSearchLinks(word, work, searchState)}\n          </div>\n        </div>\n      )}\n      {mode === MODE_ERROR && (\n        <div>\n          <ErrorMessage\n            inverted={inverted}\n            title=\"Unable to get word information\"\n            description=\"Information for the given word could not be obtained.\"\n            message={error}\n          />\n        </div>\n      )}\n      {mode === MODE_LOADING && (\n        <Placeholder inverted={inverted} style={{ marginTop: 32 }}>\n          <Placeholder.Header>\n            <Placeholder.Line />\n          </Placeholder.Header>\n          <Placeholder.Paragraph>\n            <Placeholder.Line />\n          </Placeholder.Paragraph>\n        </Placeholder>\n      )}\n    </>\n  );\n}\n\nWordInformation.propTypes = {\n  word: PropTypes.string.isRequired,\n  work: PropTypes.string,\n  inverted: PropTypes.bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  searchState: PropTypes.object,\n};\n\nWordInformation.defaultProps = {\n  inverted: false,\n  work: null,\n  searchState: null,\n};\n\nexport default WordInformation;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { GOOGLE_SEARCH, PERSEUS_WORD_LOOKUP, LOGEION_WORD_LOOKUP } from '../URLs';\n\nfunction ExternalLookupLinks({ word }) {\n  return (\n    <div>\n      Look up at\n      {' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={PERSEUS_WORD_LOOKUP(word)}>\n        Perseus\n      </a>\n      ,\n      {' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={LOGEION_WORD_LOOKUP(word)}>\n        Logeion\n      </a>\n      , or\n      {' '}\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={GOOGLE_SEARCH(word)}>\n        Google\n      </a>\n    </div>\n  );\n}\n\nExternalLookupLinks.propTypes = {\n  word: PropTypes.string.isRequired,\n};\n\nexport default ExternalLookupLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WordInformation from '.';\nimport PopupDialog from '../PopupDialog';\nimport ExternalLookupLinks from './ExternalLookupLinks';\n\nconst WordInformationDialog = (props) => {\n  const {\n    word, onClose, x, y, positionBelow, positionRight, inverted, work, searchState,\n  } = props;\n\n  return (\n    <PopupDialog\n      onClose={onClose}\n      inverted={inverted}\n      x={x}\n      y={y}\n      positionBelow={positionBelow}\n      positionRight={positionRight}\n      footer={<ExternalLookupLinks word={word} />}\n    >\n      <WordInformation work={work} word={word} inverted={inverted} searchState={searchState} />\n    </PopupDialog>\n  );\n};\n\nWordInformationDialog.propTypes = {\n  word: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  positionBelow: PropTypes.bool,\n  positionRight: PropTypes.bool,\n  inverted: PropTypes.bool,\n  work: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  searchState: PropTypes.object,\n};\n\nWordInformationDialog.defaultProps = {\n  positionBelow: true,\n  positionRight: true,\n  inverted: true,\n  work: null,\n  searchState: null,\n};\n\nexport default WordInformationDialog;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { Container, Form, TextArea, Segment, Dimmer, Loader, Header } from 'semantic-ui-react';\nimport { withRouter } from \"react-router-dom\";\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { ENDPOINT_CONVERT_BETA_CODE_QUERY } from '../Endpoints';\nimport { READ_WORK } from '../URLs';\nimport FullscreenDialog from '../FullscreenDialog';\nimport WordInformation from \"../WordInformation/WordInformationPopup\";\nimport ErrorMessage from '../ErrorMessage';\nimport { getPositionRecommendation } from '../PopupDialog';\n\nconst SegmentStyle = {\n  marginTop: \"20px\",\n};\n\nconst convertBetaCodeDebounced = AwesomeDebouncePromise(\n  (originalText) =>\n  fetch(ENDPOINT_CONVERT_BETA_CODE_QUERY(originalText)),\n  500\n);\n\nconst BetaCodeConverter = ({ inverted, history }) => {\n  const [originalText, setOriginalText] = useState('');\n  const [convertedText, setConvertedText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // The following are related to the popup\n  const [modal, setModal] = useState(null);\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [popupX, setPopupX] = useState(null);\n  const [popupY, setPopupY] = useState(null);\n  const [popupPositionRight, setPopupPositionRight] = useState(null);\n  const [popupPositionBelow, setPopupPositionBelow] = useState(null);\n\n  const onClickBack = () => {\n    history.push(READ_WORK());\n  };\n\n  const closeModal = () => {\n    setModal(null)\n  };\n\n  const convertText = (text) => {\n    const testSplit = text.split(\" \");\n    return testSplit.map(t => (\n      <>\n        <span className=\"word\">{t}</span>\n        {' '}\n      </>\n    ));\n  }\n\n  const handleWordClick = event => {\n    // Determine if we are clicking a word, verse, note, or just empty space\n    if (event.target.className.includes('word')) {\n      const word = event.target.textContent;\n      const [right, below] = getPositionRecommendation(event);\n\n      setPopupPositionRight(right);\n      setPopupPositionBelow(below);\n      setPopupX(event.layerX);\n      setPopupY(event.layerY);\n      setModal('word');\n      setSelectedWord(word);\n    }\n  }\n\n  const getWordInfo = txt => {\n    setLoading(true);\n\n    convertBetaCodeDebounced(txt)\n      .then((res) => res.json())\n      .then((data) => {\n        setConvertedText(data);\n        setLoading(false);\n        setError(null);\n      })\n      .catch((e) => {\n        setError(e);\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', handleWordClick);\n    return () => {\n      window.removeEventListener('click', handleWordClick);\n    };\n  }, [handleWordClick]);\n\n  /**\n   * Get the popups.\n   */\n  const getPopups = () => {\n    return (\n      <>\n        {modal === \"word\" && (\n          <WordInformation\n            inverted={inverted}\n            positionBelow={popupPositionBelow}\n            positionRight={popupPositionRight}\n            x={popupX}\n            y={popupY}\n            word={selectedWord}\n            onClose={() => closeModal()}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <FullscreenDialog inverted={inverted} onClickBack={onClickBack} backTitle=\"Back to the Library\">\n      {getPopups()}\n      <Container>\n        {error && (\n        <ErrorMessage\n          title=\"Unable to load word information\"\n          description=\"Unable to get information about the text from the server\"\n          message={error}\n        />\n        )}\n        <Segment inverted={inverted}>\n          <Header as=\"h1\">Greek text analysis</Header>\n          <Form>\n            Enter beta-code below and it will be converted to Greek Unicode automatically with the ability to look up individual words\n            <TextArea\n              placeholder='Enter Greek text or beta-code here'\n              value={originalText}\n              onChange={(event, data) => {\n                setOriginalText(data.value);\n                getWordInfo(data.value);\n            }}\n            />\n            <div style={SegmentStyle} />\n            {convertedText && (\n              <>\n                Results (click the word to do a morphological lookup):\n                <Segment secondary inverted={inverted}>\n                  { loading && (\n                  <Dimmer active>\n                    <Loader />\n                  </Dimmer>\n                  )}\n                  {convertText(convertedText)}\n                </Segment>\n              </>\n            )}\n          </Form>\n        </Segment>\n      </Container>\n    </FullscreenDialog>\n  );\n};\n\nBetaCodeConverter.propTypes = {\n  inverted: PropTypes.bool,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\n\nBetaCodeConverter.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(BetaCodeConverter);\n"],"sourceRoot":""}