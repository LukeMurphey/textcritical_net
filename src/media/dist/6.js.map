{"version":3,"sources":["webpack:///./src/components/Search/index.scss?3245","webpack:///./src/components/Search/index.scss","webpack:///./src/components/Charts/BarChart.jsx","webpack:///./src/components/Search/SearchResults.jsx","webpack:///./src/components/Search/SearchHelp.jsx","webpack:///./src/components/Search/index.jsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","InvertedColors","fill","background","lineColor","tickColor","text","NormalColors","BarChart","results","title","noDataMessage","width","inverted","categories","data","Object","entries","map","key","value","colors","chart","type","backgroundColor","style","color","legend","enabled","xAxis","labels","yAxis","min","align","overflow","plotOptions","bar","dataLabels","credits","series","name","length","highcharts","Highcharts","propTypes","PropTypes","shape","string","isRequired","number","bool","defaultProps","SearchResults","page","lastPage","goBack","goNext","matchCount","resultCount","as","renderHighlights","highlights","className","dangerouslySetInnerHTML","__html","Table","celled","collapsing","result","Row","url","Cell","href","work","description","Button","Group","attached","active","onClick","Segment","padding","arrayOf","func","SearchHelp","preformattedStyle","marginLeft","fontFamily","exampleStyle","marginTop","useState","activeIndex","setActiveIndex","handleClick","e","titleProps","index","Accordion","Title","Icon","Content","Message","info","Header","HeaderCell","Body","CheckboxStyle","marginRight","marginBottom","DownloadLinkStyle","downloadOptions","getParamOrDefault","searchParams","paramName","defaultValue","convertFormat","paramValue","get","parseInt","Search","history","location","queryParams","URLSearchParams","useLocation","search","query","setQuery","resultSet","setResultSet","error","setError","ignoreDiacritics","setIgnoreDiacritics","searchRelatedForms","setSearchRelatedForms","searching","setSearching","setPage","searchedKey","setSearchedKey","linkBackURL","setLinkBackURL","searchCount","useRef","Math","ceil","result_count","doSearch","requestedPage","q","selectedPage","diacritics","relatedForms","SEARCH","state","useEffect","current","searchCountLocal","fetch","ENDPOINT_SEARCH","then","res","json","toString","executeSearch","READ_WORK","divisions","mode","classNameSuffix","panes","menuItem","render","downloadUrl","downloadResults","filetype","window","open","Tab","Pane","icon","loading","ErrorMessage","message","match_count","Dropdown","button","Menu","downloadOption","Item","searchResultsByMode","keys","matched_terms","matched_works","matched_sections","FullscreenDialog","onClickBack","backTitle","Container","Input","action","basic","placeholder","onChange","d","onKeyPress","Checkbox","label","checked","object","withRouter"],"mappings":"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","file":"0523e5f0324dd4d58688.bundle.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"b.match{font-weight:bold}.term0{background-color:#f4f6d2}.term1{background-color:#f3e6e3}.term2{background-color:#e8e1f3}.term3{background-color:#dff0ed}.term4{background-color:#f5dbec}.term5{background-color:#d8ddfa}.term6{background-color:#cfcdfa}.term7{background-color:#dae0fa}.term8{background-color:#dadbfa}.term9{background-color:#d2cbfa}.term10{background-color:#e9e6ed}.term11{background-color:#f5cafa}.term12{background-color:#efdaf3}.term13{background-color:#e2eaf0}.term14{background-color:#e0efed}.term15{background-color:#d8cbfa}.term16{background-color:#caf9f9}.term17{background-color:#ead2fa}.term18{background-color:#f7d0f5}.term19{background-color:#e9f9da}.term20{background-color:#ecccfa}.term21{background-color:#e0d0fa}.term22{background-color:#d7f3f2}.term23{background-color:#ccdefa}.term24{background-color:#f1e8e3}.term25{background-color:#dbcafa}.term26{background-color:#dbd1fa}.term27{background-color:#eaf3df}.term28{background-color:#e9cafa}.term29{background-color:#fad1f1}.term30{background-color:#e9f1e2}.term31{background-color:#f3cefa}.term32{background-color:#cbf9f8}.term33{background-color:#e0f7e5}.term34{background-color:#d9f8eb}.term35{background-color:#e5cbfa}.term36{background-color:#f1cffa}.term37{background-color:#eee1ed}.term38{background-color:#f3cafa}.term39{background-color:#e1e6f5}.term40{background-color:#f6efd7}.term41{background-color:#f3ebde}.term42{background-color:#f2cbfa}.term43{background-color:#e1dcfa}.term44{background-color:#decdfa}.term45{background-color:#e9f5de}.term46{background-color:#d1effa}.term47{background-color:#e1cafa}.term48{background-color:#d1d4fa}.term49{background-color:#f5e7e0}.term50{background-color:#f9c9fa}.inverted>.term0{background-color:#54758b}.inverted>.term1{background-color:#664f96}.inverted>.term2{background-color:#7c3996}.inverted>.term3{background-color:#665f8f}.inverted>.term4{background-color:#424b96}.inverted>.term5{background-color:#356e96}.inverted>.term6{background-color:#2b3f96}.inverted>.term7{background-color:#3c5e96}.inverted>.term8{background-color:#418291}.inverted>.term9{background-color:#647b75}.inverted>.term10{background-color:#6d3396}.inverted>.term11{background-color:#5d8671}.inverted>.term12{background-color:#824989}.inverted>.term13{background-color:#3a6796}.inverted>.term14{background-color:#518b78}.inverted>.term15{background-color:#737a67}.inverted>.term16{background-color:#406c96}.inverted>.term17{background-color:#604c96}.inverted>.term18{background-color:#61866d}.inverted>.term19{background-color:#632f96}.inverted>.term20{background-color:#734296}.inverted>.term21{background-color:#627d75}.inverted>.term22{background-color:#548e72}.inverted>.term23{background-color:#3d3e96}.inverted>.term24{background-color:#637d74}.inverted>.term25{background-color:#365796}.inverted>.term26{background-color:#8f3c89}.inverted>.term27{background-color:#904183}.inverted>.term28{background-color:#555196}.inverted>.term29{background-color:#298796}.inverted>.term30{background-color:#48808c}.inverted>.term31{background-color:#507193}.inverted>.term32{background-color:#657a75}.inverted>.term33{background-color:#947b45}.inverted>.term34{background-color:#386e96}.inverted>.term35{background-color:#677f6e}.inverted>.term36{background-color:#345696}.inverted>.term37{background-color:#2f4b96}.inverted>.term38{background-color:#295c96}.inverted>.term39{background-color:#763796}.inverted>.term40{background-color:#485096}.inverted>.term41{background-color:#644d96}.inverted>.term42{background-color:#713f96}.inverted>.term43{background-color:#86814d}.inverted>.term44{background-color:#308b96}.inverted>.term45{background-color:#855d72}.inverted>.term46{background-color:#415e96}.inverted>.term47{background-color:#373496}.inverted>.term48{background-color:#697675}.inverted>.term49{background-color:#3f7596}.inverted>.term50{background-color:#315796}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst InvertedColors = {\n  fill: '#006dcc',\n  background: '#2B2B2E',\n  lineColor: '#DDD',\n  tickColor: '#DDD',\n  text: '#DDD',\n};\n\nconst NormalColors = {\n  fill: '#006dcc',\n  background: '#FFF',\n  lineColor: '#000',\n  tickColor: '#000',\n  text: '#000',\n};\n\nfunction BarChart(\n  {\n    results, title, noDataMessage, width, inverted,\n  },\n) {\n  // Process the data into what the charting library expects\n  const categories = [];\n  let data = [];\n\n  if (results) {\n    data = Object.entries(results).map(([key, value]) => {\n      categories.push(key);\n      return value;\n    });\n  }\n\n  // Determine the color scheme\n  let colors = NormalColors;\n\n  if (inverted) {\n    colors = InvertedColors;\n  }\n\n  // Construct the options\n  const options = {\n    colors: [colors.fill],\n    chart: {\n      type: 'bar',\n      backgroundColor: colors.background,\n      width,\n    },\n    title: {\n      text: title,\n      style: { color: colors.text },\n    },\n    legend: {\n      enabled: false,\n    },\n    xAxis: {\n      categories,\n      title: {\n        text: null,\n      },\n      labels: {\n        style: { color: colors.text },\n      },\n      lineColor: colors.lineColor,\n      tickColor: colors.tickColor,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n        style: {\n          color: colors.text,\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: false,\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Count',\n        data,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {data.length >= 0 && (\n        <HighchartsReact\n          highcharts={Highcharts}\n          options={options}\n        />\n      )}\n      {data.length === 0 && (\n        noDataMessage\n      )}\n    </>\n  );\n}\n\nBarChart.propTypes = {\n  results: PropTypes.shape({\n    title: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  noDataMessage: PropTypes.string,\n  width: PropTypes.number,\n  inverted: PropTypes.bool,\n};\n\nBarChart.defaultProps = {\n  noDataMessage: 'No data matched',\n  width: null,\n  inverted: false,\n};\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Button, Table } from 'semantic-ui-react';\n\nfunction SearchResults({\n  results,\n  page,\n  lastPage,\n  goBack,\n  goNext,\n  matchCount,\n  resultCount,\n  inverted,\n  as,\n}) {\n  const renderHighlights = (highlights) => {\n    let className = '';\n    if (inverted) {\n      className = 'inverted';\n    }\n\n    // eslint-disable-next-line react/no-danger\n    return (<div className={className} dangerouslySetInnerHTML={{ __html: highlights }} />);\n  };\n\n  return (\n    <>\n      {as === 'table' && (\n        <>\n          <Table celled collapsing inverted={inverted}>\n            {results.map((result) => (\n              <Table.Row key={result.url}>\n                <Table.Cell>\n                  <strong>\n                    <a href={result.url}>\n                      {result.work}\n                      {' '}\n                      {result.description}\n                    </a>\n                  </strong>\n                </Table.Cell>\n                <Table.Cell>\n                  {renderHighlights(result.highlights)}\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table>\n          <Button.Group attached=\"bottom\">\n            <Button inverted={inverted} active={page <= 1} onClick={() => goBack()}>\n              Back\n            </Button>\n            <Button inverted={inverted} active={page >= lastPage} onClick={() => goNext()}>\n              Next\n            </Button>\n          </Button.Group>\n        </>\n      )}\n      {as === 'segment' && (\n        <Segment.Group>\n          {results.map((result) => (\n            <Segment style={{ padding: 8 }} inverted={inverted} key={result.url}>\n              <div>\n                <strong>\n                  <a href={result.url}>\n                    {result.work}\n                    {' '}\n                    {result.description}\n                  </a>\n                </strong>\n              </div>\n              {renderHighlights(result.highlights)}\n            </Segment>\n          ))}\n          <Button.Group attached=\"bottom\">\n            <Button inverted={inverted} active={page <= 1} onClick={() => goBack()}>\n              Back\n            </Button>\n            <Button inverted={inverted} active={page >= lastPage} onClick={() => goNext()}>\n              Next\n            </Button>\n          </Button.Group>\n        </Segment.Group>\n      )}\n      <div>\n        {'Page '}\n        {page}\n        {' of '}\n        {lastPage}\n        {' ('}\n        {matchCount}\n        {' word matches in '}\n        {resultCount}\n        {' verses)'}\n      </div>\n    </>\n  );\n}\n\nSearchResults.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  matchCount: PropTypes.number.isRequired,\n  resultCount: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  lastPage: PropTypes.number.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goNext: PropTypes.func.isRequired,\n  inverted: PropTypes.bool,\n  as: PropTypes.string,\n};\n\nSearchResults.defaultProps = {\n  inverted: false,\n  as: 'table',\n};\n\nexport default SearchResults;\n","import React, { useState } from 'react';\nimport {\n  Message, Accordion, Icon, Table,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nfunction SearchHelp({ inverted }) {\n  const preformattedStyle = {\n    marginLeft: 32,\n    fontFamily: 'monospace',\n  };\n\n  const exampleStyle = {\n    marginTop: 10,\n  };\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  };\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  return (\n    <Accordion inverted={inverted}>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        How do I search?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        The search language used by TextCritical.net allows several operations.\n        Here are some common ones:\n\n        <div style={exampleStyle}>\n          Search for verses with both ἱστορίας and νόμον:\n          <div style={preformattedStyle}>ἱστορίας νόμον</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the phrase &quot;ἱστορίας νόμον&quot;:\n          <div style={preformattedStyle}>&quot;ἱστορίας νόμον&quot;</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the word ἱστορίας or νόμον:\n          <div style={preformattedStyle}>ἱστορίας OR νόμον</div>\n        </div>\n\n        <div style={exampleStyle}>\n          Search for verses with the word συγγνώμην provided they do not include either ἱστορίας\n          or νόμον:\n          <div style={preformattedStyle}>συγγνώμην NOT (ἱστορίας OR νόμον)</div>\n        </div>\n\n        <div style={exampleStyle}>\n          The search engine accepts beta-code representations of Greek words. Thus, a search for\n          no/mon is equivalent to a search for νόμον:\n          <div style={preformattedStyle}>no/mon</div>\n        </div>\n        <Message\n          info\n          className={className}\n          content=\"If you are searching using beta-code, make sure to put your search query in single quotes (e.g. 'no/mon')\"\n        />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        How do I search for related forms?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        Searching for related forms causes the search engine to look for all other variations of a\n        word. For example, a search for ἀδελφός would also search for ἀδελφοί, ἀδελφοῦ, ἀδελφοί,\n        etc.\n        <Message\n          info\n          className={className}\n          content=\"Searching for related forms is considerably slower than searching for a particular form. \"\n        />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        What fields can be searched?\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        Several fields exist that can be be searched. Just append the field name to the search\n        with a colon to search it (e.g. work:new-testament). Below are the available fields:\n        <Table inverted={inverted}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Field</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Example</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>work</Table.Cell>\n              <Table.Cell>\n                Search for items within a particular work (New Testament, Agammenon, etc.)\n              </Table.Cell>\n              <Table.Cell>work:&quot;New Testament&quot;</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>no_diacritics</Table.Cell>\n              <Table.Cell>\n                Search for words disregarding the diacritical marks. Searching for\n                no_diacritics:και will match on καὶ and καῖ\n              </Table.Cell>\n              <Table.Cell>no_diacritics:ευαγγελιον</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>section</Table.Cell>\n              <Table.Cell>\n                Search for items within a section (chapter, division, book, etc.)\n              </Table.Cell>\n              <Table.Cell>section:&quot;Matthew 5&quot;</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>author</Table.Cell>\n              <Table.Cell>\n                Search for verses within works created by a particular author.\n              </Table.Cell>\n              <Table.Cell>author:&quot;Flavius Josephus&quot;</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Accordion.Content>\n    </Accordion>\n  );\n}\n\nSearchHelp.propTypes = {\n  inverted: PropTypes.bool,\n};\n\nSearchHelp.defaultProps = {\n  inverted: false,\n};\n\nexport default SearchHelp;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport {\n  Input, Container, Button, Checkbox, Icon, Message, Tab,Dropdown,\n} from 'semantic-ui-react';\nimport BarChart from '../Charts/BarChart';\nimport SearchResults from './SearchResults';\nimport SearchHelp from './SearchHelp';\nimport ErrorMessage from '../ErrorMessage';\nimport FullscreenDialog from '../FullscreenDialog';\nimport { ENDPOINT_SEARCH } from '../Endpoints/urls';\nimport { SEARCH, READ_WORK } from '../URLs';\nimport './index.scss';\n\nconst MODE_NOT_STARTED = 0;\nconst MODE_SEARCHING = 1;\nconst MODE_ERROR = 2;\nconst MODE_NO_RESULTS = 3;\nconst MODE_RESULTS = 4;\n\nconst CONVERT_INT = 0;\nconst CONVERT_BOOL = 1;\n\nconst CheckboxStyle = {\n  marginTop: 12,\n  marginRight: 12,\n  marginBottom: 12,\n};\n\nconst DownloadLinkStyle = {\n  marginTop: 12,\n};\n\nconst downloadOptions = [\n  { text: 'as CSV', value: 'csv'},\n  { text: 'as XLSX (Excel)', value: 'xlsx'},\n]\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction searchResultsByMode(mode, resultSet, page, lastPage, goBack, goNext, error, inverted, downloadUrl = null) {\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  function downloadResults(filetype='csv') {\n    window.open(`${downloadUrl}${filetype}`, '_blank');\n  }\n\n  return (\n    <Tab.Pane inverted={inverted}>\n      {mode === MODE_SEARCHING && (\n        <Message icon className={className}>\n          <Icon name=\"circle notched\" loading />\n          <Message.Content>\n            <Message.Header>Just one second</Message.Header>\n            Performing the search...\n          </Message.Content>\n        </Message>\n      )}\n      {mode === MODE_ERROR && (\n        <ErrorMessage\n          title=\"Unable to perform the search\"\n          description=\"The search could not be executed.\"\n          message={error}\n          inverted={inverted}\n        />\n      )}\n      {mode === MODE_NO_RESULTS && (\n        <Message className={className}>\n          <Message.Header>No Results Found</Message.Header>\n          <p>\n            No Results were found for the given search.\n          </p>\n        </Message>\n      )}\n      {mode === MODE_RESULTS && (\n        <>\n          <SearchResults\n            results={resultSet.results}\n            matchCount={resultSet.match_count}\n            resultCount={resultSet.result_count}\n            page={page}\n            lastPage={lastPage}\n            goBack={() => goBack()}\n            goNext={() => goNext()}\n            inverted={inverted}\n          />\n          {downloadUrl && (\n            <div style={DownloadLinkStyle}>\n              <Dropdown button text='Download Results'>\n                <Dropdown.Menu>\n                  {downloadOptions.map((downloadOption) => (\n                    <Dropdown.Item key={downloadOption.value} onClick={() => downloadResults(downloadOption.value)}>{downloadOption.text}</Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          )}\n        </>\n      )}\n      {mode === MODE_NOT_STARTED && (\n        <Message className={className}>\n          <Message.Header>Enter a search</Message.Header>\n          <p>\n            Enter a search term to get started.\n          </p>\n        </Message>\n      )}\n    </Tab.Pane>\n  );\n}\n\n/**\n * Gets the parameter of the default value. This optionally converts the parameter format too.\n * @param {string} searchParams The string containing the URL parameters\n * @param {*} paramName The name of the paramter to get\n * @param {*} defaultValue The default value if the paramter doesn't exist yet\n * @param {*} convertFormat Whether to convert the value type (null or CONVERT_INT or CONVERT_BOOL)\n */\nfunction getParamOrDefault(searchParams, paramName, defaultValue, convertFormat = null) {\n  const paramValue = searchParams.get(paramName);\n  if (paramValue) {\n    if (convertFormat === CONVERT_INT) {\n      return parseInt(paramValue, 10);\n    }\n\n    if (convertFormat === CONVERT_BOOL && paramValue === '0') {\n      return false;\n    }\n\n    if (convertFormat === CONVERT_BOOL) {\n      return true;\n    }\n\n    return paramValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * This class renders a search page and results.\n */\nfunction Search({ inverted, history, location }) {\n  // Get the query params\n  const queryParams = useQuery();\n\n  // Setup state\n  const [query, setQuery] = useState(getParamOrDefault(queryParams, 'q', ''));\n  const [resultSet, setResultSet] = useState(null);\n  const [error, setError] = useState(null);\n  const [ignoreDiacritics, setIgnoreDiacritics] = useState(getParamOrDefault(queryParams, 'ignore_diacritics', false, CONVERT_BOOL));\n  const [searchRelatedForms, setSearchRelatedForms] = useState(getParamOrDefault(queryParams, 'include_related', false, CONVERT_BOOL));\n  const [searching, setSearching] = useState(false);\n  const [page, setPage] = useState(getParamOrDefault(queryParams, 'page', 1, CONVERT_INT));\n  const [searchedKey, setSearchedKey] = useState(null);\n  const [linkBackURL, setLinkBackURL] = useState(null);\n\n  // Keep an indicator of which search has run so that we don't post results from a previous search if the user\n  // clicks search twice and the results from the first search comes back after the second one.\n  const searchCount = useRef(0);\n\n  let className = '';\n\n  if (inverted) {\n    className = 'inverted';\n  }\n\n  // Calculate the last page\n  let lastPage = 1;\n\n  if (resultSet) {\n    lastPage = Math.ceil(resultSet.result_count / 10);\n  }\n\n  /**\n   * Change the history entry.\n   *\n   * @param {string} q The search query\n   * @param {integer} selectedPage The page offset\n   * @param {bool} diacritics Whether diacritics ought to be ignored\n   * @param {bool} relatedForms Whether related forms ought to be ignored\n   */\n  const updateHistory = (q, selectedPage, diacritics, relatedForms) => {\n    history.push(SEARCH(q, diacritics, relatedForms, selectedPage), location.state);\n  };\n\n  /**\n   * Update the history so that the search is kicked off.\n   *\n   * @param {int} requestedPage The page number\n   */\n  const doSearch = (requestedPage) => {\n    updateHistory(query, requestedPage, ignoreDiacritics, searchRelatedForms);\n  };\n\n  /**\n   * Perform the REST call to perform the search\n   *\n   * @param {int} requestedPage The page number\n   */\n  const executeSearch = (requestedPage) => {\n    setSearching(true);\n    setError(null);\n    setPage(requestedPage);\n    searchCount.current += 1;\n    const searchCountLocal = searchCount.current;\n\n    fetch(ENDPOINT_SEARCH(query, requestedPage, ignoreDiacritics, searchRelatedForms))\n      .then((res) => res.json())\n      .then((data) => {\n        if(searchCountLocal === searchCount.current) {\n          setResultSet(data);\n          setSearching(false);\n          setError(null);\n        }\n      })\n      .catch((e) => {\n        setError(e.toString());\n        setSearching(false);\n        setResultSet(null);\n      });\n  };\n\n  useEffect(() => {\n    // Use the searched key to determine if we have already searched for this page\n    if (location.key !== searchedKey) {\n      setSearchedKey(location.key);\n      executeSearch(getParamOrDefault(queryParams, 'page', page, CONVERT_INT));\n    }\n\n    // Remember what the history state was so that we can link back to the reading page\n    if (!linkBackURL && location.state && location.state.work) {\n      setLinkBackURL(READ_WORK(location.state.work, null, ...location.state.divisions));\n    }\n  });\n\n  const goBack = () => {\n    if (page > 1) {\n      doSearch(page - 1);\n    }\n  };\n\n  const goNext = () => {\n    if (page < lastPage) {\n      doSearch(page + 1);\n    }\n  };\n\n  const onKeyPressed = (event) => {\n    if (event.key === 'Enter') {\n      doSearch(1);\n    }\n  };\n\n  const onClickBack = () => {\n    if (linkBackURL) {\n      history.push(linkBackURL);\n    } else {\n      history.push(READ_WORK());\n    }\n  };\n\n  // Figure out what mode the page is in\n  let mode = MODE_NOT_STARTED;\n\n  if (searching) {\n    mode = MODE_SEARCHING;\n  } else if (error) {\n    mode = MODE_ERROR;\n  } else if (resultSet && resultSet.result_count === 0) {\n    mode = MODE_NO_RESULTS;\n  } else if (resultSet && resultSet.result_count > 0) {\n    mode = MODE_RESULTS;\n  }\n\n  // Create a custom className for signaling the desire to switch to inverted\n  let classNameSuffix = '';\n\n  if (inverted) {\n    classNameSuffix = ' inverted';\n  }\n\n  // Create the list of tab panes to show\n  const panes = [\n    {\n      menuItem: 'Results',\n      render: () => searchResultsByMode(\n        mode, resultSet, page, lastPage, goBack, goNext, error, inverted, ENDPOINT_SEARCH(query, 1, searchRelatedForms, ignoreDiacritics, true, 1000)\n      ),\n    },\n    {\n      menuItem: 'Matched words',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && Object.keys(resultSet.matched_terms).length > 0 && (\n            <BarChart\n              results={resultSet.matched_terms}\n              title=\"Frequency of matched words\"\n              noDataMessage=\"No data available on matched terms\"\n              inverted={inverted}\n            />\n          )}\n          {(!resultSet || Object.keys(resultSet.matched_terms).length === 0) && (\n            <Message info className={classNameSuffix}>\n              No data available on matched terms\n            </Message>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Matched works',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && Object.keys(resultSet.matched_works).length > 0 && (\n            <BarChart\n              results={resultSet.matched_works}\n              title=\"Frequency of matched works\"\n              noDataMessage=\"No data available on matched works\"\n              inverted={inverted}\n            />\n          )}\n          {(!resultSet || Object.keys(resultSet.matched_works).length === 0) && (\n            <Message info className={classNameSuffix}>\n              No data available on matched works\n            </Message>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Matched sections',\n      render: () => (\n        <Tab.Pane inverted={inverted}>\n          {resultSet && Object.keys(resultSet.matched_sections).length > 0 && (\n            <BarChart\n              results={resultSet.matched_sections}\n              title=\"Frequency of matched sections\"\n              noDataMessage=\"No data available on matched sections\"\n              inverted={inverted}\n            />\n          )}\n          {(!resultSet || Object.keys(resultSet.matched_sections).length === 0) && (\n            <Message info className={classNameSuffix}>\n              No data available on matched sections\n            </Message>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Help',\n      render: () => <Tab.Pane inverted={inverted}><SearchHelp inverted={inverted} /></Tab.Pane>,\n    },\n  ];\n\n  return (\n    <FullscreenDialog inverted={inverted} onClickBack={onClickBack} backTitle=\"Back to the Library\">\n      <Container>\n        <Input\n          action={\n            (\n              <Button\n                onClick={() => doSearch(1)}\n                basic\n                inverted={inverted}\n              >\n                Go\n              </Button>\n            )\n          }\n          inverted={inverted}\n          placeholder=\"Enter the text to search for (e.g. νόμου or no/mou)\"\n          value={query}\n          onChange={(e, d) => setQuery(d.value)}\n          onKeyPress={(e) => onKeyPressed(e)}\n          style={{ width: '100%' }}\n        />\n        <Checkbox className={className} style={CheckboxStyle} label=\"Search ignoring diacritics\" checked={ignoreDiacritics} onChange={(e, d) => setIgnoreDiacritics(d.checked)} />\n        <Checkbox className={className} style={CheckboxStyle} label=\"Search related Greek forms (slower but more thorough)\" checked={searchRelatedForms} onChange={(e, d) => setSearchRelatedForms(d.checked)} />\n        <Tab className={className} panes={panes} />\n      </Container>\n    </FullscreenDialog>\n  );\n}\n\nSearch.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n  inverted: PropTypes.bool,\n};\n\nSearch.defaultProps = {\n  inverted: false,\n};\n\nexport default withRouter(Search);\n"],"sourceRoot":""}